[{"/Users/moonhahyeon/git/FrontEnd/src/index.js":"1","/Users/moonhahyeon/git/FrontEnd/src/reportWebVitals.js":"2","/Users/moonhahyeon/git/FrontEnd/src/App.js":"3","/Users/moonhahyeon/git/FrontEnd/src/routes/instructor.js":"4","/Users/moonhahyeon/git/FrontEnd/src/routes/user.js":"5","/Users/moonhahyeon/git/FrontEnd/src/routes/notLogin.js":"6","/Users/moonhahyeon/git/FrontEnd/src/routes/administrator.js":"7","/Users/moonhahyeon/git/FrontEnd/src/components/layout/common.js":"8","/Users/moonhahyeon/git/FrontEnd/src/components/layout/admin.js":"9","/Users/moonhahyeon/git/FrontEnd/src/components/layout/main.js":"10","/Users/moonhahyeon/git/FrontEnd/src/components/pages/notFound.js":"11","/Users/moonhahyeon/git/FrontEnd/src/components/pages/home.js":"12","/Users/moonhahyeon/git/FrontEnd/src/components/pages/notice.js":"13","/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/instructor.js":"14","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/user.js":"15","/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/date.js":"16","/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/application.js":"17","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/profile.js":"18","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/churchTemp.js":"19","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/contact.js":"20","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/visitDiary.js":"21","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/feedback.js":"22","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/academyDate.js":"23","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/church.js":"24","/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/subject.js":"25","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/lecture.js":"26","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/main.js":"27","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/instructor.js":"28","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/userContacted.js":"29","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/visitDiary.js":"30","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/lecture.js":"31","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/phrase.js":"32","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/users.js":"33","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/category.js":"34","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/administrator.js":"35","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/contact.js":"36","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/statistics.js":"37","/Users/moonhahyeon/git/FrontEnd/src/components/modules/menu/main.js":"38","/Users/moonhahyeon/git/FrontEnd/src/components/modules/menu/common.js":"39","/Users/moonhahyeon/git/FrontEnd/src/components/modules/menu/admin.js":"40","/Users/moonhahyeon/git/FrontEnd/src/components/modules/footer/footer.js":"41","/Users/moonhahyeon/git/FrontEnd/src/components/modules/footer/main_footer.js":"42","/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/read_calendar.js":"43","/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/lecture_daily_calendar.js":"44","/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/white_button.js":"45","/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/admin_grey_btn.js":"46","/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/admin_white_btn.js":"47","/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/admin_blue_btn.js":"48","/Users/moonhahyeon/git/FrontEnd/src/components/modules/modal/common.js":"49","/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/lecture_calendar.js":"50","/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/common.js":"51","/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/blue_button.js":"52","/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/crud_calendar.js":"53"},{"size":375,"mtime":1646359310768,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1646359310768,"results":"56","hashOfConfig":"55"},{"size":2246,"mtime":1646733574988,"results":"57","hashOfConfig":"55"},{"size":1990,"mtime":1646359310768,"results":"58","hashOfConfig":"55"},{"size":1832,"mtime":1646359310768,"results":"59","hashOfConfig":"55"},{"size":1235,"mtime":1646359310768,"results":"60","hashOfConfig":"55"},{"size":2868,"mtime":1646359310768,"results":"61","hashOfConfig":"55"},{"size":2558,"mtime":1646359310764,"results":"62","hashOfConfig":"55"},{"size":3042,"mtime":1646359310763,"results":"63","hashOfConfig":"55"},{"size":678,"mtime":1646359310764,"results":"64","hashOfConfig":"55"},{"size":196,"mtime":1646359310768,"results":"65","hashOfConfig":"55"},{"size":21666,"mtime":1646359310767,"results":"66","hashOfConfig":"55"},{"size":15660,"mtime":1646359310768,"results":"67","hashOfConfig":"55"},{"size":26741,"mtime":1646359310767,"results":"68","hashOfConfig":"55"},{"size":22011,"mtime":1646359310768,"results":"69","hashOfConfig":"55"},{"size":20814,"mtime":1646359310767,"results":"70","hashOfConfig":"55"},{"size":27358,"mtime":1646359310767,"results":"71","hashOfConfig":"55"},{"size":14250,"mtime":1646359310768,"results":"72","hashOfConfig":"55"},{"size":19705,"mtime":1646359310766,"results":"73","hashOfConfig":"55"},{"size":21539,"mtime":1646359310767,"results":"74","hashOfConfig":"55"},{"size":13123,"mtime":1646359310768,"results":"75","hashOfConfig":"55"},{"size":16358,"mtime":1646359310766,"results":"76","hashOfConfig":"55"},{"size":14195,"mtime":1646359310765,"results":"77","hashOfConfig":"55"},{"size":41617,"mtime":1646359310765,"results":"78","hashOfConfig":"55"},{"size":27592,"mtime":1646359310767,"results":"79","hashOfConfig":"55"},{"size":58606,"mtime":1646359310766,"results":"80","hashOfConfig":"55"},{"size":41014,"mtime":1646359310766,"results":"81","hashOfConfig":"55"},{"size":33892,"mtime":1646359310766,"results":"82","hashOfConfig":"55"},{"size":22331,"mtime":1646359310768,"results":"83","hashOfConfig":"55"},{"size":15357,"mtime":1646359310767,"results":"84","hashOfConfig":"55"},{"size":52676,"mtime":1646359310768,"results":"85","hashOfConfig":"55"},{"size":9221,"mtime":1646359310766,"results":"86","hashOfConfig":"55"},{"size":7012,"mtime":1646359310766,"results":"87","hashOfConfig":"55"},{"size":13961,"mtime":1646359310765,"results":"88","hashOfConfig":"55"},{"size":9858,"mtime":1646359310765,"results":"89","hashOfConfig":"55"},{"size":46550,"mtime":1646359310766,"results":"90","hashOfConfig":"55"},{"size":16106,"mtime":1646359310766,"results":"91","hashOfConfig":"55"},{"size":10439,"mtime":1646359310765,"results":"92","hashOfConfig":"55"},{"size":11607,"mtime":1646359310765,"results":"93","hashOfConfig":"55"},{"size":16243,"mtime":1646359310765,"results":"94","hashOfConfig":"55"},{"size":964,"mtime":1646359310764,"results":"95","hashOfConfig":"55"},{"size":1001,"mtime":1646359310765,"results":"96","hashOfConfig":"55"},{"size":18125,"mtime":1646359310764,"results":"97","hashOfConfig":"55"},{"size":15917,"mtime":1646359310764,"results":"98","hashOfConfig":"55"},{"size":474,"mtime":1646359310764,"results":"99","hashOfConfig":"55"},{"size":369,"mtime":1646359310764,"results":"100","hashOfConfig":"55"},{"size":439,"mtime":1646359310764,"results":"101","hashOfConfig":"55"},{"size":325,"mtime":1646359310764,"results":"102","hashOfConfig":"55"},{"size":1768,"mtime":1646359310765,"results":"103","hashOfConfig":"55"},{"size":9523,"mtime":1646359310764,"results":"104","hashOfConfig":"55"},{"size":8262,"mtime":1646359310764,"results":"105","hashOfConfig":"55"},{"size":487,"mtime":1646359310764,"results":"106","hashOfConfig":"55"},{"size":11124,"mtime":1646359310764,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1vfocxf",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},"/Users/moonhahyeon/git/FrontEnd/src/index.js",[],["222","223"],"/Users/moonhahyeon/git/FrontEnd/src/reportWebVitals.js",[],"/Users/moonhahyeon/git/FrontEnd/src/App.js",["224","225"],"/Users/moonhahyeon/git/FrontEnd/src/routes/instructor.js",[],"/Users/moonhahyeon/git/FrontEnd/src/routes/user.js",[],"/Users/moonhahyeon/git/FrontEnd/src/routes/notLogin.js",[],"/Users/moonhahyeon/git/FrontEnd/src/routes/administrator.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/layout/common.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/layout/admin.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/layout/main.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/notFound.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/home.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/notice.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/instructor.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/user.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/date.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/application.js",["226"],"import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport DataListInput from \"react-datalist-input\";\nimport Postcode from '@actbase/react-daum-postcode';\nimport { Link } from 'react-router-dom';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/Application.css';\nimport BlueButton from '../../modules/button/blue_button';\nimport WhiteButton from '../../modules/button/white_button';\nimport CommonModal from '../../modules/modal/common';\n\n\nconst LectureApplication = (props) => {\n    // const [category, setCategory] = useState('subject');\n\n    // const [selectedLecture, setSelectedLecture] = useState(null);\n    // const [backgroundUrl, setBackgroundUrl] = useState('/image/application.jpeg');\n    // lecture_id는 props로\n    const [application, setApplication] = useState({ user_id:window.sessionStorage.getItem('id'), lecture_id: \"\", lecture_date_id: \"\", church_id: \"\", memo: \"\", admin_phone:\"\", admin_name:\"\", admin_email:\"\", email:\"\", attendee_number:\"50\", timezone:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n    const [churchInfo, setchurchInfo] = useState(null)\n    const [lectureDates, setlectureDates] = useState(null)\n    const [churchData, setchurchData] = useState([])\n    const [selectChurch, setselectChurch] = useState(null)\n    // const [selectedDate, setSelectedDate] = useState(new Date());\n    const [morning, setmorning] = useState(false)\n    const [afternoon, setafternoon] = useState(false)\n    const [dinner, setdinner] = useState(false)\n    const [isAgree, setisAgree] = useState(false)\n    const [newChurchAdd, setnewChurchAdd] = useState(false)\n    // eslint-disable-next-line no-unused-vars\n    const [zip_code, setzip_code] = useState(\"\")\n    // eslint-disable-next-line no-unused-vars\n    const [addr1, setaddr1] = useState(\"\")\n    // eslint-disable-next-line no-unused-vars\n    const [addr2, setaddr2] = useState(\"\")\n    const [isModal, setModal] = useState(false);\n    const [settingInfo, setsettingInfo] = useState(null);\n    let submitFlag = false;\n\n    function submitCheck(){\n        if(submitFlag){\n            return submitFlag;\n        }else{\n            submitFlag = true;\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        readChurchInfo();\n        readLectureDate();\n        readSettingInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setApplication({\n            ...application,\n            lecture_id: props.location.state.lecture\n        });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.location.state.lecture])\n\n    useEffect(() => {\n        var churchArray = [];\n        if(churchInfo !== null) {\n            for(var i=0 ; i<churchInfo.length ; i++) {\n                churchArray.push({label:churchInfo[i].name, key:churchInfo[i].id})\n            }\n            setchurchData(churchArray);\n        }\n    }, [churchInfo])\n\n    useEffect(() => {\n        if(selectChurch !== null) {\n            setApplication({\n                ...application,\n                church: selectChurch.name,\n                addr1: selectChurch.addr1,\n                addr2: selectChurch.addr2,\n                city: selectChurch.city,\n                district: selectChurch.district,\n                zip_code: selectChurch.zip_code,\n                pastor: selectChurch.pastor,\n                phone: selectChurch.phone,\n                email: selectChurch.email\n            });\n            setzip_code(selectChurch.zip_code)\n            setaddr1(selectChurch.addr1)\n            setaddr2(selectChurch.addr2)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectChurch])\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)\n        \n    }\n\n    const readChurchInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/user', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setchurchInfo(response.data)\n    }\n\n    \n    const readLectureDate = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate', {\n                params: {\n                    lecture_id: props.location.state.lecture.id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        if(response.data.length === 0 ){\n            setlectureDates(null);\n            setApplication({\n                ...application,\n                lecture_date_id: 0\n            });\n        }else{\n            var value = response.data;\n            var week = ['일', '월', '화', '수', '목', '금', '토'];\n            for(var i=0; i<value.length; i++){\n                var dayOfWeek = week[new Date(value[i].date).getDay()];\n                value[i].date = value[i].date + \" (\"+dayOfWeek+\")\";\n            }\n            setApplication({\n                ...application,\n                lecture_date_id: response.data[0].id\n            });\n            setlectureDates(value);\n        }\n    }\n\n    const handleChange = (selectedItem) => {\n        setselectChurch(null);\n        setzip_code(\"\")\n        setaddr1(\"\")\n        setaddr2(\"\")\n\n        setApplication({\n            ...application,\n            church_id: selectedItem.key\n        });\n        setselectChurch(churchInfo.find(element => element.id === selectedItem.key))\n        \n    };\n\n    const closeModal = () => {\n        setModal(false);\n    }\n\n    const setMorning = () => {\n        if(morning)\n            setmorning(false)\n        else\n            setmorning(true)\n    }\n    const setAfternoon = () => {\n        if(afternoon)\n            setafternoon(false)\n        else\n            setafternoon(true)\n    }\n    const setDinner = () => {\n        if(dinner)\n            setdinner(false)\n        else\n            setdinner(true)\n    }\n\n    const setIsAgree = () => {\n        if(isAgree)\n            setisAgree(false)\n        else\n            setisAgree(true)\n    }\n    const clickAddBtn = () => {\n        setselectChurch(null);\n\n        if(newChurchAdd) {\n            setnewChurchAdd(false)\n            setApplication({\n                ...application,\n                church: \"\",\n                addr1: \"\",\n                addr2: \"\",\n                city: \"\",\n                district: \"\",\n                zip_code: \"\",\n                pastor: \"\",\n                phone: \"\",\n                email: \"\",\n                church_id: 0\n            });\n        }\n        else {\n            setnewChurchAdd(true)\n            setApplication({\n                ...application,\n                church: \"\",\n                addr1: \"\",\n                addr2: \"\",\n                city: \"\",\n                district: \"\",\n                zip_code: \"\",\n                pastor: \"\",\n                phone: \"\",\n                email: \"\",\n                church_id: 0\n            });\n        }\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n        if(name === \"zip_code\")\n            setzip_code(value)\n        if(name === \"addr1\")\n            setaddr1(value)\n        if(name === \"addr2\")\n            setaddr2(value)\n\n        setApplication({\n            ...application,\n            [name]: value\n        });\n    };\n\n    const submitApplication = async () => {\n\n        var timezone = \"\";\n        if(morning)\n            timezone += \"오전 \";\n        if(afternoon)\n            timezone += \"오후 \";\n        if(dinner)\n            timezone += \"저녁 \";\n    \n        if(timezone === \"\" || application.addr1 === \"\" || application.addr2 === \"\" || application.admin_name === \"\" || application.admin_phone === \"\" || application.attendee_number === \"\" || application.attendee_target === \"\" || application.church_id === \"\" || application.lecture_date_id === \"\" || application.zip_code === \"\") {\n            alert(\"신청서 정보를 모두 입력해주세요!\")\n            return;\n        }\n\n        if(props.location.state.lecture.date === null && application.memo === \"\") {\n            alert(\"일정과 관련한 요청 사항을 입력해주세요!\");\n            return;\n        }\n\n        if(!isAgree) {\n            alert(\"개인정보 활용에 동의해주세요!\");\n            return ;\n        }\n\n        var attendee_target = [];\n        if(application.attendeeTarget[0]===1) attendee_target.push(\"유아\");\n        if(application.attendeeTarget[1]===1) attendee_target.push(\"초등학생\");\n        if(application.attendeeTarget[2]===1) attendee_target.push(\"중학생\");\n        if(application.attendeeTarget[3]===1) attendee_target.push(\"고등학생\");\n        if(application.attendeeTarget[4]===1) attendee_target.push(\"청년\");\n        if(application.attendeeTarget[5]===1) attendee_target.push(\"중년\");\n        if(application.attendeeTarget[6]===1) attendee_target.push(\"장년\");\n        if(application.attendeeTarget[7]===1) attendee_target.push(\"노년\");\n        attendee_target = attendee_target.join(',');\n\n        if(submitCheck()){\n            alert(\"강의를 신청하는 중입니다.\");\n            return;\n        }\n        \n        var params = new URLSearchParams();\n        params.append('user_id', window.sessionStorage.getItem('id'));\n        params.append('name', application.name);\n        params.append('church_id', application.church_id);\n        params.append('district', application.district);\n        params.append('city', application.city);\n        params.append('zip_code', application.zip_code);\n        params.append('addr1', application.addr1);\n        params.append('addr2', application.addr2);\n        params.append('pastor', application.pastor);\n        params.append('phone', application.phone);\n        params.append('email', application.email);\n        params.append('lecture_id', props.location.state.lecture.id);\n        params.append('lecture_date_id', application.lecture_date_id);\n        params.append('memo', application.memo);\n        params.append('admin_phone', application.admin_phone);\n        params.append('admin_name', application.admin_name);\n        params.append('admin_email', application.admin_email);\n        params.append('attendee_number', application.attendee_number);\n        params.append('attendee_target', attendee_target);\n        params.append('timezone', timezone);\n        params.append('inst_email', props.location.state.lecture.instructor_email);\n        if(application.lecture_date_id === 0)\n            params.append('date', \"추후협의\");\n        else\n            params.append('date', lectureDates.find(element => parseInt(element.id) === parseInt(application.lecture_date_id)).date);\n        params.append('lecture_name', props.location.state.lecture.name);\n        params.append('church_name', application.church);\n        params.append('link', process.env.REACT_APP_HOMEPAGE);\n        params.append('church', application.church);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"강의를 신청하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'application',\n            params,\n            ).then(function(res) {\n                document.location.href = process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\";\n                alert(\"신청서가 등록되었습니다.\");\n            });\n        }\n    }\n\n    const selectPostCode = (data) => {\n        setApplication({\n            ...application,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n        setzip_code(data.zonecode);\n        setaddr1(data.address);\n    }\n\n    const clickTarget = (index) => {\n        var tempTarget = application.attendeeTarget;\n        if(tempTarget[index] === 0){\n            tempTarget[index] = 1;\n        } else {\n            tempTarget[index] = 0;\n        }            \n        setApplication({\n            ...application,\n            attendeeTarget: tempTarget\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/application.jpeg'} alt=\"lecture page\" \n                onError={(e) => {\n                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                }}/>\n                <div className=\"page-info\">\n                    <h2 className=\"white_color\">신청서 작성하기</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"application_page_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>일자별</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <div>\n                        <div className=\"form-wrapper\">\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">강의명</span>\n                                <span>{props.location.state.lecture.name}</span>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">강사명</span>\n                                <span>{props.location.state.lecture.instructor_name}</span>\n                            </div>\n                            <hr className=\"mb30\"/>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">교회명</span>\n                                {newChurchAdd ?\n                                <input className=\"form-input\" type=\"text\" placeholder=\"추가할 교회명\" name=\"church\" onChange={onAdd}/>\n                                :\n                                churchData !== null ?\n                                <DataListInput\n                                style={{width:\"100px\"}}\n                                placeholder=\"교회명을 입력하고 선택하세요.\"\n                                items={churchData}\n                                onSelect={handleChange}\n                                />\n                                :\n                                null\n                                }\n                                {newChurchAdd ?\n                                <BlueButton class=\"blue-btn\" name=\"교회 목록 보기\" click={clickAddBtn}/>\n                                :\n                                <BlueButton class=\"blue-btn\" name=\"새로운 교회 추가\" click={clickAddBtn}/>\n                                }\n\n                            </div>\n                            <CommonModal open={isModal} close={closeModal} header=\"주소 찾기\" footer=\"닫기\"> \n                                <Postcode\n                                    style={{ width: 320, height: 320 }}\n                                    jsOptions={{ animated: true, hideMapBtn: true }}\n                                    onSelected={data => {\n                                        selectPostCode(data);\n                                        setModal(false);\n                                    }}\n                                />\n                            </CommonModal>\n\n                            \n                            <div className=\"mb15\">\n                                <span className=\"form-title\">주소 검색</span>\n                                <input readOnly placeholder=\"우편번호\" className=\"form-addr mr10\" value={application.zip_code} name=\"zip_code\" onChange={onAdd}/> \n                                <BlueButton click={() => setModal(true)} name=\"주소찾기\" class=\"blue-btn\"/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\"></span>\n                                <input readOnly placeholder=\"주소\" className=\"form-addr\" value={application.addr1} name=\"addr1\" onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb35\">\n                                <span className=\"form-title\"></span>\n                                <input placeholder=\"세부주소\" className=\"form-addr\" name=\"addr2\" onChange={onAdd} value={application.addr2}/>\n                            </div>\n\n                            {newChurchAdd &&\n                            <span>\n                                <div className=\"mb15\">\n                                    <span className=\"form-title\">담임 목사</span>\n                                    <input className=\"form-input\" name=\"pastor\" placeholder=\"담임 목사 이름\" value={application.pastor} onChange={onAdd}/>\n                                </div>\n                                <div className=\"mb15\">\n                                    <span className=\"form-title\">대표 연락처</span>\n                                    <input className=\"form-input\" name=\"phone\" placeholder=\"교회 대표 연락처\" value={application.phone} onChange={onAdd}/>\n                                </div>\n                                <div className=\"mb30\">\n                                    <span className=\"form-title\">대표 이메일</span>\n                                    <input className=\"form-input\" name=\"email\" placeholder=\"교회 대표 이메일\" value={application.email} onChange={onAdd}/>\n                                </div>\n                            </span>\n                            }\n                            {/* <div className=\"mb15\">\n                                <span className=\"form-title\">담임 목사</span>\n                                <input className=\"form-input\" name=\"pastor\" placeholder=\"담임 목사 이름\" value={application.pastor} onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">대표 연락처</span>\n                                <input className=\"form-input\" name=\"phone\" placeholder=\"교회 대표 연락처\" value={application.phone} onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb30\">\n                                <span className=\"form-title\">대표 이메일</span>\n                                <input className=\"form-input\" name=\"email\" placeholder=\"교회 대표 이메일\" value={application.email} onChange={onAdd}/>\n                            </div> */}\n                            <hr className=\"m30 mb30\"/>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">담당자 이름</span>\n                                <input className=\"form-input\" name=\"admin_name\" onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">담당자 휴대전화</span>\n                                <input className=\"form-input\" name=\"admin_phone\" onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb30\">\n                                <span className=\"form-title\">담당자 이메일(선택)</span>\n                                <input className=\"form-input\" name=\"admin_email\" onChange={onAdd}/>\n                            </div>\n                            <hr className=\"m30\"/>\n                            <div className=\"select-wrapper\">\n                                <div style={{gridColumn:'1 / span 2'}}>\n                                    <span className=\"form-title\">강의 대상</span>\n                                    <span>\n                                        <span className={application !== null && application.attendeeTarget[0]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(0)}>유아</span>\n                                        <span className={application !== null && application.attendeeTarget[1]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(1)}>초등학생</span>\n                                        <span className={application !== null && application.attendeeTarget[2]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(2)}>중학생</span>\n                                        <span className={application !== null && application.attendeeTarget[3]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(3)}>고등학생</span>\n                                        <span className={application !== null && application.attendeeTarget[4]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(4)}>청년</span>\n                                        <span className={application !== null && application.attendeeTarget[5]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(5)}>중년</span>\n                                        <span className={application !== null && application.attendeeTarget[6]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(6)}>장년</span>\n                                        <span className={application !== null && application.attendeeTarget[7]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(7)}>노년</span>\n                                    </span>\n                                </div>\n                                <div>\n                                    <span className=\"form-title\">청강자 수</span>\n                                    <select className=\"form-input\" name=\"attendee_number\" defaultValue={application.attendee_number} onChange={onAdd}>\n                                        <option>50</option>\n                                        <option>100</option>\n                                        <option>200</option>\n                                        <option>500</option>\n                                        <option>1000</option>\n                                        <option>1000</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    <span className=\"form-title\">강의 희망날짜</span>\n                                    <select className=\"form-input\" name=\"lecture_date_id\" defaultValue={application.lecture_date_id} onChange={onAdd}>\n                                    {lectureDates !== null ?\n                                    lectureDates.map((date, i) => <option key={i} value={date.id}>{date.date}</option>)\n                                    : <option>추후 협의</option>\n                                    // : <option style={{width:'240px'}}>아래 요청 사항에 희망 일정을 입력해주세요.</option>\n                                    }\n                                    </select>\n                                </div>\n                                <div style={{display:\"flex\"}}>\n                                    <span className=\"form-title\">원하는 시간대</span>\n                                    <WhiteButton class={morning ? \"application-time application-time-select\" : \"application-time\"} name=\"오전\" click={setMorning}/>\n                                    <WhiteButton class={afternoon ? \"application-time application-time-select\" : \"application-time\"} name=\"오후\" click={setAfternoon}/>\n                                    <WhiteButton class={dinner ? \"application-time application-time-select\" : \"application-time\"} name=\"저녁\" click={setDinner}/>\n                                </div>\n\n                            </div>\n                            <textarea className=\"form-textarea\" placeholder=\"요청 사항 / 컨택 포인트 작성란&#13;&#10;강의 희망 날짜가 추후 협의인 경우, 이 곳에 희망 일정을 입력해주세요.\" name=\"memo\" onChange={onAdd}></textarea>\n\n                            <ul className=\"agree-ul mb40\">\n                                <li className=\"mb10\">\n                                    {settingInfo !== null ?\n                                    settingInfo.find(element => element.key === \"agree_personal_information_1\").value.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) :\n                                    \"\"\n                                    }\n                                </li>\n                                <li>\n                                    {settingInfo !== null ?\n                                    settingInfo.find(element => element.key === \"agree_personal_information_2\").value.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) :\n                                    \"\"\n                                    }\n                                </li>\n                            </ul>\n                            <div className=\"mb40\">\n                                <input className=\"agree-check mr10\" type=\"checkbox\" onClick={setIsAgree}/>\n                                <span className=\"fs14\" style={{display:\"inline-block\"}}>\n                                    {settingInfo !== null ?\n                                    settingInfo.find(element => element.key === \"agree_personal_information_3\").value.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) :\n                                    \"\"\n                                    }\n                                </span>\n                            </div>\n\n                            </div>\n                        </div>\n                        <div className=\"center mt40\">\n                            <BlueButton name=\"작성 완료\" click={submitApplication}/>\n                        </div>\n                    </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default LectureApplication;\n","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/profile.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/churchTemp.js",["227","228"],"\nimport React, {useState, useEffect} from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_lecture.css';\nimport '../../../assets/css/admin_church.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\nfunction AdminChurchTemp() {\n\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [churchTempData, setChurchTempData] = useState(null);\n    const [selectedChurchTemp, setSelectedChurchTemp] = useState(null);\n    const [keyword, setKeyword] = useState(null);\n\n    function clickChurch(data) {\n        if(selectedChurchTemp !== null && data.id === selectedChurchTemp.id) {\n            setSelectedChurchTemp(null);\n        } else {\n            setSelectedChurchTemp(data);\n        }\n    }\n\n    useEffect(() => {\n        readChurchTempData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    const readChurchTempData = async() => {\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church/temp',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setChurchTempData(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church/temp', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setChurchTempData(response.data);\n        }\n        setKeyword(null);\n        setSelectedChurchTemp(null);\n    }\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const acceptTemp = async() => {\n        var params = new URLSearchParams();\n        params.append('user_id', window.sessionStorage.getItem('id'));\n        params.append('id', selectedChurchTemp.id);\n        params.append('new_name', selectedChurchTemp.new_name);\n        params.append('new_district', selectedChurchTemp.new_district);\n        params.append('new_zip_code', selectedChurchTemp.new_zip_code);\n        params.append('new_addr1', selectedChurchTemp.new_addr1);\n        params.append('new_addr2', selectedChurchTemp.new_addr2);\n        params.append('new_pastor', selectedChurchTemp.new_pastor);\n        params.append('new_email', selectedChurchTemp.new_email);\n        params.append('new_phone', selectedChurchTemp.new_phone);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"교회 정보를 수정하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/confirmChurchTemp',\n            params,\n            ).then(function(res) {\n                alert(\"교회 정보가 수정되었습니다.\");\n                readChurchTempData();\n                setSelectedChurchTemp(null);\n            });\n        }\n    }\n\n    const rejectTemp = () => {\n        var value = false;\n        if(selectedChurchTemp.church_id === 0){ //church_status로 변경 예정 0 인 경우!!\n            value = window.confirm(\"등록된 적 없는 교회이므로 수락하지 않을 시 이 교회에서 신청한 모든 강의가 취소됩니다. 변경 사항을 거절하시겠습니까?\")\n        }else {\n            value = window.confirm(\"이 교회에 대한 변경 사항을 거절하시겠습니까?\")\n        }\n        if(value) {\n            selectedChurchTemp.token = window.sessionStorage.getItem('token');\n            selectedChurchTemp.manageID = window.sessionStorage.getItem('id');\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'church/temp',\n                    method: 'put',\n                    data: selectedChurchTemp\n                }\n            ).then(function(res) {\n                alert(\"교회에 대한 변경 사항이 삭제되었습니다.\");\n                readChurchTempData();\n                setSelectedChurchTemp(null);\n            }).catch(function(error) {\n                console.log(error)\n            })\n        }\n    }\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = churchTempData.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"churchTemp\";\n        const ws = XLSX.utils.json_to_sheet(churchTempData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const acceptNewChurch = async() => {\n        var params = new URLSearchParams();\n        params.append('userId', window.sessionStorage.getItem('id'));\n        params.append('name', selectedChurchTemp.new_name);\n        params.append('city', selectedChurchTemp.new_city);\n        params.append('district', selectedChurchTemp.new_district);\n        params.append('zip_code', selectedChurchTemp.new_zip_code);\n        params.append('addr1', selectedChurchTemp.new_addr1);\n        params.append('addr2', selectedChurchTemp.new_addr2);\n        params.append('phone', selectedChurchTemp.new_phone);\n        params.append('email', selectedChurchTemp.new_email);\n        params.append('pastor', selectedChurchTemp.new_pastor);\n        params.append('writer_name', selectedChurchTemp.writer_name);\n        params.append('application_form_id', selectedChurchTemp.application_form_id);\n        params.append('id', selectedChurchTemp.id);\n        params.append('church_temp_id', selectedChurchTemp.id);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"새로운 교회를 수락하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/temp',\n            params,\n            ).then(function(res) {\n                alert(\"새로운 교회가 수락되었습니다.\");\n                readChurchTempData();\n                setSelectedChurchTemp(null);\n            });\n        }\n    }\n\n    return (\n    <div>\n        <p className=\"admin-title-header\">교회 관리</p>\n        <div className=\"admin-content-wrapper\">\n            <div className=\"table-wrapper mt0 relative\">\n                <p className=\"table-name mb40\">\n                    교회 정보 변경사항\n                    <GreyButton class=\"right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                </p>\n                <div className=\"mb20\">\n                    <input className=\"p48 mr15\" type=\"text\" placeholder=\"교회명, 주소, 사용자 이메일로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                    <GreyButton name=\"검색\" click={readChurchTempData}/>\n                </div>\n                {selectedChurchTemp !== null ?\n                <div className=\"mb50 church-info-wrapper\">\n                    <div className=\"original original-info\">\n                        <p className=\"original-title\">기존 정보</p>\n                        <div className=\"p25\">\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">교회명</span>\n                                <span>{selectedChurchTemp.name}</span>\n                            </div>\n                            <div className=\"church-padding mb8\">\n                                <span className=\"add-church-title\">주소 입력</span>\n                                <span>{selectedChurchTemp.addr1}</span>\n                            </div>\n                            <div className=\"church-padding mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.addr2}</span>\n                            </div>\n                            <div className=\"church-padding mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.zip_code}</span>\n                            </div>\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">담임 목사</span>\n                                <span>{selectedChurchTemp.pastor}</span>\n                            </div>\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">대표 연락처</span>\n                                <span>{selectedChurchTemp.phone}</span>\n                            </div>\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">대표 이메일</span>\n                                <span>{selectedChurchTemp.email}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"change-info\">\n                        <p className=\"change-title\">변경된 정보</p>\n                        <div className=\"p25\">\n                            <div className=\"church-flex\">\n                            <span className=\"add-church-title\">교회명</span>\n                                <span>{selectedChurchTemp.new_name === null ? \"변경 사항 없음\": selectedChurchTemp.new_name}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">주소 입력</span>\n                                <span>{selectedChurchTemp.new_addr1=== null ? \"변경 사항 없음\": selectedChurchTemp.new_addr1}</span>\n                            </div>\n                            <div className=\"church-flex mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.new_addr2=== null ? \"변경 사항 없음\": selectedChurchTemp.new_addr2}</span>\n                            </div>\n                            <div className=\"church-flex mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.new_zip_code=== null ? \"변경 사항 없음\": selectedChurchTemp.new_zip_code}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">담임 목사</span>\n                                <span>{selectedChurchTemp.new_pastor === null ? \"변경 사항 없음\": selectedChurchTemp.new_pastor}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">대표 연락처</span>\n                                <span>{selectedChurchTemp.new_phone === null ? \"변경 사항 없음\": selectedChurchTemp.new_phone}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">대표 이메일</span>\n                                <span>{selectedChurchTemp.new_email === null ? \"변경 사항 없음\": selectedChurchTemp.new_email}</span>\n                            </div>\n                            {selectedChurchTemp.status === 0 && selectedChurchTemp.church_id === 0 ?\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr10\" name=\"새로운 교회 수락\" click={acceptNewChurch}/>\n                                <GreyButton name=\"변경 내용 거절\" click = {rejectTemp}/>\n                            </div>:\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr10\" name=\"변경 내용 수락\" click = {acceptTemp}/>\n                                <GreyButton name=\"변경 내용 거절\" click = {rejectTemp}/>\n                            </div>\n                            }\n                            \n                            {/* <div>\n                                <span className=\"add-church-title\">교회명</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교단</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">한동대와 연관성</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" type=\"text\" placeholder=\"세부사항 입력\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 규모</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            <div>\n                                <span className=\"add-church-title\">담임 목사 성명</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">실무자 성명</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">실무자 연락처</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">주소 입력</span>\n                                <input className=\"p4\" type=\"text\" placeholder=\"국가\"/>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4 mr15\" placeholder=\"시 * 도\" type=\"text\"/>\n                                <input className=\"p4\" placeholder=\"시 * 군 * 구\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" placeholder=\"우편번호\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" placeholder=\"상세주소 입력\" type=\"text\"/>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            <div>\n                                <span className=\"add-church-title\">교회 연락처</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 이메일</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 홈페이지</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 팩스 번호</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div className=\"church-grid\">\n                                <span className=\"add-church-title\">메모 사항</span>\n                                <textarea className=\"h180 p4\"></textarea>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>:\n                null}\n\n                <div className=\"mt50 table-row-church\">\n                    <span className=\"th\">기존 교단</span>\n                    <span className=\"th\">기존 이름</span>\n                    <span className=\"th church-location\">기존 지역</span>\n                    <span className=\"th church-writer\">작성자</span>\n                    <span className=\"th church-date\">작성일자</span>\n                </div>\n\n\n                { churchTempData !== null && churchTempData.length !== 0 ?\n                    currentPosts(churchTempData).map((data, index) =>\n                        <div key={index}  className = {selectedChurchTemp !== null && selectedChurchTemp.id === data.id ? \"click-inst-row table-row-church\" : \"table-row-church\"} onClick = {() => {clickChurch(data)}}>\n                            <span className=\"td admin-subject\">{data.denomination}</span>\n                            <span className=\"td\">{data.new_name !== \"\" ? data.new_name : data.name !== \"\" ? data.name : \"\"}</span>\n                            <span className=\"td\">{data.new_addr1 !== \"\" ? data.new_addr1 : data.addr1 !== \"\" ? data.addr1 : \"\"}</span>\n                            <span className=\"td admin-date\">{data.admin_name}</span>\n                            <span className=\"td admin-loc\">{data.reg_date}</span>\n                        </div>\n                    )\n                    :\n                    <div className=\"no-content\">변경되거나 추가된 교회 정보가 없습니다.</div>\n                }\n            </div>\n            <Pagination\n                activePage={page}\n                itemsCountPerPage={postsPerPage}\n                totalItemsCount={churchTempData !== null ? churchTempData.length : 0}\n                pageRangeDisplayed={5}\n                prevPageText={\"‹\"}\n                nextPageText={\"›\"}\n                onChange={handlePageChange}\n            />\n        </div>\n    </div>\n    );\n}\n\nexport default AdminChurchTemp;\n","/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/contact.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/visitDiary.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/feedback.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/academyDate.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/church.js",["229"],"import React, {useState,useEffect} from \"react\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport Postcode from '@actbase/react-daum-postcode';\nimport Pagination from \"react-js-pagination\";\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_lecture.css';\nimport '../../../assets/css/admin_church.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport BlueButton from '../../modules/button/blue_button';\nimport CommonModal from '../../modules/modal/common';\n\nfunction AdminChurch() {\n    const [keyword, setKeyword] = useState(null);\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const [ isInsertModalOpen, setisInsertModalOpen ] = useState(false)\n    const [clickedChurch, setclickedChurch] = useState(null);\n    const [editChurch, seteditChurch] = useState(false);\n    const [editChurchInfo, seteditChurchInfo] = useState({userId:window.sessionStorage.getItem('id'), name:\"\", region_id:\"\", nation:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n    const [addChurchInfo, setaddChurchInfo] = useState({userId:window.sessionStorage.getItem('id') , name:\"\", region_id:\"\", nation:\"대한민국\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n    const [churchInfo, setchurchInfo] = useState(null)\n    const [isPostModal, setPostModal] = useState(false);\n    const [isPostCodeOpen, setisPostCodeOpen] = useState(false)\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [isShowDelete, setisShowDelete] = useState(false);\n    // excel upload\n    const [excelJSONData, setExcelJSONData] = useState(null);\n    const [errorCount, seterrorCount] = useState(0);\n    const excelFormat = {name:\"교회 이름 (필수)\", nation:\"대한민국(필수)\", city:\"경북 (필수)\", district:\"포항시 북구 (필수)\", zip_code:\"우편번호 (필수)\", addr1:\"경북 포항시 북구 흥해읍 한동로 558 (필수)\", addr2:\"뉴턴홀 (필수)\", phone:\"교회 번호 (필수)\", email:\"교회 이메일\", page_url:\"교회 홈페이지 주소\", fax:\"교회 팩스 번호\", size:\"교회 규모(명)\", denomination:\"교단\", pastor:\"담임목사\", admin_name:\"교회 담당자 이름\", hgu_yn:\"한동대와 연관성 여부\", hgu_memo:\"한동대와 연관성 세부정보\", memo:\"비고\"};\n\n    useEffect(() => {\n        readChurchInfo();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setPage(1);\n        setclickedChurch(null);\n    }, [isShowDelete])\n\n    useEffect(() => {\n        if(excelJSONData !== null) {\n            var count = 0;\n            excelJSONData.forEach(data => {\n                if(data.isValid === false)\n                    count++;\n            });\n            seterrorCount(count);\n        }\n    }, [excelJSONData])\n\n    const readChurchInfo = async () => {\n\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setchurchInfo(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setchurchInfo(response.data);\n        }\n        setKeyword(null);\n        setclickedChurch(null);\n    }\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    function clickChurch(church) {\n        if(clickedChurch === null || church !== clickedChurch) {\n            setclickedChurch(church);\n            seteditChurchInfo(church);\n            seteditChurch(false);\n        } else {\n            setclickedChurch(null);\n            seteditChurch(false);\n            seteditChurchInfo({name:\"\", region_id:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n        }\n    }\n\n    const openModal = () => {\n        setModalOpen(true);\n    }\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n    const insertModalOpen = () => {\n        setisInsertModalOpen(true);\n    }\n    const insertModalClose = () => {\n        setisInsertModalOpen(false);\n        setaddChurchInfo({userId:window.sessionStorage.getItem('id') , name:\"\", region_id:\"\", nation:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n    }\n    const editBtnClick = () => {\n        seteditChurch(true);\n    }\n    const cancelBtnClick = () => {\n        seteditChurch(false);\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n        setaddChurchInfo({\n            ...addChurchInfo,\n            [name]: value\n        });\n    };\n\n    const onEdit = (e) => {\n        const { value, name } = e.target;\n        seteditChurchInfo({\n            ...editChurchInfo,\n            [name]: value\n        });\n    };\n\n    const createChurch = async() => {\n        var params = new URLSearchParams();\n        params.append('userId', window.sessionStorage.getItem('id'));\n        params.append('name', addChurchInfo.name);\n        params.append('nation', addChurchInfo.nation);\n        params.append('district', addChurchInfo.district);\n        params.append('zip_code', addChurchInfo.zip_code);\n        params.append('addr1', addChurchInfo.addr1);\n        params.append('addr2', addChurchInfo.addr2);\n        params.append('phone', addChurchInfo.phone);\n        params.append('email', addChurchInfo.email);\n        params.append('page_url', addChurchInfo.page_url);\n        params.append('fax', addChurchInfo.fax);\n        params.append('size', addChurchInfo.size);\n        params.append('denomination', addChurchInfo.denomination);\n        params.append('pastor', addChurchInfo.pastor);\n        params.append('admin_name', addChurchInfo.admin_name);\n        params.append('hgu_yn', addChurchInfo.hgu_yn);\n        params.append('hgu_memo', addChurchInfo.hgu_memo);\n        params.append('memo', addChurchInfo.memo);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"교회를 추가하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church',\n            params,\n            ).then(function(res) {\n                alert(\"추가되었습니다.\");\n                readChurchInfo();\n                setaddChurchInfo({userId:window.sessionStorage.getItem('id') , name:\"\", region_id:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n                setisInsertModalOpen(false);\n            });\n        }\n    }\n\n    const updateChurch = async() => {\n        if(window.confirm(\"교회 정보를 수정하시겠습니까?\")) {\n            editChurchInfo.token = window.sessionStorage.getItem('token');\n            editChurchInfo.manageID = window.sessionStorage.getItem('id');\n            axios(\n                {\n                url: process.env.REACT_APP_RESTAPI_HOST+'church/churchId/'+window.sessionStorage.getItem('id'),\n                method: 'put',\n                data: editChurchInfo\n                }\n            ).then(function(res) {\n                alert(\"수정이 완료되었습니다.\");\n                readChurchInfo();\n                setclickedChurch(null)\n                seteditChurch(false)\n                seteditChurchInfo({name:\"\", region_id:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"});\n            })\n        }\n    }\n\n    const deleteChurch = async() => {\n        if(window.confirm(\"교회를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'church/delete',\n                    method: 'put',\n                    data: {\n                        church_id: clickedChurch.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readChurchInfo();\n                alert(\"삭제가 완료되었습니다.\")\n                setclickedChurch(null)\n            })\n        }\n    }\n\n    const recoverChurch = () => {\n        if(window.confirm(\"교회를 복구하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'church/recover',\n                    method: 'put',\n                    data: {\n                        church_id: clickedChurch.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readChurchInfo();\n                alert(\"복구가 완료되었습니다.\")\n                setclickedChurch(null)\n            })\n        }\n    }\n\n    function readExcel(event) {\n        seterrorCount(0);\n        let input = event.target;\n        let reader = new FileReader();\n        reader.onload = function () {\n            let data = reader.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n            workBook.SheetNames.forEach(function (sheetName) {\n                let rows = XLSX.utils.sheet_to_json(workBook.Sheets[sheetName]);\n                var changedData = [];\n                rows.forEach(data => {\n                    var temp = {\n                        name:data.name, \n                        nation: data.nation,\n                        zip_code:data.zip_code, \n                        city: data.city,\n                        district: data.district,\n                        addr1:data.addr1, \n                        addr2:data.addr2, \n                        phone:data.phone, \n                        email:data.email, \n                        page_url:data.page_url, \n                        fax:data.fax, \n                        size:data.size, \n                        denomination:data.denomination, \n                        pastor:data.pastor, \n                        admin_name:data.admin_name, \n                        hgu_yn:data.hgu_yn, \n                        hgu_memo:data.hgu_memo, \n                        writer_name:data.writer_name, \n                        memo:data.memo};\n\n                    for (var variable in temp) { \n                        if(temp[variable] === undefined) {\n                            temp[variable] = \"\";\n                        }   \n                    }\n                    if(temp['name'] === \"\" || temp['addr1'] === \"\" || temp['addr2'] === \"\" || temp['zip_code'] === \"\" || temp['phone'] === \"\") {\n                        temp.isValid = false;\n                    } else {\n                        temp.isValid = true;\n                    }\n                    changedData.push(temp);\n                });\n                setExcelJSONData(changedData);\n            })\n        };\n        if(input.files[0] !== undefined) {\n            reader.readAsBinaryString(input.files[0]);\n            openModal();\n            event.target.value = null;\n        }\n    }\n\n    const uploadExcelFile = async() => {\n        var params = new URLSearchParams();\n        params.append('data', JSON.stringify(excelJSONData));\n        \n        if(window.confirm(\"교회 정보를 업로드하시겠습니까?\")) {\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/excel/'+window.sessionStorage.getItem('id'),\n            params,\n            ).then(function(res) {\n                alert(\"엑셀 업로드가 완료되었습니다!\");\n                setModalOpen(false);\n                readChurchInfo();\n                setExcelJSONData(null);\n            });\n        }\n    }\n    \n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"church\";\n        const ws = XLSX.utils.json_to_sheet(churchInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const exportExcelForamt = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"church_format\";\n        const ws = XLSX.utils.json_to_sheet(excelFormat);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    const selectPostCode = (data) => {\n        setaddChurchInfo({\n            ...addChurchInfo,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n        setisPostCodeOpen(false);\n    }\n\n    const selectEditPostCode = (data) => {\n        seteditChurchInfo({\n            ...editChurchInfo,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n    }\n\n    const closePostModal = () => {\n        setPostModal(false);\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        if(isShowDelete){ // 삭제된 거 보여줄때   \n            currentPosts = churchInfo.filter(data => data.del_date !== null).slice(indexOfFirst, indexOfLast);\n        } else { // 전체 강의일 때\n            currentPosts = churchInfo.filter(data => data.del_date === null).slice(indexOfFirst, indexOfLast);\n        }\n        return currentPosts;\n    }\n\n    return (\n    <div>\n        <p className=\"admin-title-header\">교회 관리</p>\n        <div className=\"admin-content-wrapper\">\n            <div className=\"table-wrapper mt0 relative\">\n                <p className=\"table-name mb40\">\n                    {isShowDelete ? \"삭제된 교회 목록\" : \"교회 목록\"}\n                    <GreyButton class=\"right\" name=\"교회 추가하기\" click={insertModalOpen}/>\n                    <GreyButton class=\"right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    <GreyButton class=\"right mr10\" name=\"엑셀 업로드 포맷\" click={exportExcelForamt}/>\n\n                    <input\n                        type='file'\n                        accept='.xlsx'\n                        onChange={readExcel}\n                        id='uploadExcel'\n                        name='uploadExcel'\n                        style={{ display: 'none' }}\n                    />\n                    <label htmlFor='uploadExcel' className=\"grey-btn\">\n                        교회 정보 업로드\n                    </label>\n                </p>\n\n                <CommonModal open={isPostModal} close={closePostModal} func={closePostModal} header=\"주소 찾기\" footer=\"닫기\"> \n                    <Postcode\n                        style={{ width: 320, height: 320 }}\n                        jsOptions={{ animated: true, hideMapBtn: true }}\n                        onSelected={data => {\n                            selectEditPostCode(data);\n                            setPostModal(false);\n                        }}\n                    />\n                </CommonModal>\n\n                <CommonModal open={ isInsertModalOpen } close={ insertModalClose } func={createChurch} header=\"교회 추가하기\" footer=\"추가하기\">\n                    <div id=\"church-info\" className=\"lecture-info-wrapper mb40\">\n                        <div className=\"mt20\">\n                            <span className=\"add-church-title\">교회명</span>\n                            <input className=\"p4\" type=\"text\" name=\"name\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교단</span>\n                            <input className=\"p4\" type=\"text\" name=\"denomination\" onChange={onAdd}/>\n                        </div>\n                        {/* <div>\n                            <span className=\"add-church-title\">교단</span>\n                            <select className=\"w158 p4\">\n                                <option>교단</option>\n                            </select>\n                        </div> */}\n                        <div>\n                            <span className=\"add-church-title\">한동대와 연관성</span>\n                            <input className=\"p4 mr15\" placeholder=\"예) 한동대 후원 교회\" name=\"hgu_yn\" onChange={onAdd}/>\n                            <input className=\"p4 no-left-margin\" placeholder=\"세부사항 입력\"  name=\"hgu_memo\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 규모</span>\n                            <input className=\"p4 no-left-margin\" placeholder=\"예) 1000명 이상\"  name=\"size\" onChange={onAdd}/>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div>\n                            <span className=\"add-church-title\">담임 목사 성명</span>\n                            <input className=\"p4\" type=\"text\" name=\"pastor\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">실무자 성명</span>\n                            <input className=\"p4\" type=\"text\" name=\"admin_name\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">정보 제공자</span>\n                            <input className=\"p4\" type=\"text\" name=\"writer_name\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">주소 입력</span>\n                            <input className=\"church-addr no-left-margin w158 p4 mr15\" type=\"text\" placeholder=\"국가\" value={addChurchInfo.nation} name=\"nation\" onChange={onAdd}/>\n                            <input className=\"church-addr w158 p4 mr15\" type=\"text\" placeholder=\"시/도\" value={addChurchInfo.city} name=\"city\" onChange={onAdd}/>\n                            <input className=\"church-addr no-left-margin w158 p4 mr15\" placeholder=\"시/군/구\" type=\"text\" value={addChurchInfo.district} name=\"district\" onChange={onAdd}/>\n                        </div>\n\n                        <div className=\"mb8\" style={{position:'relative'}}>\n                            <span className=\"add-church-title\"></span>\n                            <input readOnly className=\"p4 mr15\" type=\"text\" placeholder=\"우편 번호\" value={addChurchInfo.zip_code} name=\"zip_code\" onChange={onAdd}/>\n                            {isPostCodeOpen ? \n                            <BlueButton click={() => setisPostCodeOpen(false)} name=\"주소창닫기\" class=\"blue-btn\"/>:\n                            <BlueButton click={() => setisPostCodeOpen(true)} name=\"주소찾기\" class=\"blue-btn\"/>\n                            }\n                            {isPostCodeOpen &&\n                            <Postcode\n                                style={{ width: 320, height: 320, position:'absolute', left:'170px' }}\n                                jsOptions={{ animated: true }}\n                                onSelected={data => selectPostCode(data)}\n                            />\n                            }\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"add-church-title\"></span>\n                            <input readOnly className=\"p4 w400\" type=\"text\" placeholder=\"주소\" name=\"addr1\" value={addChurchInfo.addr1} onChange={onAdd}/>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"add-church-title\"></span>\n                            <input className=\"p4 w400\" type=\"text\" placeholder=\"상세 주소 입력\" name=\"addr2\" onChange={onAdd}/>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div >\n                            <span className=\"add-church-title\">교회 연락처</span>\n                            <input className=\"p4\" type=\"text\" name=\"phone\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 이메일</span>\n                            <input className=\"p4\" type=\"text\" name=\"email\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 홈페이지</span>\n                            <input className=\"w400 p4\" type=\"text\" name=\"page_url\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 팩스 번호</span>\n                            <input className=\"w400 p4\" type=\"text\" name=\"fax\" onChange={onAdd}/>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div className=\"church-grid mb30\">\n                            <span className=\"add-church-title\">메모 사항</span>\n                            <textarea className=\"h180 p4\" name=\"memo\" onChange={onAdd}></textarea>\n                        </div>\n                    </div>\n                </CommonModal>\n\n                <CommonModal open={ modalOpen } close={ closeModal } func={uploadExcelFile} header=\"파일 업로드 목록\" footer=\"데이터 저장\">\n                    <p>\n                        빨간 색으로 표시된 것은 업로드 할 수 없는 데이터입니다. 빼고 업로드를 진행할까요?<br/>\n                        현재 잘못된 데이터는 {errorCount}개 입니다.\n                    </p>\n                    <div className=\"table-wrapper mt0 relative modal-table\" style={{width:\"2200px\"}}>\n                        <div className=\"mt50 table-row-modal-church\">\n                            <span className=\"th\">이름</span>\n                            <span className=\"th\">국가</span>\n                            <span className=\"th\">우편번호</span>\n                            <span className=\"th\">주소</span>\n                            <span className=\"th\">세부지역</span>\n                            <span className=\"th\">교회 번호</span>\n                            <span className=\"th\">교회 이메일</span>\n                            <span className=\"th\">홈페이지</span>\n                            <span className=\"th\">팩스</span>\n                            <span className=\"th\">교회규모</span>\n                            <span className=\"th\">교단</span>\n                            <span className=\"th\">담임목사</span>\n                            <span className=\"th\">관리자이름</span>\n                            <span className=\"th\">한동대 연관성</span>\n                            <span className=\"th\">한동대 세부 연관</span>\n                            <span className=\"th\">작성자이름</span>\n                            <span className=\"th\">메모</span>\n                        </div>\n                        {excelJSONData !== null ?\n                        excelJSONData.map((data, i) =>\n                        <div key={i} className={data.isValid ? \"table-row-modal-church\" : \"table-row-modal-church modal-error\"}>\n                            <span className=\"td\">{data.name}</span>\n                            <span className=\"td\">{data.nation}</span>\n                            <span className=\"td\">{data.zip_code}</span>\n                            <span className=\"td\">{data.addr1}</span>\n                            <span className=\"td\">{data.addr2}</span>\n                            <span className=\"td\">{data.phone}</span>\n                            <span className=\"td\">{data.email}</span>\n                            <span className=\"td\">{data.page_url}</span>\n                            <span className=\"td\">{data.fax}</span>\n                            <span className=\"td\">{data.size}</span>\n                            <span className=\"td\">{data.denomination}</span>\n                            <span className=\"td\">{data.pastor}</span>\n                            <span className=\"td\">{data.admin_name}</span>\n                            <span className=\"td\">{data.hgu_yn}</span>\n                            <span className=\"td\">{data.hgu_memo}</span>\n                            <span className=\"td\">{data.writer_name}</span>\n                            <span className=\"td\">{data.memo}</span>\n                        </div>\n                        )\n                        :\n                        <div>엑셀 데이터가 없습니다.</div>\n                        }\n                    </div>\n                </CommonModal>\n\n                <div className=\"mb35\">\n                    <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"교회명, 교단, 연관성, 담임 목사명, 실무자명, 전체 주소, 연락처, 이메일, 메모 사항으로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                    <GreyButton class=\"mr15\" name=\"검색\" click={readChurchInfo}/>\n                    {!isShowDelete ?\n                        <GreyButton name=\"삭제된 교회 보기\" click={() => {setisShowDelete(true)}}/>:\n                        <GreyButton name=\"교회 보기\" click={() => {setisShowDelete(false)}}/>}\n                </div>\n\n                {clickedChurch !== null ?\n                editChurch === true ?\n                // edit church\n                <div id=\"church-info\" className=\"lecture-info-wrapper mb40\">\n                    <div className=\"church-info lecture-date mb30\">\n                        <span>작성일자: {clickedChurch.reg_date}</span>\n                        <span>작성자: {clickedChurch.creater_name}</span>\n                        <span className=\"\">관리자확인 일자: {clickedChurch.confirm_date}</span>\n                        <span className=\"info-admin\">수정일자: {clickedChurch.update_date}</span>\n                        <span className=\"info-admin\">수정자: {clickedChurch.updater_name}</span>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회명</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.name} name=\"name\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교단</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.denomination} name=\"denomination\" onChange={onEdit}/>\n                    </div>\n                    {/* <div>\n                        <span className=\"add-church-title\">교단</span>\n                        <select className=\"w158 p4\">\n                            <option>교단</option>\n                        </select>\n                    </div> */}\n                    <div>\n                        <span className=\"add-church-title\">한동대와 연관성</span>\n                        <input className=\"p4 mr15\" type=\"text\" value={editChurchInfo.hgu_yn} name=\"hgu_yn\" onChange={onEdit}/>\n                        {/* <select className=\"w158 p4 mr15\" >\n                            <option>한동대와 연관성</option>\n                        </select> */}\n                        <input className=\"p4 no-left-margin\" placeholder=\"세부사항 입력\" value={editChurchInfo.hgu_memo} name=\"hgu_memo\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 규모</span>\n                        {/* <select className=\"w158 p4\">\n                            <option>교회 규모</option>\n                        </select> */}\n                        <input className=\"p4\" value={editChurchInfo.size} name=\"size\" onChange={onEdit}/>\n                    </div>\n                    <hr className=\"lecture-hr\"/>\n                    <div>\n                        <span className=\"add-church-title\">담임 목사 성명</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.pastor} name=\"pastor\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">실무자 성명</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.admin_name} name=\"admin_name\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">정보 제공자</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.writer_name} name=\"writer_name\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">주소 입력</span>\n                        <input className=\"church-addr no-left-margin w158 p4 mr15\" type=\"text\" placeholder=\"국가\" value={editChurchInfo.nation} name=\"nation\" onChange={onEdit}/>\n                        <input className=\"church-addr w158 p4 mr15\" type=\"text\" placeholder=\"시/도\" value={editChurchInfo.city} name=\"city\" onChange={onEdit}/>\n                        <input className=\"church-addr no-left-margin w158 p4 mr15\" placeholder=\"시/군/구\" type=\"text\" value={editChurchInfo.district} name=\"district\" onChange={onEdit}/>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"add-church-title\"></span>\n                        <input readOnly className=\"p4 mr10\" type=\"text\" placeholder=\"우편 번호\" value={editChurchInfo.zip_code} name=\"zip_code\" onChange={onEdit}/>\n                        <BlueButton class=\"blue-btn\" name=\"주소검색\" click={() => setPostModal(true)}/>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"add-church-title\"></span>\n                        <input readOnly className=\"p4 mr15 w400\" type=\"text\" value={editChurchInfo.addr1} name=\"addr1\" onChange={onEdit}/>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"add-church-title\"></span>\n                        <input className=\"p4 w400\" type=\"text\" placeholder=\"상세 주소 입력\" value={editChurchInfo.addr2} name=\"addr2\" onChange={onEdit}/>\n                    </div>\n                    <hr className=\"lecture-hr\"/>\n                    <div >\n                        <span className=\"add-church-title\">교회 연락처</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.phone} name=\"phone\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 이메일</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.email} name=\"email\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 홈페이지</span>\n                        <input className=\"w400 p4\" type=\"text\" value={editChurchInfo.page_url} name=\"page_url\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 팩스 번호</span>\n                        <input className=\"w400 p4\" type=\"text\" value={editChurchInfo.fax} name=\"fax\" onChange={onEdit}/>\n                    </div>\n                    <hr className=\"lecture-hr\"/>\n                    <div className=\"church-grid\">\n                        <span className=\"add-church-title\">메모 사항</span>\n                        <textarea className=\"h180 p4\" value={editChurchInfo.memo} name=\"memo\" onChange={onEdit}></textarea>\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <GreyButton class=\"mr15\" name=\"수정 완료\" click={updateChurch}/>\n                        <GreyButton class=\"mb40\" name=\"수정 취소\" click={cancelBtnClick}/>\n                    </div>\n                </div>\n                :\n                // read church\n                <div id=\"read-church-info\" className=\"lecture-info-wrapper mb40\">\n                    <div className=\"church-info lecture-date mb30\">\n                        <span>작성일자: {clickedChurch.reg_date}</span>\n                        <span>작성자: {clickedChurch.creater_name}</span>\n                        <span>관리자확인 일자: {clickedChurch.confirm_date}</span>\n                        <span>수정일자: {clickedChurch.update_date}</span>\n                        <span>수정자: {clickedChurch.updater_name}</span>\n                    </div>\n                    <div className=\"read-church-content\">\n                        <div>\n                            <span className=\"add-church-title\">교회명</span>\n                            <span>{clickedChurch.name}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교단</span>\n                            <span>{clickedChurch.denomination}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">한동대와 연관성</span>\n                            <span>{clickedChurch.hgu_yn}</span>\n                            <span>{clickedChurch.hgu_memo}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 규모</span>\n                            <span>{clickedChurch.size}</span>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div>\n                            <span className=\"add-church-title\">담임 목사 성명</span>\n                            <span>{clickedChurch.pastor}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">실무자 성명</span>\n                            <span>{clickedChurch.admin_name}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">정보 제공자</span>\n                            <span>{clickedChurch.writer_name}</span>\n                        </div>\n                        {/* <div>\n                            <span className=\"add-church-title\">실무자 연락처</span>\n                            <span>{clickedChurch.admin_phone}</span>\n                        </div> */}\n                        <div>\n                            <span className=\"add-church-title\">주소</span>\n                            <span>{clickedChurch.nation}</span>\n                            <span>{clickedChurch.city}</span>\n                            <span>{clickedChurch.district}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">우편 번호</span>\n                            <span>{clickedChurch.zip_code}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 주소</span>\n                            {/* <span className=\" church-blank add-church-title\"></span> */}\n                            <span>{clickedChurch.addr1}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 세부 주소</span>\n                            <span>{clickedChurch.addr2}</span>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div >\n                            <span className=\"add-church-title\">교회 연락처</span>\n                            <span>{clickedChurch.phone}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 이메일</span>\n                            <span>{clickedChurch.email}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 홈페이지</span>\n                            <span><a href={clickedChurch.page_url !== \"\" && clickedChurch.page_url !== null ? clickedChurch.page_url : \"\"}>{clickedChurch.page_url}</a></span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 팩스 번호</span>\n                            <span>{clickedChurch.fax}</span>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div className=\"church-grid\">\n                            <span className=\"add-church-title\">메모 사항</span>\n                            <span>{clickedChurch.memo}</span>\n                        </div>\n                        {isShowDelete ?\n                        <div className=\"button-wrapper\">\n                            <GreyButton class=\"\" name=\"복구하기\" click={recoverChurch}/>\n                        </div>\n                        :\n                        <div className=\"button-wrapper\">\n                            <GreyButton class=\"mr15\" name=\"수정하기\" click={editBtnClick}/>\n                            <GreyButton class=\"\" name=\"삭제하기\" click={deleteChurch}/>\n                        </div>\n                        }\n                    </div>\n                </div> \n                :\n                null\n                }\n                \n                <div className=\"mt50 table-row-church\">\n                    <span className=\"th\">교단</span>\n                    <span className=\"th\">이름</span>\n                    <span className=\"th church-location\">주소</span>\n                    <span className=\"th church-writer\">정보제공자</span>\n                    <span className=\"th church-date\">작성일자</span>\n                </div>\n                {churchInfo !== null && currentPosts(churchInfo).length > 0 ?\n                currentPosts(churchInfo).map((church, i) =>\n                    <div key={church.id} className={church === clickedChurch ? \"table-row-church click-inst-row\" : \"table-row-church\"} onClick = {() => {clickChurch(church)}}>\n                        <span className=\"td\">{church.denomination}</span>\n                        <span className=\"td\">{church.name}</span>\n                        <span className=\"td church-location\">{church.addr1} {church.addr2}</span>\n                        <span className=\"td church-writer\">{church.writer_name}</span>\n                        <span className=\"td church-date\">{church.reg_date}</span>\n                    </div>\n                )\n                : <div className=\"no-content\">교회 정보 없음</div>\n                }\n            </div>\n            <Pagination \n                activePage={page} \n                itemsCountPerPage={postsPerPage} \n                totalItemsCount={churchInfo === null ? \n                    0 :\n                    isShowDelete ? \n                    churchInfo.filter(data => data.del_date !== null).length:\n                    churchInfo.filter(data => data.del_date === null).length} \n                pageRangeDisplayed={5} \n                prevPageText={\"‹\"} \n                nextPageText={\"›\"} \n                onChange={handlePageChange} \n            />\n        </div>\n    </div>\n    )\n}\n\nexport default AdminChurch;","/Users/moonhahyeon/git/FrontEnd/src/components/pages/lecture/subject.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/lecture.js",["230"],"\nimport React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_lecture.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport CommonModal from '../../modules/modal/common';\n\nimport LectureCalendar from '../../modules/calendar/lecture_calendar';\nimport CommonCalendar from '../../modules/calendar/common';\nimport ReadCalendar from '../../modules/calendar/read_calendar';\nimport WhiteButton from '../../modules/button/white_button';\n\nfunction AdminLecture(props) {\n    const [keyword, setKeyword] = useState(null);\n    const [calendarInfo, setcalendarInfo] = useState(null)\n\n    const [allLecture, setAllLecture] = useState(null);\n    const [allInstructors, setallInstructors] = useState(null);\n    const [editLecture, seteditLecture] = useState(false);\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [categoryData, setCategoryData] = useState([]);\n\n    const [addLectureInstId, setaddLectureInstId] = useState(\"\");\n    const [addLectureName, setAddLectureName] = useState(\"\");\n    const [addLectureStartDate, setAddLectureStartDate] = useState(\"\");\n    const [addLectureEndDate, setAddLectureEndDate] = useState(\"\");\n    const [addLectureSampleUrl, setAddLectureSampleUrl] = useState(\"\");\n    const [addLectureIntro, setAddLectureIntro] = useState(\"\");\n\n    const [isModalOpen, setisModalOpen] = useState(false);\n    const [today, setToday] = useState(new Date());\n    const [regionData, setRegionData] = useState(null);\n    const [selectedCategoryData, setSelectedCategoryData] = useState([]);\n    const [selectedRegionData, setSelectedRegionData] = useState([]);\n    const [calendar, setCalendar] = useState(false);\n    const [editcalendar, seteditcalendar] = useState(false)\n    const [selectedTimeZoneData, setSelectedTimeZoneData] = useState([]);\n    const [selectedDayWeekData, setSelectedDayWeekData] = useState([]);\n    const [isShowDelete, setisShowDelete] = useState(false);\n    \n    const [topicDataByLecture, settopicDataByLecture] = useState(null);\n    const [regionDataByLecture, setregionDataByLecture] = useState(null);\n    const [lectureDateDataByLecture, setlectureDateByLecture] = useState(null)\n    const [detailByLecture, setDetailByLecture] = useState(null);\n    const [editLectureInfo, seteditLectureInfo] = useState(null);\n    const [resultDates, setresultDates] = useState(null);\n    const [dateData, setdateData] = useState([]);\n    const [notUsingCalendar, setnotUsingCalendar] = useState(false);\n    const [academyDates, setacademyDates] = useState(null);\n\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    \n    let submitFlag = false;\n\n    function submitCheck(){\n        if(submitFlag){\n            return submitFlag;\n        }else{\n            submitFlag = true;\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        readAllLecture();\n        readCategory();\n        readAllInstructors();\n        readAcademyDates();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    useEffect(() => {\n        setPage(1);\n    }, [isShowDelete])\n\n    useEffect(() => {\n        if(selectedLecture !== null) {\n            seteditLectureInfo(selectedLecture);\n            if(selectedLecture.date === \"\") {\n                seteditcalendar(false);\n            } else {\n                seteditcalendar(true);\n            }\n            readTopicByLectureId();\n            readRegionByLectureId();\n            readLectureDateByLectureId();\n            readDetailByLectureId();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLecture]);\n\n    useEffect(() => {\n        if(notUsingCalendar) {\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: null,\n                end_date: null,\n                day_week_array:[0,0,0,0,0,0,0],\n                morning:0,\n                afternoon:0,\n                evening:0\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [notUsingCalendar])\n\n    useEffect(() => {\n\n        if(detailByLecture !== null && lectureDateDataByLecture!== null && lectureDateDataByLecture.length !== 0 && detailByLecture.day_week !== null) {\n\n            setnotUsingCalendar(false);\n            var day_split = detailByLecture.day_week.split(\",\");\n            var default_day_week = [0,0,0,0,0,0,0];\n            day_split.forEach(day => {\n                if(day.trim()  === \"월\")    default_day_week[1] = 1;\n                if(day.trim()  === \"화\")    default_day_week[2] = 1;\n                if(day.trim()  === \"수\")    default_day_week[3] = 1;\n                if(day.trim()  === \"목\")    default_day_week[4] = 1;\n                if(day.trim()  === \"금\")    default_day_week[5] = 1;\n                if(day.trim()  === \"토\")    default_day_week[6] = 1;\n                if(day.trim()  === \"일\")    default_day_week[0] = 1;\n            });\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: detailByLecture.start_date,\n                end_date: detailByLecture.end_date,\n                morning: detailByLecture.morning,\n                afternoon: detailByLecture.afternoon,\n                evening: detailByLecture.evening,\n                day_week_array: default_day_week\n            })\n        } else if(detailByLecture !== null){\n            setnotUsingCalendar(true);\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: detailByLecture.start_date,\n                end_date: detailByLecture.end_date,\n                morning: detailByLecture.morning,\n                afternoon: detailByLecture.afternoon,\n                evening: detailByLecture.evening,\n                day_week_array: [0,0,0,0,0,0,0]\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [detailByLecture])\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readAcademyDates = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setacademyDates(response.data);\n    }\n\n    const readLectureDateByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate', \n            {\n                params: {\n                    lecture_id: selectedLecture.id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setlectureDateByLecture(response.data);\n    }\n\n    const readTopicByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/topic/'+selectedLecture.id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        settopicDataByLecture(response.data);\n    }\n\n    const readRegionByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/region/'+selectedLecture.id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setregionDataByLecture(response.data);\n    }\n\n    const readDetailByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/lectureDetail/'+selectedLecture.id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setDetailByLecture(response.data);\n    }\n\n    const readAllInstructors = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setaddLectureInstId(response.data[0].user_id);\n        setallInstructors(response.data);\n    }\n\n    const readAllLecture = async() => {\n        setPage(1);\n        if(keyword !== null && keyword !== \"\"){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/admin',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setAllLecture(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/admin', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setAllLecture(response.data);\n        }\n        setKeyword(null);\n        setSelectedLecture(null);\n    }\n\n    function clickLecture(data) {\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = today.getMonth() + 1;\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        if(selectedLecture === null || selectedLecture.id !== data.id) {\n            setSelectedLecture(data);\n            readMainCalendar(date, data.id);\n            seteditLecture(false);\n            seteditLectureInfo(data);\n        } else {\n            setSelectedLecture(null);\n        }\n    }\n\n    const readMainCalendar = async(date, id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/lecture', {\n                params: {\n                    date: date,\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n        setresultDates(response.data);\n    }\n\n\n    const editBtnClick = () => {\n        seteditLecture(true);\n        seteditLectureInfo(selectedLecture);\n        readTopicByLectureId();\n        readRegionByLectureId();\n        readLectureDateByLectureId();\n        readDetailByLectureId();\n    }\n\n    const cancelBtnClick = () => {\n        seteditLecture(false);\n        if(selectedLecture.date === \"\") {\n            seteditcalendar(false);\n        } else {\n            seteditcalendar(true);\n        }\n    }\n    const deleteBtnClick = () => {\n        if(window.confirm(\"강의를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture/delete',\n                    method: 'put',\n                    data: {\n                        id: selectedLecture.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readAllLecture();\n                setSelectedLecture(null);\n                alert(\"강의가 삭제되었습니다.\")\n            })\n        }\n    }\n\n    const updateFinishBtn = () => {\n        \n        var day_week_string = [];\n        editLectureInfo.day_week_array.forEach((item, index) => {\n            if(index === 0 && item === 1)   day_week_string.push(\"일\");\n            if(index === 1 && item === 1)   day_week_string.push(\"월\");\n            if(index === 2 && item === 1)   day_week_string.push(\"화\");\n            if(index === 3 && item === 1)   day_week_string.push(\"수\");\n            if(index === 4 && item === 1)   day_week_string.push(\"목\");\n            if(index === 5 && item === 1)   day_week_string.push(\"금\");\n            if(index === 6 && item === 1)   day_week_string.push(\"토\");                \n        });\n        day_week_string = day_week_string.join(',');\n\n        if(editLectureInfo.name === null || editLectureInfo.name === \"\") {\n            alert(\"강의 제목을 입력해주세요.\");\n            return;\n        }\n        var topicFlag = false;\n        var regionFlag = false;\n        topicDataByLecture.forEach((topic) => {\n            if(topic.status === 1) \n                topicFlag = true;\n        });\n        regionDataByLecture.forEach((region) => {\n            if(region.status === 1) \n                regionFlag = true;\n        })\n        if(topicFlag === false) {\n            alert(\"강의 주제를 선택해주세요.\");\n            return;\n        }\n        if(regionFlag === false) {\n            alert(\"강의 가능 지역을 선택해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar){\n            if(editLectureInfo.morning === 0 && editLectureInfo.afternoon === 0 && editLectureInfo.evening === 0) {\n                alert(\"강의 가능 시간대를 선택해주세요.\");\n                return;\n            }\n        }\n        if(editLectureInfo.intro === null || editLectureInfo.intro === \"\") {\n            alert(\"강의 소개를 입력해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && !editcalendar) {\n            alert(\"캘린더에 일정을 반영해주세요!\");\n            return;\n        }\n\n        if(window.confirm(\"강의를 수정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture',\n                    method: 'put',\n                    data: {\n                        ...editLectureInfo,\n                        regionInfo: regionDataByLecture,\n                        topicInfo: topicDataByLecture,\n                        dateInfo: resultDates,\n                        day_week: day_week_string,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readAllLecture();\n                setSelectedLecture(null);\n                seteditLecture(false);\n                seteditcalendar(false);\n                alert(\"강의가 수정되었습니다.\")\n            })\n        }\n    }\n\n\n    const openModal = () => {\n        setToday(new Date());\n        readCategory();\n        readRegion();\n        setisModalOpen(true)\n    }\n    const readCategory = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/category', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setCategoryData(response.data);\n    }\n\n    const selectCategory = (index) => {\n        const result = selectedCategoryData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedCategoryData([...selectedCategoryData,index]);\n        }else{\n            setSelectedCategoryData(selectedCategoryData.filter(id => id !== index));\n        }\n    }\n\n    const readRegion = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/region', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setRegionData(response.data);\n    }\n\n    const selectRegion = (index) => {\n        const result = selectedRegionData.filter(id => id === index || id === 0);\n        var temp;\n        if(result.length === 0){\n            if(index === 0){\n                temp = [...selectedRegionData,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];\n                temp.sort(function(a, b) {\n                    return a - b;\n                })\n                setSelectedRegionData(temp);\n            }else{\n                temp = [...selectedRegionData,index];\n                temp.sort(function(a, b) {\n                    return a - b;\n                })\n                setSelectedRegionData(temp);\n            }\n        }else{\n            if(index === 0){\n                setSelectedRegionData([]);\n            }else{\n                setSelectedRegionData(selectedRegionData.filter(id => id !== index  && id !== 0));\n            }\n        }\n    }\n\n    const selectTimeZone = (index) => {\n        const result = selectedTimeZoneData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedTimeZoneData([...selectedTimeZoneData,index]);\n        }else{\n            setSelectedTimeZoneData(selectedTimeZoneData.filter(id => id !== index));\n        }\n    }\n\n    const selectDayWeek = (index) => {\n        const result = selectedDayWeekData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedDayWeekData([...selectedDayWeekData,index]);\n        }else{\n            setSelectedDayWeekData(selectedDayWeekData.filter(id => id !== index));\n        }\n    }\n\n    const closeModal = () => {\n        setisModalOpen(false);\n        setAddLectureName(null);\n        setAddLectureIntro(null);\n        setAddLectureSampleUrl(\"\");\n        setAddLectureStartDate(null);\n        setAddLectureEndDate(null);\n        setSelectedDayWeekData([]);\n        setSelectedTimeZoneData([]);\n        setSelectedCategoryData([]);\n        setSelectedRegionData([]);\n        setaddLectureInstId(allInstructors[0].user_id);\n        setresultDates(null);\n        setCalendar(false);\n        setnotUsingCalendar(false);\n        submitFlag = false;\n    }\n\n    const createLecture = async() => {\n        var tempDayWeek = [];\n        if(selectedDayWeekData.find(element => element === \"월\"))    tempDayWeek.push(\"월\");\n        if(selectedDayWeekData.find(element => element === \"화\"))    tempDayWeek.push(\"화\");\n        if(selectedDayWeekData.find(element => element === \"수\"))    tempDayWeek.push(\"수\");\n        if(selectedDayWeekData.find(element => element === \"목\"))    tempDayWeek.push(\"목\");\n        if(selectedDayWeekData.find(element => element === \"금\"))    tempDayWeek.push(\"금\");\n        if(selectedDayWeekData.find(element => element === \"토\"))    tempDayWeek.push(\"토\");\n        if(selectedDayWeekData.find(element => element === \"일\"))    tempDayWeek.push(\"일\");\n        \n        if(addLectureName === null || addLectureName === \"\") {\n            alert(\"강의 제목을 입력해주세요.\");\n            return;\n        }\n        if(selectedCategoryData === [] || selectedCategoryData.length === 0) {\n            alert(\"강의 주제를 선택해주세요.\");\n            return;\n        }\n        if(selectedRegionData === [] || selectedRegionData.length === 0) {\n            alert(\"강의 가능 지역을 선택해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar){\n            if(selectedTimeZoneData === [] || selectedTimeZoneData.length === 0) {\n                alert(\"강의 가능 시간대를 선택해주세요.\");\n                return;\n            }\n        }\n        if(addLectureIntro === null || addLectureIntro === \"\") {\n            alert(\"강의 소개를 입력해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && !calendar) {\n            alert(\"캘린더에 일정을 반영해주세요!\");\n            return;\n        }\n        if(submitCheck()){\n            alert(\"데이터 처리 중입니다.\");\n            return;\n        }\n        if(window.confirm(\"강의를 추가하시겠습니까?\")) {\n            var params = new URLSearchParams();\n            params.append('name', addLectureName);\n            params.append('intro', addLectureIntro);\n            params.append('sample_url', addLectureSampleUrl);\n            if(!notUsingCalendar){\n                params.append('start_date', addLectureStartDate);\n                params.append('end_date', addLectureEndDate);\n                params.append('day_week', Array.from(new Set(tempDayWeek)).join(', '));\n            }\n            params.append('morning', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"morning\").length);\n            params.append('afternoon', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"afternoon\").length);\n            params.append('evening', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"evening\").length);\n            params.append('topic', Array.from(new Set(selectedCategoryData)).join(','));\n            params.append('token', window.sessionStorage.getItem('token'));\n            params.append('manageID', window.sessionStorage.getItem('id'));\n            if(selectedRegionData.filter(id => id === 0).length >= 1){\n                params.append('region', \"0\");\n            }else{\n                params.append('region', Array.from(new Set(selectedRegionData)).join(','));\n            }\n            params.append('dateData', dateData);\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/instructor/'+addLectureInstId, //[loginID]로그인 후 변경\n            params,\n            );\n\n            setAddLectureName(null);\n            setAddLectureIntro(null);\n            setAddLectureSampleUrl(\"\");\n            setAddLectureStartDate(null);\n            setAddLectureEndDate(null);\n            setSelectedDayWeekData([]);\n            setSelectedTimeZoneData([]);\n            setSelectedCategoryData([]);\n            setSelectedRegionData([]);\n            setaddLectureInstId(allInstructors[0].user_id);\n            setresultDates(null);\n            setCalendar(false);\n            setnotUsingCalendar(false);\n\n            readAllLecture();\n            alert(\"강의를 추가했습니다~:)\");\n            closeModal();\n        }\n    }\n\n\n    const openCalendar = () => {\n        if(addLectureStartDate===null || addLectureEndDate===null || selectedDayWeekData.length===0) {\n            alert(\"시작날짜, 끝날짜, 요일을 모두 선택해주세요!\");\n            return;\n        }\n        var allDays = betweenDate();\n        var weekDays = [0,0,0,0,0,0,0]; // 일, 월, 화, 수, 목, 금, 토\n        var resultDates = [];\n\n        selectedDayWeekData.forEach(day => {\n            if(day === \"일\")    weekDays[0] = 1;\n            else if(day === \"월\")    weekDays[1] = 1;\n            else if(day === \"화\")    weekDays[2] = 1;\n            else if(day === \"수\")    weekDays[3] = 1;\n            else if(day === \"목\")    weekDays[4] = 1;\n            else if(day === \"금\")    weekDays[5] = 1;\n            else if(day === \"토\")    weekDays[6] = 1;\n        });\n        allDays.forEach(date => {\n            if(weekDays[new Date(date).getDay()] === 1)\n                resultDates.push(date);\n        });\n        setresultDates(resultDates);\n        \n        setCalendar(true);\n    }\n\n    const reCalendar = () => {\n        if(addLectureStartDate===null || addLectureEndDate===null || selectedDayWeekData.length===0) {\n            alert(\"시작날짜, 끝날짜, 요일을 선택해주세요!\");\n            return;\n        }\n        if(window.confirm(\"위에 일정을 다시 캘린더에 반영하면 캘린더에서 편집했던 일정이 모두 사라집니다. 반영하시겠습니까?\")) {\n            var allDays = betweenDate();\n            var weekDays = [0,0,0,0,0,0,0]; // 일, 월, 화, 수, 목, 금, 토\n            var resultDates = [];\n\n            selectedDayWeekData.forEach(day => {\n                if(day === \"일\")    weekDays[0] = 1;\n                else if(day === \"월\")    weekDays[1] = 1;\n                else if(day === \"화\")    weekDays[2] = 1;\n                else if(day === \"수\")    weekDays[3] = 1;\n                else if(day === \"목\")    weekDays[4] = 1;\n                else if(day === \"금\")    weekDays[5] = 1;\n                else if(day === \"토\")    weekDays[6] = 1;\n            });\n            allDays.forEach(date => {\n                if(weekDays[new Date(date).getDay()] === 1)\n                    resultDates.push(date);\n            });\n            setresultDates(resultDates);\n        }\n    }\n\n    const reEditCalendar = () => {  \n        if(editLectureInfo.start_date === null || editLectureInfo.start_date === \"\" || editLectureInfo.end_date === null || editLectureInfo.end_date === \"\" || editLectureInfo.day_week_array.find(element => element === 1) === undefined) {\n            alert(\"시작날짜, 끝날짜, 요일을 모두 선택해주세요!\");\n            return;\n        }\n        if(window.confirm(\"위에 일정을 다시 캘린더에 반영하면 캘린더에서 편집했던 일정이 모두 사라집니다. 반영할까요?\")) {\n            var allDays = betweenEditDate();\n            var tempData = [];\n            if(resultDates !== null)\n                tempData = resultDates.filter((e)=>(e.form_id !== 0));\n                \n            allDays.forEach(date => {\n                if(editLectureInfo.day_week_array[new Date(date).getDay()] === 1)\n                    tempData.push({\n                        lecture_date_id:0,\n                        date: date,\n                        form_id: 0\n                    });\n            });\n            setresultDates(tempData);\n            seteditcalendar(true);\n        }\n    }\n\n    function betweenDate() {\n        var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\n        if(!(regex.test(addLectureStartDate) && regex.test(addLectureEndDate))) return \"Not Date Format\";\n        var result = [];\n        var curDate = new Date(addLectureStartDate);\n        while(curDate <= new Date(addLectureEndDate)) {\n            result.push(curDate.toISOString().split(\"T\")[0]);\n            curDate.setDate(curDate.getDate() + 1);\n        }\n        return result;\n    }\n\n    function betweenEditDate() {\n        var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\n        if(!(regex.test(editLectureInfo.start_date) && regex.test(editLectureInfo.end_date))) return \"Not Date Format\";\n        var result = [];\n        var curDate = new Date(editLectureInfo.start_date);\n        while(curDate <= new Date(editLectureInfo.end_date)) {\n            result.push(curDate.toISOString().split(\"T\")[0]);\n            curDate.setDate(curDate.getDate() + 1);\n        }\n        return result;\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        if(isShowDelete){ // 삭제된 거 보여줄때   \n            currentPosts = allLecture.filter(data => data.del_date !== null).slice(indexOfFirst, indexOfLast);\n        } else { // 전체 강의일 때\n            currentPosts = allLecture.filter(data => data.del_date === null).slice(indexOfFirst, indexOfLast);\n        }\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"lecture\";\n        const ws = XLSX.utils.json_to_sheet(allLecture);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const deleteToExist = () => {\n        if(window.confirm(\"강의를 복구하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture/recover',\n                    method: 'put',\n                    data: {\n                        id: selectedLecture.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readAllLecture();\n                setSelectedLecture(null);\n                alert(\"강의가 복구되었습니다.\")\n            })\n        }\n    }\n\n    const onEdit = (e) => {\n        const {value, name} = e.target;\n        seteditLectureInfo({\n            ...editLectureInfo,\n            [name]:value\n        })\n    }\n\n    const createDate = async (lecture_id, date) => {\n        var params = new URLSearchParams();\n        params.append('lecture_id', lecture_id);\n        params.append('date', date);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n        \n        const response = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'lectureDate',\n        params,\n        )\n    }\n\n    const deleteDate = (id) => {\n        axios(\n            {\n                url: process.env.REACT_APP_RESTAPI_HOST+'lectureDate',\n                method: 'delete',\n                data: {\n                    id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        )\n    }\n\n    const clickTopic = (data) => {\n        let newTopic = topicDataByLecture.map((topic, i) => {\n            if(topic.id === data.id) {\n                if(topic.status === 0)\n                    return {...topic, status:1};\n                else\n                    return {...topic, status:0};\n            } else {\n                return topic;\n            }\n        })\n        settopicDataByLecture(newTopic);\n    }\n\n\n    const clickRegion = (data) => {\n        var check = 0;\n        let newRegion = regionDataByLecture.map((region, i) => {\n            if(region.id === data.id) {\n                if(region.status === 0)\n                    return {...region, status:1};\n                else {\n                    check = 1;\n                    return {...region, status:0};\n                }\n            } else {\n                return region;\n            }\n        })\n        if(check === 1) {\n            newRegion[0].status = 0;\n        }\n        setregionDataByLecture(newRegion);\n    }\n\n    const clickTimezone = (time) => {\n        var status=0;\n        if(time===\"morning\") {\n            if(editLectureInfo.morning === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                morning: status\n            })\n        }\n        else if(time===\"afternoon\") {\n            if(editLectureInfo.afternoon === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                afternoon: status\n            })\n        }\n        if(time===\"evening\") {\n            if(editLectureInfo.evening === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                evening: status\n            })\n        }\n    }\n\n    const editDayClick = (index) => {\n        let updateArr = editLectureInfo.day_week_array;\n        updateArr.forEach((item, i) => {\n            if(i === index) {\n                if(item === 0)\n                    updateArr[i] = 1;\n                else\n                    updateArr[i] = 0;\n            }\n        });\n        seteditLectureInfo({\n            ...editLectureInfo,\n            day_week_array: updateArr\n        });\n    }\n\n    const clickEveryRegion = () => {\n        var isEvery = regionDataByLecture[0].status;\n\n        let newArr = regionDataByLecture.map((item, i) => { \n            if (isEvery) {  // 전국 체크 해제\n                return { ...item, status: 0 }; \n            } else { \n                return { ...item, status: 1 }; \n            } \n        }); \n        \n        setregionDataByLecture(newArr);\n\n    }\n\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">강의 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 relative\">\n\n                    <p className=\"table-name mb40\">\n                        {isShowDelete ? \"삭제된 강의 목록\" : \"강의 목록\"}\n                        <GreyButton class=\"right\" name=\"강의 추가하기\" click={openModal}/>\n                        <GreyButton class=\"right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    </p>\n\n                    <div className=\"mb35\">\n                        <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"강사명, 강의명, 강의 소개, 지역, 주제로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                        <GreyButton name=\"검색\" class=\"mr15\" click={readAllLecture}/>\n                        {!isShowDelete ?\n                        <GreyButton name=\"삭제된 강의 보기\" click={() => {setisShowDelete(true)}}/>:\n                        <GreyButton name=\"전체 강의 보기\" click={() => {setisShowDelete(false)}}/>}\n                    </div>\n\n                    <CommonModal open={isModalOpen} close={closeModal} func={createLecture} header=\"강의 추가하기\" footer=\"추가하기\">\n                        <div className=\"lecture-info-wrapper\">\n                            <p className=\"admin-lecture-date\">\n                                <span>\n                                    {allInstructors !== null && allInstructors.length !== 0 ?\n                                    <select className=\"mr15 p4\" defaultValue={addLectureInstId} onChange = {(e)=>setaddLectureInstId(e.target.value)}>\n                                        {allInstructors.map((data) => \n                                            (<option key={data.id} value={data.user_id}>{data.inst_name} {data.position_name}</option>)\n                                        )}\n                                        {/* <option>hello</option> */}\n                                    </select>:\n                                    <span>강사가 없습니다.</span>\n                                    }\n                                    {/* {allInstructors !== null ?\n                                    <select>\n                                    allInstructors.map((data, index) => (\n                                        <option value={data.id}>{data.name} 강사</option>\n                                    ))\n                                    </select>\n                                    :\n                                    <span>강사가 없습니다.</span>\n                                    } */}\n                                    작성일 {today.toLocaleString()}\n                                </span>\n                                {/* <span className=\"lecture-update\">수정일 2021_07_14_일</span> */}\n                            </p>\n                            <div className=\"p4030\">\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">강의 제목</span>\n                                    <input className=\"lecture-input\" onChange={(e) => { setAddLectureName(e.target.value); }}/>\n                                </div>\n                                <hr className=\"lecture-hr\"/>\n                                <div className=\"category-grid mb20\">\n                                    <span className=\"lecture-info-title\">가능 지역</span>\n                                    <div className=\"category-wrapper\">\n                                        {regionData !== null ?\n                                        regionData.map((dataUnit, index2) => (\n                                            <div key={index2} className={selectedRegionData.filter(id => id === dataUnit.id || id === 0).length !== 0? \"category-btn category-active\": \"category-btn \"} onClick = {() => {selectRegion(dataUnit.id)}}>{dataUnit.name}</div>\n                                        )):null}\n                                    </div>\n                                </div>\n                                <div className=\"category-grid\">\n                                    <span className =\"lecture-info-title\">주제 카테고리</span>\n                                    <div className=\"category-wrapper\">\n                                        {categoryData !== null ?\n                                        categoryData.map((dataUnit, index2) => (\n                                            <div key={index2} className={selectedCategoryData.filter(id => id === dataUnit.id).length !== 0? \"category-btn category-active\":\"category-btn \"} onClick = {() => {selectCategory(dataUnit.id)}}>{dataUnit.name}</div>\n                                        )):null}\n                                    </div>\n                                </div>\n                                <hr className=\"lecture-hr\"/>\n                                {notUsingCalendar ?\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" onChange={(e) => setnotUsingCalendar(!notUsingCalendar)} checked/>\n                                        </div>\n                                    </span>\n                                </div>\n                                :\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <input className=\"lecture-input\" type=\"date\" onChange={(e) => { setAddLectureStartDate(e.target.value); }}/> ~ <input className=\"lecture-input\" type=\"date\"  onChange={(e) => { setAddLectureEndDate(e.target.value); }}/>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" onChange={(e) => setnotUsingCalendar(!notUsingCalendar)}/>\n                                        </div>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 시간대</span>\n                                    <span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"morning\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"morning\")}}>오전</span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"afternoon\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"afternoon\")}}>오후</span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"evening\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"evening\")}}>저녁</span>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 요일</span>\n                                    <span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"월\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"월\")}}>월</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"화\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"화\")}}>화</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"수\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"수\")}}>수</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"목\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"목\")}}>목</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"금\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"금\")}}>금</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"토\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"토\")}}>토</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"일\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"일\")}}>일</span>\n                                    </span>\n                                    <span></span>\n                                    <WhiteButton name={calendar === true? \"다시 반영하기\":\"캘린더에서 확인하기\"} click={calendar === true? reCalendar:openCalendar}/>\n                                </div>}\n                                \n                                {calendar === true?\n                                <CommonCalendar academyDates={academyDates} resultDates={resultDates} setdateData={setdateData}/>\n                                :\n                                null\n                                }\n                                <hr className=\"lecture-hr\"/>\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">강의 URL 주소</span>\n                                    <input className=\"lecture-input mr15\" onChange={(e) => { setAddLectureSampleUrl(e.target.value); }}/>\n                                    <span className=\"lecture-info-title\">강의 내용 설명</span>\n                                    <textarea className=\"lecture-input mr15 h600\"  onChange={(e) => { setAddLectureIntro(e.target.value); }}></textarea>\n                                </div>\n                                {/* <div className=\"button-wrapper\">\n                                    <GreyButton class=\"mr15\" name=\"수정 완료\"/>\n                                    <GreyButton class=\"\" name=\"강의 삭제\"/>\n                                </div> */}\n                            </div>\n                        </div>\n                    </CommonModal>\n\n                    <div className=\"mt50 table-row-lec\">\n                        <span className=\"th admin-subject\">주제</span>\n                        <span className=\"th\">강의명</span>\n                        <span className=\"th\">강사명</span>\n                        <span className=\"th admin-date\">기간</span>\n                        <span className=\"th admin-loc\">강의 지역</span>\n                    </div>\n                    { allLecture !== null && currentPosts(allLecture).length !== 0 ?\n                            currentPosts(allLecture).map((data, index) =>\n                                <div key={index}  className = {selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-lec\" : \"table-row-lec\"} onClick = {() => {clickLecture(data)}}>\n                                    <span className=\"td admin-subject\">{data.topic}</span>\n                                    <span className=\"td\">{data.name}</span>\n                                    <span className=\"td\">{data.instructor_name}</span>\n                                    <span className=\"td admin-date\">{data.date === \"\" || data.date.length === 0 ? \"일정 미지정\":data.date}</span>\n                                    <span className=\"td admin-loc\">{data.region}</span>\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">강의가 없습니다.</div>\n                        }\n                </div>\n                <Pagination \n                    activePage={page} \n                    itemsCountPerPage={postsPerPage} \n                    totalItemsCount={allLecture === null ? \n                        0 :\n                        isShowDelete ? \n                        allLecture.filter(data => data.del_date !== null).length:\n                        allLecture.filter(data => data.del_date === null).length} \n                    pageRangeDisplayed={5} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} \n                />\n\n                {selectedLecture !== null ?\n                    editLecture ===true && editLectureInfo !== null ?\n                    <div className=\"lecture-info-wrapper\">\n                        <p className=\"lecture-date\">\n                            <span>작성일 {editLectureInfo.reg_Date}</span>\n                            <span className=\"lecture-update\">수정일 {editLectureInfo.toLocaleString()}</span>\n                        </p>\n                        <div className=\"p4030\">\n                            <div className=\"lecture-grid-layout2 mb15\">\n                                <span className=\"lecture-info-title\">강의 제목</span>\n                                <input className=\"lecture-input\" defaultValue={editLectureInfo.name} name=\"name\" onChange={onEdit}/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"lecture-info-title\">강사명</span>\n                                <span>{editLectureInfo.instructor_name} 강사</span>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            <div className=\"lecture-grid-layout mb15\">\n                                <span className=\"lecture-info-title\">가능 지역</span>\n                                <div className=\"category-wrapper\">\n                                    {regionDataByLecture !== null ?\n                                    regionDataByLecture.map((data, index) => (\n                                        <span \n                                            key={index} \n                                            className={data.status === 1 ? \"category-btn category-active\" : \"category-btn\"} \n                                            onClick={() => {data.id === 0 ? clickEveryRegion() : clickRegion(data)}}>\n                                            {data.name}\n                                        </span>\n                                    ))\n                                    :\n                                    <div>선택 가능한 지역이 없습니다.</div>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"category-grid\">\n                                <span className=\"lecture-info-title\">주제 카테고리</span>\n                                <div className=\"category-wrapper\">\n                                    {topicDataByLecture !== null ?\n                                    topicDataByLecture.map((data, index) => (\n                                        <span key={index} className={data.status === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTopic(data)}>{data.name}</span>\n                                    ))\n                                    :\n                                    <div>선택 가능한 주제가 없습니다.</div>\n                                    }\n                                </div>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            {notUsingCalendar ?\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" value={notUsingCalendar} onChange={(e) => {setresultDates(null); setnotUsingCalendar(!notUsingCalendar)}} checked/>\n                                        </div>\n                                    </span>\n                                </div>\n                                :\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <input className=\"lecture-input\" name=\"start_date\" defaultValue={editLectureInfo.start_date} onChange={onEdit} type=\"date\"/> ~ <input className=\"lecture-input\" name=\"end_date\" onChange={onEdit} defaultValue={editLectureInfo.end_date} type=\"date\"/>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" value={notUsingCalendar} onChange={(e) => {setnotUsingCalendar(!notUsingCalendar)}}/>\n                                        </div>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 시간대</span>\n                                    <span>\n                                        <span className={editLectureInfo.morning ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"morning\")}>아침</span>\n                                        <span className={editLectureInfo.afternoon ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"afternoon\")}>점심</span>\n                                        <span className={editLectureInfo.evening ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"evening\")}>저녁</span>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 요일</span>\n                                    <span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[1] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(1)}>월</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[2] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(2)}>화</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[3] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(3)}>수</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[4] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(4)}>목</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[5] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(5)}>금</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[6] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(6)}>토</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[0] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(0)}>일</span>\n                                    </span>\n                                    <WhiteButton name=\"다시 반영하기\" click={reEditCalendar}/>\n                                </div>\n                                }\n                                {!notUsingCalendar && editcalendar ?\n                                <LectureCalendar \n                                    academyDates={academyDates}\n                                    calendarData={resultDates} \n                                    path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}\n                                    createDate={createDate}\n                                    // updateDate={updateDate}\n                                    deleteDate={deleteDate}\n                                    lectureId={editLectureInfo.id}\n                                    setResultDates={setresultDates}\n                                />:\n                                <div></div>\n                            }\n                            <hr className=\"lecture-hr\"/>\n                            <div className=\"lecture-grid-layout2 mb15\">\n                                <span className=\"lecture-info-title\">강의 URL 주소</span>\n                                <input className=\"lecture-input mr15\" defaultValue={editLectureInfo.sample_url} name=\"sample_url\" onChange={onEdit}/>\n                                <span className=\"lecture-info-title\">강의 내용 설명</span>\n                                <textarea className=\"lecture-input mr15 h600\" defaultValue={selectedLecture.intro.replaceAll(\"<br/>\",\"\\n\")} name=\"intro\" onChange={onEdit}/>\n                            </div>\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr15\" name=\"수정 완료\" click={updateFinishBtn}/>\n                                <GreyButton class=\"\" name=\"수정 취소\" click={cancelBtnClick}/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"show-lecture-detail\">\n                        <div className=\"detail-title\">\n                            <h2>{selectedLecture.name}</h2>\n                            <span>{selectedLecture.instructor_name} 작성</span>\n                            <span className=\"lecture-detail-date\">강의가능기간: {selectedLecture.date !== null && selectedLecture.date !== \"\"? selectedLecture.date : \"일정 미지정\"}</span>\n                        </div>\n                        <div className=\"detail-content\">\n                            <div className=\"detail-sub-info\">\n                                <span>강의 가능 지역</span>\n                                <span>: {selectedLecture.region} </span>\n                                <span>강의 주제 카테고리\u001d</span>\n                                <span>: {selectedLecture.topic}</span>\n                                {selectedLecture.sample_url !== null && selectedLecture.sample_url !== \"\" && selectedLecture.sample_url !== \"null\"? <span>강의 URL 주소</span>:null}\n                                {selectedLecture.sample_url !== null && selectedLecture.sample_url !== \"\" && selectedLecture.sample_url !== \"null\"? <span>: <a href={selectedLecture.sample_url}>{selectedLecture.sample_url}</a></span>:null}\n                            </div>\n                            <p className=\"mb30\">\n                                {selectedLecture.intro.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}\n                            </p>\n                            {\n                                selectedLecture.date.length === 0?\n                                \"일정 추후 문의\":\n                                <div className=\"lecture-inst-calendar\">\n                                    <ReadCalendar\n                                        academyDates={academyDates}\n                                        readMainCalendar={readMainCalendar} \n                                        calendarData={calendarInfo} \n                                        path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} \n                                        clickedLecture={selectedLecture}/>\n                                </div>\n                            }\n                            {/* <div className=\"lecture-inst-calendar\">\n                                <ReadCalendar academyDates={academyDates} readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} clickedLecture={selectedLecture}/>\n                            </div> */}\n                            {isShowDelete ?\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"\" name=\"복구하기\" click={deleteToExist}/>\n                            </div>\n                            :\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr15\" name=\"수정하기\" click={editBtnClick}/>\n                                <GreyButton class=\"\" name=\"삭제하기\" click={deleteBtnClick}/>\n                            </div>\n                            }\n                        </div>\n\n                    </div>\n                    :\n                    null\n                    }\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminLecture;\n","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/main.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/instructor.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/userContacted.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/visitDiary.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/mypage/lecture.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/phrase.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/users.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/category.js",["231"],"import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_category.css';\nimport WhiteButton from '../../modules/button/white_button';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\n\nfunction AdminCategory() {\n    const [keyword, setKeyword] = useState(null);\n    const [categoryInfo, setcategoryInfo] = useState(null)\n    const [editCategory, seteditCategory] = useState(null)\n    const [isDisable, setisDisable] = useState(false)\n    const [addDisable, setaddDisable] = useState(false)\n    const [addCategory, setaddCategory] = useState({name:\"\", status:\"\", disable:\"0\", priority:\"0\"})\n    const [isAdd, setisAdd] = useState(false)\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [statusSelect, setStatusSelect] = useState(-2);\n\n    useEffect(() => {\n        readCategory();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        readCategory();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusSelect])\n    \n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readCategory = async() => {\n        if(keyword !== null && keyword !== ''){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'topic',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        statusSelect: statusSelect,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setcategoryInfo(response.data)\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'topic',\n                {\n                    params: {\n                        statusSelect: statusSelect,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setcategoryInfo(response.data)\n        }\n        setKeyword('');\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    const clickEditFinish = async() => {\n        editCategory.token = window.sessionStorage.getItem('token');\n        editCategory.manageID = window.sessionStorage.getItem('id');\n        if(window.confirm(\"카테고리를 수정하시겠습니까?\")) {\n            axios(\n                {\n                url: process.env.REACT_APP_RESTAPI_HOST+'topic',\n                method: 'put',\n                data: editCategory,\n                }\n            ).then(function(res) {\n                alert(\"수정이 완료되었습니다.\");\n                readCategory()  \n                seteditCategory(null)\n            })\n        }\n    }\n\n    const createCategory = async() => {\n        var params = new URLSearchParams();\n        params.append('name', addCategory.name);\n        params.append('disable', addCategory.disable);\n        params.append('priority', addCategory.priority);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"카테고리를 추가하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'topic',\n            params,\n            ).then(function(res) {\n                alert(res.data);\n                readCategory()\n                setisAdd(false);\n                setaddDisable(false);\n                setaddCategory({name:\"\", status:\"\", disable:\"0\", priority:\"0\"})\n            });\n        }\n    }\n\n    const confirmCategory = async(category) => {\n        if(window.confirm(\"카테고리를 수락하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'topic/status',\n                    method: 'put',\n                    data: {\n                        status: 1,\n                        id: category.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"수락되었습니다.\");\n                readCategory()\n            })\n        }\n    }\n\n    const rejectCategory = async(category) => {\n        if(window.confirm(\"카테고리를 거절하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'topic/status',\n                    method: 'put',\n                    data: {\n                        status: -1,\n                        id: category.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"거절되었습니다.\");\n                readCategory()\n            })\n        }\n    }\n\n    const clickEditBtn = (category) => {\n        seteditCategory(category);\n        if(category.disable === 1)\n            setisDisable(true)\n        else\n            setisDisable(false)\n    }\n\n    const onEdit = (e) => {\n        const {value, name} = e.target;\n        seteditCategory({\n            ...editCategory,\n            [name]:value\n        })\n    }\n\n    const onAdd = (e) => {\n        const {value, name} = e.target;\n        setaddCategory({\n            ...addCategory,\n            [name]:value\n        })\n    }\n\n    const clickCancelBtn = () => {\n        seteditCategory(null);\n    }\n\n    const addCancelBtn = () => {\n        setisAdd(false)\n        setaddDisable(false);\n        setaddCategory({name:\"\", status:\"\", disable:\"0\", priority:\"0\"})\n    }\n\n    const clickAddDisableBtn = () => {\n        if(addDisable) {\n            setaddDisable(false)\n            setaddCategory({\n                ...addCategory,\n                disable: 0\n            })\n        }\n        else {\n            setaddDisable(true)\n            setaddCategory({\n                ...addCategory,\n                disable: 1\n            })\n        }\n    } \n\n    const clickDisableBtn = () => {\n        if(isDisable) {\n            setisDisable(false)\n            seteditCategory({\n                ...editCategory,\n                disable: 0\n            })\n        }\n        else {\n            setisDisable(true)\n            seteditCategory({\n                ...editCategory,\n                disable: 1\n            })\n        }\n    }\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = categoryInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"category\";\n        const ws = XLSX.utils.json_to_sheet(categoryInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">주제 카테고리 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 relative\">\n                    \n                    <p className=\"table-name mb40\">\n                        주제 카테고리 관리\n                        <GreyButton class=\"right\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    </p>\n                    \n                    <div className=\"mb35\">\n                        <select defaultValue={statusSelect} className=\"mr15 p48 user-search\" onChange={(e) => {setStatusSelect(e.target.value)}}>\n                            <option value=\"-2\">전체</option>\n                            <option value=\"0\">일반</option>\n                            <option value=\"1\">숨겨진 카테고리</option>\n                        </select>\n                        <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"카테고리명으로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                        <GreyButton name=\"검색\" click={readCategory}/>\n                    </div>\n                    \n                    \n                    <div className=\"mt50 table-row-category\">\n                        <span className=\"th category-index\"></span>\n                        <span className=\"th\">카테고리명</span>\n                        <span className=\"th\">우선순위</span>\n                        <span className=\"th\">숨김여부</span>\n                        <span className=\"th category-btn-col\"></span>\n                    </div>\n                    { categoryInfo !== null && categoryInfo.length !== 0 ?\n                        currentPosts(categoryInfo).map((category, index) => \n                            <div key={category.id} className={category.status === 0 ? \"table-row-category new-category\": \"table-row-category\"}>\n                                <span className=\"td category-index\">{(index+1)+((page-1)*postsPerPage)}</span>\n                                {editCategory && category.id === editCategory.id ? <span className=\"td input-row\"><input value={editCategory.name} name=\"name\" onChange={onEdit}/></span>:<span className=\"td\">{category.name}</span>}\n                                {editCategory && category.id === editCategory.id ? <span className=\"td input-row\"><input value={editCategory.priority} type=\"number\" name=\"priority\" onChange={onEdit}/></span>:<span className=\"td\">{category.priority}</span>}\n                                {editCategory && category.id === editCategory.id ? <span className=\"td input-row\"><input style={{width:\"auto\", margin:\"6px 5px\"}} type=\"radio\" id=\"disable\" checked={isDisable} onClick={clickDisableBtn} onChange={clickDisableBtn}/></span>:<span className=\"td\">{category.disable === 1 ? \"O\" : \"X\"}</span>}\n                                {editCategory && category.id === editCategory.id ?\n                                <span className=\"td category-btn-col\">\n                                    <WhiteButton class=\"mr15\" name=\"완료\" click={clickEditFinish}/>\n                                    <WhiteButton name=\"취소\" click={clickCancelBtn}/>\n                                </span>\n                                :category.status === 0 ?\n                                <span className=\"td category-btn-col\">\n                                    <WhiteButton class=\"mr15\" name=\"수락\" click={() => {confirmCategory(category)}}/>\n                                    <WhiteButton name=\"거절\" click={() => {rejectCategory(category)}}/>\n                                </span>\n                                :category.status === 1 ?\n                                <span className=\"td category-btn-col\">\n                                    <WhiteButton class=\"mr15\" name=\"수정\" click={() => {clickEditBtn(category)}}/>\n                                    {/* <WhiteButton name=\"숨기기\"/> */}\n                                </span>\n                                :<span className=\"td category-btn-col reject-category\">\n                                    거절됨\n                                </span>\n                                }\n                                \n                            </div>\n                        )\n                        :\n                        <div className=\"no-content\">등록된 카테고리가 없습니다.</div>\n                    }\n\n                    {isAdd ?\n                    <div className=\"table-row-category\">\n                        <span className=\"td category-index\"></span>\n                        <span className=\"td input-row\"><input value={addCategory.name} name=\"name\" onChange={onAdd}/></span>\n                        <span className=\"td input-row\"><input value={addCategory.priority} type=\"number\" name=\"priority\" onChange={onAdd}/></span>\n                        <span className=\"td input-row\"><input style={{width:\"auto\", margin:\"6px 5px\"}} type=\"radio\" checked={addDisable} onClick={clickAddDisableBtn} onChange={clickAddDisableBtn}/></span>\n                        <span className=\"td category-btn-col\">\n                            <WhiteButton class=\"mr15\" name=\"추가\" click={() => {createCategory()}}/>\n                            <WhiteButton name=\"취소\" click={addCancelBtn}/>\n                        </span>\n                    </div>\n                    :\n                    null\n                    }\n                </div>\n                <Pagination \n                    activePage={page} \n                    itemsCountPerPage={postsPerPage} \n                    totalItemsCount={categoryInfo !== null ? categoryInfo.length : 0} \n                    pageRangeDisplayed={5} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} \n                />\n                <div style={{textAlign:'right'}}>\n                    <WhiteButton class=\"mt20\" name=\"카테고리 추가\" click={() => {setisAdd(true)}}/>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminCategory;","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/administrator.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/contact.js",["232","233"],"import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport Postcode from '@actbase/react-daum-postcode';\nimport FileSaver from \"file-saver\";\nimport DataListInput from \"react-datalist-input\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_contact.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport BlueButton from '../../modules/button/admin_blue_btn';\nimport WhiteButton from '../../modules/button/admin_white_btn';\nimport CommonModal from '../../modules/modal/common';\n\nfunction AdminContact() {\n    const [keyword, setKeyword] = useState('');\n    const [contactDate, setContactDate] = useState('');\n    const [contactStartDate, setContactStartDate] = useState('');\n    const [contactEndDate, setContactEndDate] = useState('');\n    const [contactMemo, setContactMemo] = useState('');\n    const [statusSelect, setStatusSelect] = useState(-2);\n\n    const [clickedContact, setClickedContact] = useState(null);\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [isEdit, setisEdit] = useState(false);\n    const [page, setPage] = useState(1);\n    const postsPerPage = 8;\n\n    const [isOpen, setisOpen] = useState(false);\n    const [isAgree, setisAgree] = useState(false);\n    const [addApplicationInfo, setaddApplicationInfo] = useState({zip_code:\"\", admin_email:\"\", city:\"\", district:\"\", addr1:\"\", addr2:\"\", memo:\"\", attendee_number:\"50\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n    const [morning, setmorning] = useState(false);\n    const [afternoon, setafternoon] = useState(false);\n    const [dinner, setdinner] = useState(false);\n    const [lectureDates, setlectureDates] = useState(null);\n    const [newChurchAdd, setnewChurchAdd] = useState(false);\n    const [churchData, setchurchData] = useState([]);\n    const [churchInfo, setchurchInfo] = useState(null);\n    const [selectChurch, setselectChurch] = useState(null);\n    const [isPostCodeOpen, setisPostCodeOpen] = useState(false);\n    const [lectureData, setlectureData] = useState(null);\n    const [selectedLecture, setselectedLecture] = useState(null);\n\n    useEffect(() => {\n        readApplicationForms();\n        readChurchInfo();\n        readLecture();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        readApplicationForms();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusSelect])\n\n\n    useEffect(() => {\n        var churchArray = [];\n        if(churchInfo !== null) {\n            for(var i=0 ; i<churchInfo.length ; i++) {\n                churchArray.push({label:churchInfo[i].name, key:churchInfo[i].id})\n            }\n            setchurchData(churchArray);\n        }\n    }, [churchInfo])\n\n    useEffect(() => {\n        if(selectedLecture !== null)\n            readLectureDate(selectedLecture.id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLecture])\n\n    useEffect(() => {\n        if(selectChurch !== null) {\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                church: selectChurch.name,\n                addr1: selectChurch.addr1,\n                addr2: selectChurch.addr2,\n                zip_code: selectChurch.zip_code,\n                city: selectChurch.city,\n                district: selectChurch.district,\n                pastor: selectChurch.pastor,\n                phone: selectChurch.phone,\n                email: selectChurch.email\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectChurch])\n\n    const readLecture = async () => {\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/subject', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setlectureData(response.data);\n        setselectedLecture(response.data[0]);\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            lecture_id: response.data[0].id\n        });\n    }\n\n    const readChurchInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'church', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setchurchInfo(response.data);\n    }\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readApplicationForms = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application',\n            {\n                params: {\n                    keyword: keyword,\n                    statusSelect: statusSelect,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setapplicationInfo(response.data);\n        setKeyword('');\n    }\n\n    const cancelContact = async() => {\n        if(window.confirm(\"컨택을 취소하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: clickedContact.id,\n                        status: -1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setClickedContact({\n                    ...clickedContact,\n                    status: -1\n                })\n                alert(\"컨택이 취소되었습니다.\")\n            })\n        }\n    }\n\n    const contactStart = async() => {\n        if(window.confirm(\"신청자와 컨택을 시작하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: clickedContact.id,\n                        status: 1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setClickedContact({\n                    ...clickedContact,\n                    status: 1\n                })\n            })\n        }\n    }\n\n    const finishContact = async() => {\n        if(window.confirm(\"날짜를 확정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/complete',\n                    method: 'put',\n                    data: {\n                        selectDate: contactDate,\n                        contact_start_date: contactStartDate,\n                        contact_end_date: contactEndDate,\n                        application_form_id: clickedContact.id,\n                        lecture_id: clickedContact.lecture_id,\n                        contact_memo: contactMemo,\n                        status:2,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                alert(\"컨택이 완료되었습니다.\")\n                setClickedContact(null);\n                setisEdit(false);\n            })\n        }\n    }\n\n    function clickContact(application) {\n        setisEdit(false)\n        if(clickedContact === null || application !== clickedContact) {\n            setClickedContact(application);\n            if(application.date === null)   setContactDate(\"\")\n            else setContactDate(application.date)\n            if(application.contact_start_date === null)   setContactStartDate(\"\")\n            else setContactStartDate(application.contact_start_date)\n            if(application.contact_end_date === null)   setContactEndDate(\"\")\n            else setContactEndDate(application.contact_end_date)\n            if(application.memo === null)   setContactMemo(\"\")\n            else setContactMemo(application.memo)\n        }\n        else\n            setClickedContact(null);\n    }\n\n    const clickEditBtn = () => {\n        setisEdit(true)\n    }\n\n    const clickBackBtn = () => {\n        setisEdit(false);\n        if(clickedContact.date === null)   setContactDate(\"\")\n        else setContactDate(clickedContact.date)\n        if(clickedContact.contact_start_date === null)   setContactStartDate(\"\")\n        else setContactStartDate(clickedContact.contact_start_date)\n        if(clickedContact.contact_end_date === null)   setContactEndDate(\"\")\n        else setContactEndDate(clickedContact.contact_end_date)\n        if(clickedContact.memo === null)   setContactMemo(\"\")\n        else setContactMemo(clickedContact.memo)\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"contact\";\n        const ws = XLSX.utils.json_to_sheet(applicationInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const closeModal = () => {\n        setaddApplicationInfo({zip_code:\"\", city:\"\", district:\"\", admin_email:\"\", addr1:\"\", addr2:\"\", memo:\"\", phone:\"\", email:\"\", pastor:\"\", lecture_id: lectureData[0].id, lecture_date_id:0, attendee_number:\"50\", attendee_target:\"유아\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n        setmorning(false);\n        setafternoon(false);\n        setdinner(false);\n        setselectedLecture(lectureData[0]);\n        setselectChurch(null);\n        setnewChurchAdd(false);\n        setisOpen(false);\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            [name]: value\n        });\n    };\n\n    const setMorning = () => {\n        if(morning)\n            setmorning(false)\n        else\n            setmorning(true)\n    }\n    const setAfternoon = () => {\n        if(afternoon)\n            setafternoon(false)\n        else\n            setafternoon(true)\n    }\n    const setDinner = () => {\n        if(dinner)\n            setdinner(false)\n        else\n            setdinner(true)\n    }\n\n    const setIsAgree = () => {\n        if(isAgree)\n            setisAgree(false)\n        else\n            setisAgree(true)\n    }\n\n    const readLectureDate = async (lecture_id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate', {\n                params: {\n                    lecture_id: lecture_id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        if(response.data !== null && response.data.length > 0) \n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            lecture_id: lecture_id,\n            lecture_date_id: response.data[0].id\n        });\n        else\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            lecture_id: lecture_id,\n            lecture_date_id: 0\n        });\n        setlectureDates(response.data);\n    }\n\n    const handleChange = (selectedItem) => {\n        setselectChurch(null);\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            church_id: selectedItem.key,\n        });\n        setselectChurch(churchInfo.find(element => element.id === selectedItem.key))\n    };\n\n    const clickAddBtn = () => {\n        setselectChurch(null);\n\n        if(newChurchAdd) {\n            setnewChurchAdd(false)\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                zip_code:\"\", \n                addr1:\"\", \n                addr2:\"\",\n                city:\"\", \n                district:\"\",\n                pastor:\"\",\n                email:\"\",\n                phone: \"\"\n            })\n        }\n        else {\n            setnewChurchAdd(true);\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                zip_code:\"\", \n                addr1:\"\", \n                addr2:\"\", \n                city:\"\", \n                district:\"\",\n                pastor:\"\",\n                email:\"\",\n                phone: \"\",\n                church_id: 0\n            })\n        }\n    }\n\n    const selectPostCode = (data) => {\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n        setisPostCodeOpen(false);\n    }\n\n    const lectureChange = (e) => {\n        \n        // var data = lectureData.find(element => element.id == e.target.value);\n        var data = null;\n        for(var i=0 ; i<lectureData.length ; i++) {\n            if(lectureData[i].id == e.target.value) {\n                console.log(\"걸림\");\n                data = lectureData[i];\n            }\n        }\n        console.log(e.target.value, lectureData);\n        console.log(\"data!!!!!!!\",data);\n        if(data.date === \"\") {\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                lecture_id: e.target.value,\n                lecture_date_id: 0\n            })\n        } else {\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                lecture_id: e.target.value\n            })\n        }\n        setselectedLecture(data);\n    }\n\n    const addApplication = async () => {\n\n        var timezone = \"\";\n        if(morning)\n            timezone += \"오전 \";\n        if(afternoon)\n            timezone += \"오후 \";\n        if(dinner)\n            timezone += \"저녁 \";\n\n        if(timezone === \"\" || addApplicationInfo.addr1 === \"\" || addApplicationInfo.addr2 === \"\" || addApplicationInfo.admin_name === \"\" || addApplicationInfo.admin_phone === \"\" || addApplicationInfo.attendee_number === \"\" || addApplicationInfo.attendee_target === \"\" || addApplicationInfo.church_id === \"\" || addApplicationInfo.lecture_date_id === \"\" || addApplicationInfo.zip_code === \"\" || addApplicationInfo.lecture_id === \"\") {\n            alert(\"신청서 정보를 모두 입력해주세요!\")\n            return;\n        }\n\n        if(newChurchAdd) {\n            if(addApplicationInfo.pastor === \"\" || addApplicationInfo.email === \"\" || addApplicationInfo.phone === \"\") {\n                alert(\"새로운 교회와 관련된 정보를 모두 입력해주세요!\");\n                return;\n            }\n        }\n\n        var attendee_target = [];\n        if(addApplicationInfo.attendeeTarget[0]===1) attendee_target.push(\"유아\");\n        if(addApplicationInfo.attendeeTarget[1]===1) attendee_target.push(\"초등학생\");\n        if(addApplicationInfo.attendeeTarget[2]===1) attendee_target.push(\"중학생\");\n        if(addApplicationInfo.attendeeTarget[3]===1) attendee_target.push(\"고등학생\");\n        if(addApplicationInfo.attendeeTarget[4]===1) attendee_target.push(\"청년\");\n        if(addApplicationInfo.attendeeTarget[5]===1) attendee_target.push(\"중년\");\n        if(addApplicationInfo.attendeeTarget[6]===1) attendee_target.push(\"장년\");\n        if(addApplicationInfo.attendeeTarget[7]===1) attendee_target.push(\"노년\");\n        attendee_target = attendee_target.join(',');\n\n        var date = \"추후협의\";\n        if(addApplicationInfo.lecture_date_id !== 0)\n            date = lectureDates.find(element => parseInt(element.id) === parseInt(applicationInfo.lecture_date_id)).date;\n        \n        if(!isAgree) {\n            alert(\"개인정보 활용에 동의해주세요!\");\n            return ;\n        }\n        console.log(selectedLecture);\n        console.log(addApplicationInfo);\n        console.log(lectureDates);\n\n        var params = new URLSearchParams();\n        params.append('user_id', window.sessionStorage.getItem('id'));\n        params.append('church_id', addApplicationInfo.church_id);\n        params.append('zip_code', addApplicationInfo.zip_code);\n        params.append('addr1', addApplicationInfo.addr1);\n        params.append('addr2', addApplicationInfo.addr2);\n        params.append('pastor', addApplicationInfo.pastor);\n        params.append('email', addApplicationInfo.email);\n        params.append('phone', addApplicationInfo.phone);\n        params.append('lecture_id', addApplicationInfo.lecture_id);\n        params.append('lecture_date_id', addApplicationInfo.lecture_date_id);\n        params.append('memo', addApplicationInfo.memo);\n        params.append('admin_phone', addApplicationInfo.admin_phone);\n        params.append('admin_name', addApplicationInfo.admin_name);\n        params.append('admin_email', addApplicationInfo.admin_email);\n        params.append('attendee_number', addApplicationInfo.attendee_number);\n        params.append('attendee_target', attendee_target);\n        params.append('timezone', timezone);\n        params.append('inst_email', addApplicationInfo.email);\n        params.append('date', date);\n        params.append('lecture_name', selectedLecture.name);\n        params.append('church_name', addApplicationInfo.church);\n        params.append('link', process.env.REACT_APP_HOMEPAGE);\n        params.append('church', addApplicationInfo.church);\n        params.append('city', addApplicationInfo.city);\n        params.append('district', addApplicationInfo.district);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"강의를 신청하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'application',\n            params,\n            ).then(function(res) {\n                alert(\"신청서가 등록되었습니다.\");\n                readApplicationForms();\n                setisOpen(false);\n                setisAgree(false);\n                setmorning(false);\n                setafternoon(false);\n                setdinner(false);\n                setnewChurchAdd(false);\n                setselectChurch(null);\n                setaddApplicationInfo({zip_code:\"\", city:\"\", district:\"\", admin_email:\"\", addr1:\"\", addr2:\"\", memo:\"\", phone:\"\", email:\"\", pastor:\"\", lecture_id: lectureData[0].id, lecture_date_id:0, attendee_number:\"50\", attendee_target:\"유아\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n                setselectedLecture(lectureData[0]);  \n            });\n        }\n    }\n\n    const clickTarget = (index) => {\n        var tempTarget = addApplicationInfo.attendeeTarget;\n        if(tempTarget[index] === 0){\n            tempTarget[index] = 1;\n        } else {\n            tempTarget[index] = 0;\n        }            \n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            attendeeTarget: tempTarget\n        })\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">컨택 내역 목록</p>\n            <div id=\"contact-wrapper\" className=\"admin-content-wrapper\">\n                <div>\n                    <div className=\"table-wrapper mt0\">\n                        <p className=\"adcontact-table-name\">\n                            컨택 내역 목록\n                            <GreyButton class=\"right\" name=\"컨택 추가하기\" click={() => {setisOpen(true)}}/>\n                            <GreyButton class=\"right mr15\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                        </p>\n                        <CommonModal open={isOpen} close={closeModal} func={addApplication} header=\"컨택 내역 추가하기\" footer=\"추가하기\"> \n                            <div>\n                                <div className=\"form-wrapper\">\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">신청할 강의 선택</span>\n                                        <select defaultValue={addApplicationInfo.lecture_id} name=\"lecture_id\" className=\"p48\" onChange={lectureChange}>\n                                            {lectureData !== null &&\n                                            lectureData.map((lectureData, index) =>\n                                                <option key={lectureData.id} value={lectureData.id}>{lectureData.name}</option>\n                                            )\n                                            }\n                                        </select>\n                                    </div>\n                                    {/* <div className=\"mb15\">\n                                        <span className=\"form-title\">강의명</span>\n                                        <span>{selectedLecture !== null ? selectedLecture.name : \"강의를 선택해주세요\"}</span>\n                                    </div> */}\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">강사명</span>\n                                        <span>{ selectedLecture !== null ? selectedLecture.instructor_name : \"강의를 선택해주세요\"}</span>\n                                    </div>\n                                    <hr className=\"mb30\"/>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">교회명</span>\n                                        {newChurchAdd ?\n                                        <input className=\"form-input\" type=\"text\" placeholder=\"추가할 교회명\" name=\"church\" onChange={onAdd}/>\n                                        :\n                                        churchData !== null ?\n                                        <DataListInput\n                                        style={{width:\"100px\"}}\n                                        placeholder=\"교회를 선택하세요.\"\n                                        items={churchData}\n                                        onSelect={handleChange}\n                                        />\n                                        :\n                                        null\n                                        }\n                                        {newChurchAdd ?\n                                        <BlueButton class=\"blue-btn\" name=\"교회 목록 보기\" click={clickAddBtn}/>\n                                        :\n                                        <BlueButton class=\"blue-btn\" name=\"새로운 교회 추가\" click={clickAddBtn}/>\n                                        }\n\n                                    </div>\n                                    {/* <CommonModal open={isModal} close={closeModal} header=\"주소 찾기\" footer=\"닫기\"> \n                                        <Postcode\n                                            style={{ width: 320, height: 320 }}\n                                            jsOptions={{ animated: true, hideMapBtn: true }}\n                                            onSelected={data => {\n                                                selectPostCode(data);\n                                                setModal(false);\n                                            }}\n                                        />\n                                    </CommonModal> */}\n\n                                    \n                                    <div className=\"mb15\" style={{position: 'relative'}}>\n                                        <span className=\"form-title\">주소 검색</span>\n                                        <input readOnly placeholder=\"우편번호\" className=\"form-addr mr10\" value={addApplicationInfo.zip_code} name=\"zip_code\" onChange={onAdd}/> \n                                        {isPostCodeOpen ? \n                                        <BlueButton click={() => setisPostCodeOpen(false)} name=\"주소창닫기\" class=\"blue-btn\"/>:\n                                        <BlueButton click={() => setisPostCodeOpen(true)} name=\"주소찾기\" class=\"blue-btn\"/>\n                                        }\n                                        {isPostCodeOpen &&\n                                        <Postcode\n                                            style={{ width: 320, height: 320, position:'absolute', left:'170px' }}\n                                            jsOptions={{ animated: true }}\n                                            onSelected={data => selectPostCode(data)}\n                                        />\n                                        }\n                                    </div>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\"></span>\n                                        <input readOnly placeholder=\"주소\" className=\"form-addr\" value={addApplicationInfo.addr1} name=\"addr1\" onChange={onAdd}/>\n                                    </div>\n                                    <div className=\"mb35\">\n                                        <span className=\"form-title\"></span>\n                                        <input className=\"form-addr\" name=\"addr2\" onChange={onAdd} placeholder=\"상세 주소 입력\" value={addApplicationInfo.addr2}/>\n                                    </div>\n                                    {newChurchAdd &&\n                                    <span>\n                                        <div className=\"mb15\">\n                                            <span className=\"form-title\">담임 목사</span>\n                                            <input className=\"form-input\" name=\"pastor\" placeholder=\"담임 목사 이름\" value={addApplicationInfo.pastor} onChange={onAdd}/>\n                                        </div>\n                                        <div className=\"mb15\">\n                                            <span className=\"form-title\">대표 연락처</span>\n                                            <input className=\"form-input\" name=\"phone\" placeholder=\"교회 대표 연락처\" value={addApplicationInfo.phone} onChange={onAdd}/>\n                                        </div>\n                                        <div className=\"mb30\">\n                                            <span className=\"form-title\">대표 이메일</span>\n                                            <input className=\"form-input\" name=\"email\" placeholder=\"교회 대표 이메일\" value={addApplicationInfo.email} onChange={onAdd}/>\n                                        </div>\n                                    </span>\n                                    }\n                                    <hr className=\"m30 mb30\"/>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">담당자 이름</span>\n                                        <input className=\"form-input\" name=\"admin_name\" onChange={onAdd}/>\n                                    </div>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">담당자 휴대전화</span>\n                                        <input className=\"form-input\" name=\"admin_phone\" onChange={onAdd}/>\n                                    </div>\n                                    <div className=\"mb30\">\n                                        <span className=\"form-title\">담당자 이메일(선택)</span>\n                                        <input className=\"form-input\" name=\"admin_email\" onChange={onAdd}/>\n                                    </div>\n                                    {/* <div className=\"mb30\">\n                                        <span className=\"form-title\">담당자 이메일</span>\n                                        <input className=\"form-input\" name=\"email\" onChange={onAdd}/>\n                                    </div> */}\n                                    <hr className=\"m30\"/>\n                                    <div className=\"select-wrapper\">\n                                        <div style={{gridColumn:'1 / span 2'}}>\n                                            <span className=\"form-title\">강의 대상</span>\n                                            {addApplicationInfo !== null &&\n                                                <span>\n                                                    <span className={addApplicationInfo.attendeeTarget[0]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(0)}>유아</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[1]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(1)}>초등학생</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[2]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(2)}>중학생</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[3]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(3)}>고등학생</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[4]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(4)}>청년</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[5]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(5)}>중년</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[6]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(6)}>장년</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[7]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(7)}>노년</span>\n                                                </span>\n                                            }\n                                        </div>\n                                        <div>\n                                            <span className=\"form-title\">청강자 수</span>\n                                            <select className=\"form-input\" name=\"attendee_number\" defaultValue={addApplicationInfo.attendee_number} onChange={onAdd}>\n                                                <option>50</option>\n                                                <option>100</option>\n                                                <option>200</option>\n                                                <option>500</option>\n                                                <option>1000</option>\n                                                <option>1000</option>\n                                            </select>\n                                        </div>\n                                        <div>\n                                            <span className=\"form-title\">강의 희망날짜</span>\n                                            <select className=\"form-input\" name=\"lecture_date_id\" defaultValue={addApplicationInfo.lecture_date_id} onChange={onAdd}>\n                                            {lectureDates !== null && lectureDates.length > 0 ?\n                                            lectureDates.map((date, i) => <option key={i} value={date.id}>{date.date}</option>)\n                                            : <option value=\"0\">추후 협의</option>\n                                            }\n                                            </select>\n                                        </div>\n                                        <div style={{display:\"flex\"}}>\n                                            <span className=\"form-title\">원하는 시간대</span>\n                                            <WhiteButton class={morning ? \"application-time application-time-select\" : \"application-time\"} name=\"오전\" click={setMorning}/>\n                                            <WhiteButton class={afternoon ? \"application-time application-time-select\" : \"application-time\"} name=\"오후\" click={setAfternoon}/>\n                                            <WhiteButton class={dinner ? \"application-time application-time-select\" : \"application-time\"} name=\"저녁\" click={setDinner}/>\n                                        </div>\n\n                                    </div>\n\n                                    <textarea className=\"form-textarea\" placeholder=\"요청 사항 / 컨택 포인트 작성란\" name=\"memo\" onChange={onAdd}></textarea>\n\n                                    <ul className=\"agree-ul mb40\">\n                                        <li className=\"mb10\">이단 및 사이비 단체는 작성글을 게시할 수 없으며 적발 시 예배 및 설교 방해죄 (형법 제 158조), 퇴거불응죄(형법 제 319조 2항), 업무방해죄(형법 제314조), 개인정보보호법 위반 등으로 처벌받을 수 있습니다.</li>\n                                        <li>개인 정보 수집 동의 - 이용자가 제공한 모든 정보는 다음의 목적을 위해 활용하며, 하기 목적 이외의 용도로는 사용하지 않습니다.</li>\n                                    </ul>\n                                    <div className=\"mb40\">\n                                        <input className=\"agree-check mr10\" type=\"checkbox\" onClick={setIsAgree}/>\n                                        <span className=\"fs14\">개인정보 수집 및 이용에 대해 동의합니다.</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </CommonModal>\n\n                        <div className=\"mb20\">\n                            <select defaultValue = {statusSelect} className=\"inst-group mr15 p48\" onChange={(e) => {setStatusSelect(e.target.value)}}>\n                                <option value=\"-2\">전체</option>\n                                <option value=\"0\">신규(미확인)</option>\n                                <option value=\"1\">진행중</option>\n                                <option value=\"2\">일정확정됨</option>\n                                <option value=\"-1\">취소됨</option>\n                            </select>\n                            <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"강사명, 강의명, 교회명, 담당자명, 담당자 핸드폰 번호로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                            <GreyButton name=\"검색\" click={readApplicationForms}/>\n                        </div>\n                        <div className=\"table-row-adcontact\">\n                            <span className=\"th\">강사명</span>\n                            <span className=\"th\">강의명</span>\n                            <span className=\"th\">교회명</span>\n                            <span className=\"th\">희망 날짜</span>\n                            <span className=\"th\">컨택 상황</span>\n                        </div>\n                        { applicationInfo !== null && applicationInfo.length > 0 ?\n                            currentPosts(applicationInfo).map((data, index) => \n                                <div key={data.id} className={clickedContact !== null && clickedContact.id === data.id ? \"click-inst-row table-row-adcontact\" : \"table-row-adcontact\"} onClick = {() => {clickContact(data)}}>\n                                    <span className=\"td\">{data.inst_name}</span>\n                                    <span className=\"td\">{data.lecture_name}</span>\n                                    <span className=\"td\">{data.church_name}</span>\n                                    <span className=\"td\">{data.date}({data.timezone})</span>\n                                    {data.status === 0 ?\n                                        <span className=\"td\"><span className=\"contact-ing\" style={{color:'#ff0000b8', border:'1px solid #ff0000b8'}}>신규(미확인)</span></span>\n                                        : data.status === 1 ?\n                                        <span className=\"td\"><span className=\"contact-ing\">진행중</span></span>\n                                        : data.isVisiting > 0 ?\n                                        <div className=\"td contact-ok\">강의완료</div>\n                                        : data.status === 2 ?\n                                        <div className=\"td contact-ok\">일정확정됨</div>:\n                                        <div className=\"td contact-cancel\">취소됨</div>\n                                    }\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">신청서가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />\n                </div>\n                <div className=\"relative\">\n                {clickedContact ? \n                isEdit ?\n                <div\n                    className=\"show-lecture-detail\"\n                >\n                    <h2 className=\"mb20\">{clickedContact.lecture_name}</h2>\n                    <hr className=\"bold-hr mb25\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">신청자명</span>\n                        <span>{clickedContact.admin_name}</span>\n                    </div>\n                    <div>\n                        <span className=\"form-title\">연락처</span>\n                        <span>{clickedContact.admin_phone}</span>\n                    </div>\n                    <hr className=\"m20\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회명</span>\n                        <span>{clickedContact.church_name}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">주소</span>\n                        <span>{clickedContact.addr1} {clickedContact.addr2}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회 연락처</span>\n                        <span>{clickedContact.phone}</span>\n                    </div>\n                    <div>\n                        <span className=\"form-title\">교회 이메일</span>\n                        <span>{clickedContact.email}</span>\n                    </div>\n                    <hr className=\"m20\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">강의 대상</span>\n                        <span>{clickedContact.attendee_target}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">청강자 수</span>\n                        <span>{clickedContact.attendee_number}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">원하는 날짜</span>\n                        <input className=\"form-input\" type=\"date\" value={contactDate} onChange={(e)=>setContactDate(e.target.value)}/>\n                    </div>\n                    <div className=\"mb35\">\n                        <span className=\"form-title\">원하는 시간대</span>\n                        <input className=\"form-input\" type=\"time\" value={contactStartDate} onChange={(e)=>setContactStartDate(e.target.value)}/> ~ <input className=\"form-input\" type=\"time\" value={contactEndDate} onChange={(e)=>setContactEndDate(e.target.value)}/>\n                    </div>\n                    <div className=\"mb25 form-grid\">\n                        <span className=\"form-title\">요청사항</span>\n                        <textarea className=\"form-textarea\" type=\"date\" value={contactMemo.replaceAll(\"<br/>\",\"\\n\")} onChange={(e)=>setContactMemo(e.target.value)}/>\n                    </div>\n                    <hr className=\"bold-hr mb35\"/>\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn mr15\" onClick={finishContact}>날짜 수정 완료</button>\n                        <button className=\"form-btn\" onClick={clickBackBtn}>뒤로가기</button>\n                    </div>\n                </div>\n                :\n                <div\n                    className=\"show-lecture-detail\"\n                >\n                    <h2 className=\"mb20\">{clickedContact.lecture_name}</h2>\n                    <hr className=\"bold-hr mb25\"/>\n                    {clickedContact.status !== 0 && \n                    <span>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">신청자명</span>\n                            <span>{clickedContact.admin_name}</span>\n                        </div>\n                        <div>\n                            <span className=\"form-title\">연락처</span>\n                            <span>{clickedContact.admin_phone}</span>\n                        </div>\n                        <hr className=\"m20\"/>\n                    </span>\n                    }\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회명</span>\n                        <span>{clickedContact.church_name}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">주소</span>\n                        <span>{clickedContact.addr1} {clickedContact.addr2}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회 연락처</span>\n                        <span>{clickedContact.phone}</span>\n                    </div>\n                    <div>\n                        <span className=\"form-title\">교회 이메일</span>\n                        <span>{clickedContact.email}</span>\n                    </div>\n                    <hr className=\"m20\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">강의 대상</span>\n                        <span>{clickedContact.attendee_target}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">청강자 수</span>\n                        <span>{clickedContact.attendee_number}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">원하는 날짜</span>\n                        <span>{clickedContact.date}</span>\n                    </div>\n                    <div className=\"mb35\">\n                        <span className=\"form-title\">원하는 시간대</span>\n                        {clickedContact.status === 2 ?\n                        <span>{clickedContact.contact_start_date} ~ {clickedContact.contact_end_date}</span>:\n                        <span>{clickedContact.timezone}</span>}\n                    </div>\n                    <div className=\"mb25 form-grid\">\n                        <span className=\"form-title\">요청사항</span>\n                        <span>{clickedContact.memo.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}</span>\n                    </div>\n                    <hr className=\"bold-hr mb35\"/>\n                    {clickedContact.status === 0 ?\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn mr15\" onClick={contactStart}>연락처 확인하기</button>\n                        {/* <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button> */}\n                    </div>\n                    : clickedContact.status === 1 ?\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn mr15\" onClick={clickEditBtn}>날짜 확정하기</button>\n                        <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                    </div>\n                    : clickedContact.status === 2 ?\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn\" onClick={clickEditBtn}>날짜 수정하기</button>\n                        <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                    </div>\n                    :null\n                    }\n                </div>\n                :\n                <div className=\"select-inst\">\n                    컨택 내역을 선택하세요.\n                </div>\n                }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminContact;","/Users/moonhahyeon/git/FrontEnd/src/components/pages/admin/statistics.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/menu/main.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/menu/common.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/menu/admin.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/footer/footer.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/footer/main_footer.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/read_calendar.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/lecture_daily_calendar.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/white_button.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/admin_grey_btn.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/admin_white_btn.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/admin_blue_btn.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/modal/common.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/lecture_calendar.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/common.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/button/blue_button.js",[],"/Users/moonhahyeon/git/FrontEnd/src/components/modules/calendar/crud_calendar.js",["234"],"import React, { useCallback, useRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport TUICalendar from \"@toast-ui/react-calendar\";\n\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport '../../../assets/css/calendar.css';\nimport \"tui-time-picker/dist/tui-time-picker.css\";\nimport WhiteButton from '../../modules/button/white_button';\n\n// const start = new Date();\n// const end = new Date(new Date().setMinutes(start.getMinutes() + 30));\nconst calendarColor = [\"#ef6f87\",\"#e49d5a\", \"#e4ce5a\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n// const calendarInstructor = [\"#ef6f87\",\"#e49d5a\", \"#2196f3\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n\n\nfunction CommonCalendar(props) {\n    const cal = useRef(null);\n    const [schedules, setschedules] = useState([])\n    const [calendars, setcalendars] = useState([])\n    const [year, setyear] = useState(\"\")\n    const [month, setmonth] = useState(\"\")\n\n    useEffect(() => {\n        if(props.calendarData !== null) {\n            const data = props.calendarData;\n            \n            // var index = 0;\n            var tempSchedule = [];\n            \n            if(props.path !== null && props.path ===\"/admin/academy_date\") {\n                for(var i=0 ; i<data.length ; i++) {\n                    tempSchedule.push({\n                        calendarId: data[i].category_id,\n                        category: \"time\",\n                        isAllDay: true,\n                        isVisible: true,\n                        title: data[i].name,\n                        id: data[i].id,\n                        start: data[i].date,\n                        end: data[i].date\n                    })\n                }\n\n                setschedules(tempSchedule);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.calendarData])\n\n    useEffect(() => {\n        if(props.categoryData !== null) {\n            var data = props.categoryData;\n            var tempCalendar = [];\n            var index = 0;\n\n            for(var i=0 ; i<data.length ; i++) {\n                tempCalendar.push({\n                    id: data[i].id,\n                    name: data[i].name,\n                    color: calendarColor[index],\n                    bgColor: calendarColor[index]+\"40\",\n                    dragBgColor: calendarColor[index]+\"40\",\n                    borderColor: calendarColor[index]\n                })\n                index++;\n                if(index === calendarColor.length)\n                        index=0;\n            }\n            setcalendars(tempCalendar);\n        }\n        \n    }, [props.categoryData])\n\n\n    useEffect(() => {\n        let today = new Date();   \n        let year = today.getFullYear(); // 년도\n        let month = today.getMonth() + 1;  // 월\n        // let date = today.getDate();  // 날짜\n        // let day = today.getDay();  // 요일\n\n        if(month < 10)\n            month = \"0\"+month;\n        setyear(year)\n        setmonth(month)\n    }, [])\n\n    const onClickSchedule = useCallback((e) => {\n        const { calendarId, id } = e.schedule;\n        cal.current.calendarInst.getElement(id, calendarId);\n\n    }, []);\n\n    const createAcademy = async(data) => {\n        var date = data.start._date\n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        var academy_date = year+\"-\"+month+\"-\"+day\n        \n        var params = new URLSearchParams();\n        params.append('name', data.title);\n        params.append('date', academy_date);\n        params.append('category_id', data.calendarId);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        const response = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'academyDate',\n        params,\n        ).then(function(res) {\n            props.readAcademy();\n        });\n    }\n\n    const updateAcademy = async(e) => {\n        const { schedule, changes } = e;\n\n\n        var date = schedule.start._date\n        var changeCategoryId = schedule.calendarId;\n        var changeTitle = schedule.title;\n\n\n        if(changes.hasOwnProperty('start'))\n            date = changes.start._date;\n        if(changes.hasOwnProperty('calendarId'))\n            changeCategoryId = changes.calendarId\n        if(changes.hasOwnProperty('title'))\n            changeTitle = changes.title;\n      \n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        var changeDate = year+\"-\"+month+\"-\"+day\n\n        \n        var updateAcademy = {\n            id: schedule.id,\n            name: changeTitle,\n            date: changeDate,\n            category_id: changeCategoryId,\n            token: window.sessionStorage.getItem('token'),\n            manageID: window.sessionStorage.getItem('id')\n        }\n        axios(\n            {\n                url: process.env.REACT_APP_RESTAPI_HOST+'academyDate',\n                method: 'put',\n                data: updateAcademy\n            }\n        ).then(function(res) {\n            props.readAcademy()\n        })\n    }\n\n    const deleteAcademy = async(id) => {\n        if(window.confirm(\"학사일정을 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'academyDate',\n                    method: 'delete',\n                    data: {\n                        id: id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                props.readAcademy()\n            })\n        }\n    }\n\n    const onBeforeCreateSchedule = useCallback((scheduleData) => {\n        if(window.confirm(\"학사 일정을 추가하시겠습니까?\")) {\n            createAcademy(scheduleData)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onBeforeDeleteSchedule = useCallback((res) => {\n        // eslint-disable-next-line no-unused-vars\n        const { id, calendarId } = res.schedule;\n        deleteAcademy(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onBeforeUpdateSchedule = useCallback((e) => {\n        if(window.confirm(\"일정을 수정하시겠습니까?\")) {\n            updateAcademy(e)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function _getFormattedTime(time) {\n        const date = new Date(time);\n        const h = date.getHours();\n        const m = date.getMinutes();\n\n        return `${h}:${m}`;\n    }\n\n    function _getTimeTemplate(schedule, isAllDay) {\n        var html = [];\n\n        if (!isAllDay) {\n            html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n        }\n        if (schedule.isPrivate) {\n            html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n            html.push(\" Private\");\n        } else {\n            if (schedule.isReadOnly) {\n                html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n            } else if (schedule.recurrenceRule) {\n                html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n            } else if (schedule.attendees.length) {\n                html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n            } else if (schedule.location) {\n                html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n            }\n            html.push(\" \" + schedule.title);\n        }\n\n        return html.join(\"\");\n    }\n\n    const templates = {\n        time: function (schedule) {\n            return _getTimeTemplate(schedule, false);\n        }\n    };\n\n    const NextButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.next();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n        }\n    }, []);\n\n    const PrevButton = useCallback((e) => {\n\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.prev();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            // props.readMainCalendar(date)\n        }\n\n        \n    }, []);\n\n    const TodayButton = useCallback((e) => {\n        if (cal !== null) {\n        const calendarInstance = cal.current.getInstance();\n        calendarInstance.today();\n        var m = calendarInstance.getDate().getMonth() + 1;\n        var y = calendarInstance.getDate().getFullYear();\n        if(m < 10)\n            m = \"0\"+m;\n        // var date = y+\"-\"+m;\n\n        setmonth(m);\n        setyear(y)\n        }\n    }, []);\n\n    return (\n        <div>\n        <h2 className=\"calendar-title\">{year}년 {month}월의 학사일정</h2>\n            <div className=\"mb15\">\n                <WhiteButton class=\"mr15\" name=\"오늘날짜\" click={TodayButton}/>\n                <WhiteButton class=\"mr15\" name=\"<\" click={PrevButton}/>\n                <WhiteButton name=\">\" click={NextButton}/>\n            </div>\n\n            <div style={{textAlign:\"right\", marginBottom:\"15px\"}}>\n                {props.categoryData !== null ? \n                props.categoryData.map((category, index) => {\n                    return <span key={category.id} className=\"mr15\">\n                                <span className=\"color-circle\" style={{background:calendarColor[index]}}></span>\n                                <span>{category.name}</span>\n                            </span>\n                }):\n                null\n                }\n            </div>\n            \n            <TUICalendar\n                ref={cal}\n                height=\"100%\"\n                view=\"month\"\n                useCreationPopup={true}\n                useDetailPopup={true}\n                template={templates}\n                calendars={calendars}\n                schedules={schedules}\n                onClickSchedule={onClickSchedule}\n                onBeforeCreateSchedule={onBeforeCreateSchedule}\n                onBeforeDeleteSchedule={onBeforeDeleteSchedule}\n                onBeforeUpdateSchedule={onBeforeUpdateSchedule}\n            />\n        </div>\n    );\n}\n\nexport default CommonCalendar;",{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":12,"column":11,"nodeType":"241","messageId":"242","endLine":12,"endColumn":16},{"ruleId":"239","severity":1,"message":"243","line":13,"column":11,"nodeType":"241","messageId":"242","endLine":13,"endColumn":15},{"ruleId":"239","severity":1,"message":"244","line":325,"column":19,"nodeType":"241","messageId":"242","endLine":325,"endColumn":27},{"ruleId":"239","severity":1,"message":"244","line":81,"column":19,"nodeType":"241","messageId":"242","endLine":81,"endColumn":27},{"ruleId":"239","severity":1,"message":"244","line":162,"column":19,"nodeType":"241","messageId":"242","endLine":162,"endColumn":27},{"ruleId":"239","severity":1,"message":"244","line":161,"column":19,"nodeType":"241","messageId":"242","endLine":161,"endColumn":27},{"ruleId":"239","severity":1,"message":"244","line":763,"column":15,"nodeType":"241","messageId":"242","endLine":763,"endColumn":23},{"ruleId":"239","severity":1,"message":"244","line":100,"column":19,"nodeType":"241","messageId":"242","endLine":100,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":403,"column":34,"nodeType":"247","messageId":"248","endLine":403,"endColumn":36},{"ruleId":"239","severity":1,"message":"244","line":500,"column":19,"nodeType":"241","messageId":"242","endLine":500,"endColumn":27},{"ruleId":"239","severity":1,"message":"244","line":114,"column":15,"nodeType":"241","messageId":"242","endLine":114,"endColumn":23},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'today' is assigned a value but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]