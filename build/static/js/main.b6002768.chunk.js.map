{"version":3,"sources":["components/modules/menu/admin.js","components/modules/footer/footer.js","components/modules/button/admin_grey_btn.js","components/modules/modal/common.js","components/modules/button/white_button.js","components/modules/calendar/lecture_calendar.js","components/modules/calendar/common.js","components/modules/calendar/read_calendar.js","components/pages/admin/lecture.js","components/pages/admin/main.js","components/modules/button/blue_button.js","components/pages/admin/church.js","components/pages/admin/churchTemp.js","components/modules/button/admin_white_btn.js","components/pages/admin/instructor.js","components/pages/admin/users.js","components/pages/admin/feedback.js","components/pages/admin/administrator.js","components/pages/admin/phrase.js","components/modules/button/admin_blue_btn.js","components/pages/admin/contact.js","components/modules/calendar/crud_calendar.js","components/pages/admin/academyDate.js","components/pages/admin/category.js","components/pages/admin/visitDiary.js","components/pages/admin/statistics.js","components/layout/admin.js","components/modules/footer/main_footer.js","components/modules/menu/main.js","components/pages/home.js","components/layout/main.js","components/modules/menu/common.js","components/pages/lecture/subject.js","components/pages/lecture/instructor.js","components/modules/calendar/lecture_daily_calendar.js","components/pages/lecture/date.js","components/pages/lecture/application.js","components/pages/mypage/user.js","components/pages/mypage/userContacted.js","components/pages/mypage/contact.js","components/pages/mypage/lecture.js","components/pages/mypage/visitDiary.js","components/pages/mypage/profile.js","components/pages/notice.js","components/layout/common.js","routes/administrator.js","routes/instructor.js","components/pages/notFound.js","routes/user.js","routes/notLogin.js","App.js","reportWebVitals.js","index.js"],"names":["AdminMenu","props","useState","drawerOpen","setDrawerOpen","submenuOpen","setSubmenuOpen","loading","setLoading","today","Date","useEffect","history","location","pathname","responseGoogle","response","a","params","URLSearchParams","append","tokenObj","id_token","profileObj","email","expires_at","window","sessionStorage","getItem","axios","post","process","res","parseInt","data","status","setItem","name","id","alert","reload","logout","gapi","auth2","getAuthInstance","signOut","then","removeItem","failLogin","getTime","clientId","buttonText","render","renderProps","className","onClick","disabled","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","to","src","alt","icon","faUserCircle","split","width","Footer","href","React","Component","GreyButton","style","fontSize","cursor","background","borderRadius","padding","border","class","click","CommonModal","open","close","func","header","footer","children","WhiteButton","fontWeight","boxShadow","calendarColor","LectureCalendar","cal","useRef","schedules","setschedules","calendars","setcalendars","year","setyear","month","setmonth","calendarData","tempSchedule","i","length","form_id","push","calendarId","category","isAllDay","isVisible","title","start","date","end","isReadOnly","academyDates","forEach","index","tempCalendar","color","bgColor","dragBgColor","borderColor","getFullYear","getMonth","onClickSchedule","useCallback","e","schedule","current","calendarInst","getElement","onBeforeCreateSchedule","scheduleData","_date","day","getDate","addDate","lecture_date_id","setResultDates","concat","_getTimeTemplate","html","time","h","getHours","m","getMinutes","_getFormattedTime","isPrivate","recurrenceRule","attendees","join","templates","NextButton","calendarInstance","getInstance","next","y","PrevButton","prev","TodayButton","ref","height","view","useCreationPopup","useDetailPopup","template","onBeforeDeleteSchedule","filter","tempData","date_id","CommonCalendar","calendarDates","setcalendarDates","resultDates","dateData","element","setdateData","lecture_date","addSchedule","allcalendarColor","status_id","start_time","end_time","path","contact_start_date","contact_end_date","body","topic_list","region_list","inst_name","find","clickedLecture","readMainCalendar","String","Math","random","dueDateClass","raw","state","createSchedules","deleteSchedule","onBeforeUpdateSchedule","changes","updateSchedule","textAlign","marginBottom","AdminLecture","keyword","setKeyword","calendarInfo","setcalendarInfo","allLecture","setAllLecture","allInstructors","setallInstructors","editLecture","seteditLecture","selectedLecture","setSelectedLecture","categoryData","setCategoryData","addLectureInstId","setaddLectureInstId","addLectureName","setAddLectureName","addLectureStartDate","setAddLectureStartDate","addLectureEndDate","setAddLectureEndDate","addLectureSampleUrl","setAddLectureSampleUrl","addLectureIntro","setAddLectureIntro","isModalOpen","setisModalOpen","setToday","regionData","setRegionData","selectedCategoryData","setSelectedCategoryData","selectedRegionData","setSelectedRegionData","calendar","setCalendar","editcalendar","seteditcalendar","selectedTimeZoneData","setSelectedTimeZoneData","selectedDayWeekData","setSelectedDayWeekData","isShowDelete","setisShowDelete","topicDataByLecture","settopicDataByLecture","regionDataByLecture","setregionDataByLecture","lectureDateDataByLecture","setlectureDateByLecture","detailByLecture","setDetailByLecture","editLectureInfo","seteditLectureInfo","setresultDates","notUsingCalendar","setnotUsingCalendar","setacademyDates","page","setPage","submitFlag","readAllLecture","readCategory","readAllInstructors","readAcademyDates","readTopicByLectureId","readRegionByLectureId","readLectureDateByLectureId","readDetailByLectureId","start_date","end_date","day_week_array","morning","afternoon","evening","day_week","day_split","default_day_week","trim","get","token","manageID","lecture_id","user_id","encodeURI","readRegion","selectTimeZone","selectDayWeek","closeModal","createLecture","tempDayWeek","confirm","Array","from","Set","timezone","betweenDate","regex","RegExp","test","result","curDate","toISOString","setDate","currentPosts","tmp","indexOfLast","indexOfFirst","del_date","slice","onEdit","target","value","createDate","clickTimezone","editDayClick","updateArr","item","wb","Sheets","XLSX","utils","json_to_sheet","SheetNames","excelBuffer","write","bookType","type","Blob","FileSaver","saveAs","fileName","placeholder","onChange","defaultValue","map","position_name","toLocaleString","dataUnit","index2","temp","sort","b","selectRegion","checked","allDays","weekDays","getDay","clickLecture","topic","instructor_name","region","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText","reg_Date","isEvery","newArr","clickEveryRegion","check","newRegion","clickRegion","newTopic","clickTopic","undefined","betweenEditDate","replace","deleteDate","url","method","lectureId","sample_url","intro","replaceAll","day_week_string","topicFlag","regionFlag","regionInfo","topicInfo","dateInfo","AdminMain","settingInfo","setSettingInfo","instructorInfo","setInstructorInfo","lectureInfo","setLectureInfo","removeBackgroundImage","setRemoveBackgroundImage","backgroundImage","setBackgroundImage","backgroundBase64Image","setBackgroundBase64Image","section1backgroundDelay","setSection1backgroundDelay","removeBackgroundSection2","setRemoveBackgroundSection2","backgroundSection2","setBackgroundSection2","backgroundBase64Section2","setBackgroundBase64Section2","section2Content","setSection2Content","defaultInstructorImage","setDefaultInstructorImage","instructorImage","setInstructorImage","instructorBase64Image","setInstructorBase64Image","instructorFlag","setInstructorFlag","instructorId","setInstructorId","defaultLectureImage","setDefaultLectureImage","lectureFlag","setLectureFlag","lectureImage","setLectureImage","lectureBase64Image","setLectureBase64Image","setLectureId","readMainPageContent","readInstructor","key","newArr2","ChangeFiles","event","Image","setImage","Imagebase64","setImagebase64","reader","FileReader","files","readAsDataURL","onloadend","base64","toString","ChangeFiles2","setImageFlag","imageFlag","clickEditMainPageButton","FormData","headers","removeFlag","values","fileCount","x","valuesData","clickEditExplainSiteButton","clickEditExplainInstructorButton","defaultValues","image","clickEditExplainLectureButton","onError","htmlFor","display","handleChangeFile","data2","BlueButton","AdminChurch","modalOpen","setModalOpen","isInsertModalOpen","setisInsertModalOpen","clickedChurch","setclickedChurch","editChurch","seteditChurch","userId","region_id","nation","city","district","zip_code","addr1","addr2","phone","page_url","fax","size","denomination","pastor","admin_name","hgu_yn","hgu_memo","writer_name","memo","editChurchInfo","seteditChurchInfo","addChurchInfo","setaddChurchInfo","churchInfo","setchurchInfo","isPostModal","setPostModal","isPostCodeOpen","setisPostCodeOpen","excelJSONData","setExcelJSONData","errorCount","seterrorCount","excelFormat","readChurchInfo","count","isValid","onAdd","createChurch","updateChurch","deleteChurch","church_id","uploadExcelFile","JSON","stringify","closePostModal","accept","input","onload","workBook","read","sheetName","rows","sheet_to_json","changedData","variable","readAsBinaryString","jsOptions","animated","hideMapBtn","onSelected","address","sido","sigungu","zonecode","selectEditPostCode","position","readOnly","left","selectPostCode","reg_date","creater_name","confirm_date","update_date","updater_name","church","clickChurch","AdminChurchTemp","churchTempData","setChurchTempData","selectedChurchTemp","setSelectedChurchTemp","readChurchTempData","acceptTemp","new_name","new_district","new_zip_code","new_addr1","new_addr2","new_pastor","new_email","new_phone","rejectTemp","catch","error","console","log","acceptNewChurch","new_city","application_form_id","AdminInstructor","excelModalOpen","setExcelModalOpen","clickedInstructor","setClickedInstructor","setinstructorInfo","positionInfo","setpositionInfo","isEdit","setisEdit","position_id","editInfo","seteditInfo","addInfo","setaddInfo","removeProfileImage","setRemoveProfileImage","profileImage","setProfileImage","profileImageBase64","setProfileImageBase64","readPosition","updateInstructor","createInstructor","deleteInstructor","instructor_id","recoverInstructor","clickEditBtn","clickCloseBtn","openExcelModal","excelInstructor","obj","inst","clickInstructor","AdminUsers","userInfo","setuserInfo","readUser","statusChange","box_value","document","getElementById","user","AdminFeedback","applicationInfo","setapplicationInfo","feedbackFileData","setFeedbackFileData","readApplicationForms","selectButton","visit_reg_date","feedback_id","deleteButton","lecture_name","church_name","lecture_star","instructor_star","visit_log","spaceBetween","effect","centeredSlides","loop","loopFillGroupWithBlank","pagination","navigation","admin_phone","attendee_target","attendee_number","AdminAdministrator","adminInfo","setAdminInfo","addEmail","setAddEmail","addName","setAddName","addPhone","setAddPhone","addEmailYN","setAddEmailYN","readAdministrator","parmas","editMailYN","editValue","removeAdministrator","createAdministrator","emailYN","AdminPhrase","lecturePageTitle","setLecturePageTitle","applicationPageTitle","setApplicationPageTitle","applicationBelowDate","setApplicationBelowDate","applicationListPage","setApplicationListPage","mypageProfile","setMypageProfile","mypageLecture","setMypageLecture","mypageContact","setMypageContact","mypageVisitDiary","setMypageVisitDiary","agreePI1","setAgreePI1","agreePI2","setAgreePI2","agreePI3","setAgreePI3","readSettingInfo","updatePhrase1","updatePhrase2","AdminContact","contactDate","setContactDate","contactStartDate","setContactStartDate","contactEndDate","setContactEndDate","contactMemo","setContactMemo","statusSelect","setStatusSelect","clickedContact","setClickedContact","isOpen","setisOpen","isAgree","setisAgree","admin_email","attendeeTarget","addApplicationInfo","setaddApplicationInfo","setmorning","setafternoon","dinner","setdinner","lectureDates","setlectureDates","newChurchAdd","setnewChurchAdd","churchData","setchurchData","selectChurch","setselectChurch","lectureData","setlectureData","setselectedLecture","readLecture","churchArray","label","readLectureDate","cancelContact","contactStart","finishContact","selectDate","contact_memo","clickAddBtn","addApplication","clickTarget","tempTarget","items","onSelect","selectedItem","gridColumn","application","isVisiting","category_id","createAcademy","academy_date","readAcademy","updateAcademy","changeCategoryId","changeTitle","hasOwnProperty","changeDate","deleteAcademy","AdminAcademyDate","academyInfo","setacademyInfo","categoryInfo","setcategoryInfo","selectCategory","setselectCategory","setaddName","isAdd","setisAdd","previousAcademyInfo","setpreviousAcademyInfo","array","previousYearAcademy","ids","addCategory","category_name","idx","findIndex","splice","clickCategory","AdminCategory","editCategory","seteditCategory","isDisable","setisDisable","addDisable","setaddDisable","disable","priority","setaddCategory","clickEditFinish","createCategory","confirmCategory","rejectCategory","clickCancelBtn","clickAddDisableBtn","clickDisableBtn","margin","AdminVisitDiary","addButton","setAddButton","visitingLogContent","setVisitingLogContent","visible","setVisible","visitingLogFile","insertVisitingLog","getElementsByClassName","file","hideModal","onUpload","dataSources","AdminStatistics","lecturePeriod","setlecturePeriod","statInstPosition","setstatInstPosition","statLecture","setstatLecture","positionPeriod","setpositionPeriod","statAllData","setstatAllData","statInstructor","setStatInstructor","statRegion","setStatRegion","statDenomination","setStatDenomination","denominationPeriod","setDenominationPeriod","regionPeriod","setRegionPeriod","instructorPeriod","setInstructorPeriod","readStatLecture","readStatInstByPosition","readStatAllData","readStatDenomination","readStatInstructor","readStatRegion","period","all_lecture","finish_lecture","not_finish_lecture","inst_count","church_count","position_count","AdminLayout","this","exact","component","MainFooter","MainMenu","menu","SwiperCore","use","EffectFade","Autoplay","Pagination","Navigation","Home","prop","currentPage","setCurrentPage","setsettingInfo","section1Image","setsection1Image","section5Image","setsection5Image","readImage","images","reponse","images2","pageOnChange","number","customPageNumber","autoplay","lecture","MainLayout","CommonMenu","LectureSubject","selectedFeedback","setSelectedFeedback","categoryLoading","setCategoryLoading","lectureLoading","setLectureLoading","setLectureData","lectureDetail","setLectureDetail","setLectureDetailLoading","setclickedLecture","postsPerPage","feedbackPage","feedbackPostsPerPage","feedbackInfo","setfeedbackInfo","setavgLectureStar","setavgInstructorStar","feedbackFile","setFeedbackFile","feedbackFileLoading","setFeedbackFileLoading","readFeedback","subject","isSubjectNull","readFeedbackFile","feedbackImage","j","readFeedbackByLecture","round","readLectureDetail","fill","handlePageChange","lectureClick","instructor_image","instructor_position","instructor_intro","instructor_memo","slot","feedbackCurrentPosts","feedback","fb","marginTop","content","LectureInstructor","selectedInst","setSelectedInst","instructorData","setInstructorData","instructorLoading","setInstructorLoading","instructorDetail","setinstructorDetail","readInstructorInfo","readFeedbackFileByLecture","LectureDailyCalendar","clickedDate","setclickedDate","guide","clearGuideElement","click_date","LectureDate","setlectureInfo","setlectureLoading","calendarInfoByLecture","setcalendarInfoByLecture","readCalendarByLecture","LectureApplication","setApplication","setzip_code","setaddr1","setaddr2","isModal","setModal","week","dayOfWeek","submitApplication","instructor_email","MypageUser","feedbackContent","setFeedbackContent","lectureRating","setLectureRating","instructorRating","setInstructorRating","onRemove","MypageUserContacted","Contact","selectedContact","setSelectedContact","clickComplete","setClickComplete","completeContact","backBtnClick","user_email","MypageLecture","editCalendar","setEditCalendar","VisitDiary","visitingLogFileData","setVisitingLogFileData","MypageProfile","profileInfo","setprofileInfo","editProfileInfo","seteditProfileInfo","readProfile","responseValue","clickFinishBtn","marginLeft","Notice","selectedNotice","setSelectedNotice","selectedContent","setselectedContent","editNotice","seteditNotice","setkeyword","NoticeInfo","setNoticeInfo","mode","setmode","editorRef","createRef","readViewerRef","editEditorRef","addTitle","setaddTitle","administratorInfo","setAdministratorInfo","readNotice","readAdministratorInfo","clickedSetFunction","previewStyle","initialEditType","initialValue","useCommandShortcut","editContent","toastMark","lineTexts","dataset","editFinishBtn","notice_id","addContent","administrator_id","important","notice","CommonLayout","MypageContact","MypageVisitlog","Administrator","Instructor","NotFound","User","NotLogin","interceptors","request","config","Promise","reject","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.b6002768.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { GoogleLogin,GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport '../../../assets/css/header.css';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCircle } from '@fortawesome/free-regular-svg-icons'\n\nfunction AdminMenu(props) {\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [submenuOpen, setSubmenuOpen] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const today = new Date();\n\n    useEffect(()=>{\n        setDrawerOpen(false);\n        setSubmenuOpen(null);\n    },[props.history.location.pathname])\n    function switchDrawer() {\n        setDrawerOpen(!drawerOpen);\n    }\n\n    const responseGoogle = async (response) => {\n        setLoading(true);\n        const params = new URLSearchParams()\n        params.append('token', response.tokenObj.id_token);\n        params.append('email', response.profileObj.email);\n        params.append('expire', response.tokenObj.expires_at);\n        params.append('manageID', window.sessionStorage.getItem('id'));\n        \n        const res = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'user/login', params\n        );\n        if(parseInt(res.data.status) !== -1){\n        window.sessionStorage.setItem('email', response.profileObj.email);\n        window.sessionStorage.setItem('name', response.profileObj.name);\n        window.sessionStorage.setItem('token', response.tokenObj.id_token);\n        window.sessionStorage.setItem('expires_at', response.tokenObj.expires_at);\n        window.sessionStorage.setItem('status', res.data.status);\n        window.sessionStorage.setItem('id', res.data.id);\n\n        //window.location.href ='';\n        }else{\n        alert(\"로그인 할 수 없습니다. 관리자에게 문의해주세요.\");\n        }\n        setLoading(false);\n        window.location.reload();\n    }\n\n    const logout = async () => {\n        setLoading(true);\n        const params = new URLSearchParams()\n        params.append('email', window.sessionStorage.getItem('email'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'user/logout', params\n        );\n\n        const auth2 = window.gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function() {\n        window.sessionStorage.removeItem('email');\n        window.sessionStorage.removeItem('name');\n        window.sessionStorage.removeItem('token');\n        window.sessionStorage.removeItem('expires_at');\n\n        setLoading(false);\n        window.location.reload();\n        });\n    }\n\n    const failLogin = async () => {\n        alert(\"로그인에 실패했습니다.\");\n    }\n    return (\n        <div>\n            <div id=\"admin-main-nav\">\n            {loading ? null:\n                    window.sessionStorage.getItem('email') && window.sessionStorage.getItem('expires_at') >= today.getTime()?    \n                    <GoogleLogout\n                    clientId={process.env.REACT_APP_GOOGLE_LOGIN}\n                    buttonText=\"Logout\"\n                    render={renderProps => (<button className=\"admin-main-btn2 mr40\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그아웃</button>)}\n                    onLogoutSuccess={logout}\n                    >\n                    </GoogleLogout>: <GoogleLogin\n                    clientId= {process.env.REACT_APP_GOOGLE_LOGIN}\n                    render={renderProps => (<button className=\"admin-main-btn2 mr40\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그인</button>\n                    )}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={failLogin}\n                    cookiePolicy={'single_host_origin'}\n                    />\n                }\n            <Link to={process.env.REACT_APP_DEFAULT_URL} className=\"admin-main-btn1\">강의 보러 가기</Link>\n            </div>\n            <div id=\"admin-left-nav\">\n                <img className=\"logo\" src={process.env.REACT_APP_DEFAULT_URL+\"image/black_logo.png\"} alt=\"logo\"/>\n                <ul>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/main\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/main\"? \"active\":\"\"}>메인 페이지 관리</li></Link>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/administrator\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/administrator\"? \"active\":\"\"}>관리자 관리</li></Link>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/instructor\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/instructor\"? \"active\":\"\"}>강사 관리</li></Link>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/users\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/users\"? \"active\":\"\"}>사용자 관리</li></Link>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/lecture\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/lecture\"? \"active\":\"\"}>강의 관리</li></Link>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/church\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/church\"? \"active\":\"\"}>교회 관리</li></Link>\n                    <ul className=\"admin-sub-ul\">\n                        <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/church_temp\"} className=\"admin-nav\"><li className={props.history.location.pathname === \"/admin/church_temp\"? \"active\":\"\"}>변경 사항</li></Link>\n                    </ul>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/academy_date\"} className=\"admin-nav\"><li className={props.history.location.pathname === \"admin/academy_date\"? \"active\":\"\"}>학사일정 관리</li></Link>\n                    <li>기타</li>\n                    <ul className=\"admin-sub-ul\">\n                        <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/contact\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/contact\"? \"active\":\"\"}>컨택 내역 관리</li></Link>\n                        <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/phrase\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/phrase\"? \"active\":\"\"}>문구 관리</li></Link>\n                        <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/feedback\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/feedback\"? \"active\":\"\"}>피드백 관리</li></Link>\n                        <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/visit_diary\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/visit_diary\"? \"active\":\"\"}>방문일지 관리</li></Link>\n                        <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/category\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/category\"? \"active\":\"\"}>강의 주제 관리</li></Link>\n                    </ul>\n                    <Link to={process.env.REACT_APP_DEFAULT_URL+\"admin/statistics\"} className=\"admin-nav\"><li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/statistics\"? \"active\":\"\"}>통계</li></Link>\n                </ul>\n                <div className=\"admin-profile\">\n                    <FontAwesomeIcon className=\"user-icon\" icon={faUserCircle} /><span className=\"mt7\">{window.sessionStorage.getItem('email') !== null? window.sessionStorage.getItem('email').split(\"@\")[0]: null} 회원님</span>\n                </div>\n            </div>\n            <div id=\"admin-navbar-mobile\">\n            <div onClick = {() => {switchDrawer()}}><img alt=\"로고\" className=\"drawer-toggle-common\" src={process.env.REACT_APP_DEFAULT_URL+\"image/mobile_drawer.png\"}/></div>\n            <img alt=\"로고\" width=\"110px\" src={process.env.REACT_APP_DEFAULT_URL+\"image/logo_black.png\"}/>\n            <div></div>\n        </div>\n        {\n            drawerOpen !== false?\n            <div className=\"drawer-wrapper\">\n                <div className=\"drawer-content\">\n                    <div className=\"drawer-left\">\n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL}>홈</Link></li>\n                            <li className={submenuOpen === \"lecture\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"lecture\")}}>강의 보기</li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/main\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/main\"}>메인 페이지 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/administrator\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/administrator\"}>관리자 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/instructor\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/instructor\"}>강사 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/users\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/users\"}>사용자 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/lecture\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/lecture\"}>강의 관리</Link></li>\n                            <li className={submenuOpen === \"lecture\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"church\")}}>교회 관리</li>\n                            <li className={submenuOpen === \"etc\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"etc\")}}>기타</li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/academy_date\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/academy_date\"}>학사일정 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/statistics\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/statistics\"}>통계</Link></li>\n                        </ul>\n                        <ul>\n                            {\n                                window.sessionStorage.getItem('email') !== null?\n                                <li className=\"login-name\">{window.sessionStorage.getItem('email') !== null? window.sessionStorage.getItem('email').split(\"@\")[0]: null} 님</li>:\n                                <li className=\"login-name\">로그인이 필요합니다.</li>\n                            }\n                            {loading ? null:\n                                window.sessionStorage.getItem('email') && window.sessionStorage.getItem('expires_at') >= today.getTime()?    \n                                <GoogleLogout\n                                clientId={process.env.REACT_APP_GOOGLE_LOGIN}\n                                buttonText=\"Logout\"\n                                render={renderProps => (<li className=\"nav-title pointer\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그아웃</li>)}\n                                onLogoutSuccess={logout}\n                                >\n                                </GoogleLogout>: <GoogleLogin\n                                clientId= {process.env.REACT_APP_GOOGLE_LOGIN}\n                                render={renderProps => (<li className=\"nav-title pointer\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그인</li>\n                                )}\n                                buttonText=\"Login\"\n                                onSuccess={responseGoogle}\n                                onFailure={failLogin}\n                                cookiePolicy={'single_host_origin'}\n                                />\n                            }\n                        </ul>\n                    </div>\n                    <div className=\"drawer-right\">\n                        {submenuOpen === \"lecture\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>날짜별</Link></li>\n                        </ul>:\n                        submenuOpen === \"church\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/church\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/church\"}>교회 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/church_temp\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/church_temp\"}>변경 사항 관리</Link></li>\n                        </ul>:\n                        submenuOpen === \"etc\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/contact\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/contact\"}>컨택 내역 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/phrase\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/phrase\"}>문구 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/category\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/category\"}>강의 주제 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/feedback\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/feedback\"}>피드백 관리</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/visit_diary\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/visit_diary\"}>방문일지 관리</Link></li>\n                        </ul>:\n                        <ul></ul>\n                        }\n                    </div>\n                </div>\n            </div>:\n            <div></div>\n        }\n        </div>\n    );\n}\n\nexport default AdminMenu;\n","import React from \"react\";\nimport '../../../assets/css/footer.css';\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n        <div id=\"footer\">\n            <div id=\"footer-content\">\n                <div className=\"footer-blank\"></div>\n                <img className=\"mr30\" src=\"/image/grey_logo.png\" alt=\"footer_logo\" />\n                <div className=\"footer-content1\">\n                    <p>경북 포항시 북구 흥해읍 한동로 558 한동대학교 37554</p>\n                    <p><a href=\"https://www.handong.edu/sinfo/persnal/\">개인정보처리방침</a></p>\n                    <p>copyright&copy; 2021 Handong Global Univ, all rights reserved.</p>\n                </div>\n                <div className=\"footer-content2\">\n                    <p>한동대학교 입학사정관팀</p>\n                    <p>054) 260-1083~6</p>\n                </div>\n            </div>\n            \n        </div>\n    );\n  }\n}\n\nexport default Footer;","import React from \"react\";\n\nfunction GreyButton(props) {\n    return (\n        <button \n            style={{fontSize:'14px',cursor:\"pointer\",background:\"#e2e2e2\", borderRadius:'7px', padding:'7px 18px', border:'1px solid black'}}\n            className={props.class} onClick={props.click}>\n                {props.name}\n        </button>\n    )\n}\nexport default GreyButton;","import React from 'react';\nimport \"../../../assets/css/modal.css\";\n\n// function CommonModal() {\n//     const { open, close, header } = props;\n\n//     return (\n//         // 모달이 열릴때 openModal 클래스가 생성된다.\n//         <div className={ open ? 'openModal modal' : 'modal' }>\n//             { open ? (  \n//                 <section>\n//                     <header>\n//                         {header}\n//                         <button className=\"close\" onClick={close}> &times; </button>\n//                     </header>\n//                     <main>\n//                         {props.children}\n//                     </main>\n//                     <footer>\n//                         <button className=\"close\" onClick={close}> close </button>\n//                     </footer>\n//                 </section>\n//             ) : null }\n//         </div>\n//     )\n// }\nconst CommonModal = ( props ) => {\n    // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n    const { open, close, func, header, footer } = props;\n\n    return (\n        // 모달이 열릴때 openModal 클래스가 생성된다.\n        <div className={ open ? 'openModal modal' : 'modal' }>\n            { open ? (  \n                <section>\n                    <header>\n                        {header}\n                        <button className=\"close\" onClick={close}> &times; </button>\n                    </header>\n                    <main>\n                        {props.children}\n                    </main>\n                    <footer>\n                        <button className=\"close\" onClick={func}> {footer} </button>\n                    </footer>\n                </section>\n            ) : null }\n        </div>\n    )\n}\n\nexport default CommonModal;","import React from \"react\";\n\n// width:'115px', height: '40px'\nfunction WhiteButton(props) {\n    return (\n        <button \n            style={{cursor:\"pointer\", padding:\"5px 12px\",background:\"white\", fontSize:'16px', fontWeight:'500', borderRadius:'6px', boxShadow:'2px 2px 0 rgb(0 0 0 / 20%)', border:'1px solid rgb(0 0 0 / 20%)'}}\n            className={props.class} onClick={props.click}>\n                {props.name}\n        </button>\n    )\n}\nexport default WhiteButton;\n\n","import React, { useCallback, useRef, useEffect, useState } from \"react\";\nimport TUICalendar from \"@toast-ui/react-calendar\";\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport '../../../assets/css/calendar.css';\nimport \"tui-time-picker/dist/tui-time-picker.css\";\nimport WhiteButton from '../button/white_button';\n\nconst calendarColor = [\"#000000\",\"#e49d5a\", \"#4285f4\", \"#e4ce5a\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n\nfunction LectureCalendar(props) {\n    const cal = useRef(null);\n    const [schedules, setschedules] = useState([])\n    const [calendars, setcalendars] = useState([])\n    const [year, setyear] = useState(\"\")\n    const [month, setmonth] = useState(\"\")\n\n    useEffect(() => {\n        if(props.calendarData !== null) {\n            const data = props.calendarData;\n            // var index = 0;\n            var tempSchedule = [];\n            \n            for(var i=0 ; i<data.length ; i++) {\n                if(data[i].form_id === 0) {\n                    tempSchedule.push({\n                        calendarId: 2,\n                        category: \"time\",\n                        isAllDay: true,\n                        isVisible: true,\n                        title: \"강의\"+(i+1),\n                        id: i+1,\n                        start: data[i].date,\n                        end: data[i].date\n                    })\n                } else {\n                    tempSchedule.push({\n                        calendarId: 1,\n                        category: \"time\",\n                        isAllDay: true,\n                        isReadOnly: true,\n                        isVisible: true,\n                        title: \"강의\"+(i+1),\n                        id: i+1,\n                        start: data[i].date,\n                        end: data[i].date\n                    })\n                }\n            }\n\n            if(props.academyDates !== null) {\n                props.academyDates.forEach((data, index) => {\n                    tempSchedule.push({\n                        calendarId: 3,\n                        isAllDay: true,\n                        isVisible: true,\n                        category: \"time\",\n                        isReadOnly: true,\n                        title: data.name,\n                        id: 0,\n                        start: data.date,\n                        end: data.date\n                    })\n                });\n            }\n            \n\n            var tempCalendar  = [];\n            tempCalendar.push({\n                id: 1,\n                name: \"수정 불가\",\n                color: calendarColor[3],\n                bgColor: calendarColor[3]+\"40\",\n                dragBgColor: calendarColor[3]+\"40\",\n                borderColor: calendarColor[3]\n            });\n            tempCalendar.push({\n                id: 2,\n                name: \"수정 가능\",\n                color: calendarColor[2],\n                bgColor: calendarColor[2]+\"40\",\n                dragBgColor: calendarColor[2]+\"40\",\n                borderColor: calendarColor[2]\n            });\n            tempCalendar.push({\n                id: 3,\n                name: \"학사 일정\",\n                color: calendarColor[0],\n                bgColor: calendarColor[0]+\"40\",\n                dragBgColor: calendarColor[0]+\"40\",\n                borderColor: calendarColor[0]\n            });\n            setcalendars(tempCalendar);\n            setschedules(tempSchedule);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.calendarData])\n\n\n\n    useEffect(() => {\n        let today = new Date();   \n        let year = today.getFullYear(); // 년도\n        let month = today.getMonth() + 1;  // 월\n        // let date = today.getDate();  // 날짜\n        // let day = today.getDay();  // 요일\n\n        if(month < 10)\n            month = \"0\"+month;\n        setyear(year)\n        setmonth(month)\n    }, [])\n\n    const onClickSchedule = useCallback((e) => {\n        const { calendarId, id } = e.schedule;\n        cal.current.calendarInst.getElement(id, calendarId);\n\n    }, []);\n\n\n    const onBeforeCreateSchedule = useCallback((scheduleData) => {\n\n        var date = scheduleData.start._date;\n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        date = year+\"-\"+month+\"-\"+day;\n        // var index = 0;\n        // if(schedules !== null && schedules.length > 0) {\n        //     // index = schedules[schedules.length-1].id;\n        // }\n        // const addSchedule = {\n        //     calendarId: 2,\n        //     category: \"time\",\n        //     isAllDay: true,\n        //     isVisible: true,\n        //     title: \"강의\"+(index+1),\n        //     id: index+1,\n        //     start: date,\n        //     end: date\n        // }\n        const addDate = {\n            date:date,\n            form_id:0,\n            lecture_date_id: 0\n        }\n        // setschedules(schedules.concat(addSchedule));\n        props.setResultDates(props.calendarData.concat(addDate));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [schedules]);\n\n    const deleteDate = (res) => {\n        // eslint-disable-next-line no-unused-vars\n        const { id, calendarId } = res.schedule;\n\n        setschedules(schedules.filter((e) => (e.id !== id)))\n        var tempData = [];\n        props.calendarData.forEach((data, i) => {\n            if(i+1 !== id)\n                tempData.push({\n                    lecture_date_id: data.date_id,\n                    date: data.date,\n                    form_id: data.form_id\n                })        \n        });\n        props.setResultDates(tempData);\n    }\n\n    function _getFormattedTime(time) {\n        const date = new Date(time);\n        const h = date.getHours();\n        const m = date.getMinutes();\n\n        return `${h}:${m}`;\n    }\n\n    function _getTimeTemplate(schedule, isAllDay) {\n        var html = [];\n\n        if (!isAllDay) {\n            html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n        }\n        if (schedule.isPrivate) {\n            html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n            html.push(\" Private\");\n        } else {\n            if (schedule.isReadOnly) {\n                html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n            } else if (schedule.recurrenceRule) {\n                html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n            } else if (schedule.attendees.length) {\n                html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n            } else if (schedule.location) {\n                html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n            }\n            html.push(\" \" + schedule.title);\n        }\n\n        return html.join(\"\");\n    }\n\n    const templates = {\n        time: function (schedule) {\n            return _getTimeTemplate(schedule, false);\n        }\n    };\n\n    const NextButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.next();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n        }\n    }, []);\n\n    const PrevButton = useCallback((e) => {\n\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.prev();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            // props.readMainCalendar(date)\n        }\n\n        \n    }, []);\n\n    const TodayButton = useCallback((e) => {\n        if (cal !== null) {\n        const calendarInstance = cal.current.getInstance();\n        calendarInstance.today();\n        var m = calendarInstance.getDate().getMonth() + 1;\n        var y = calendarInstance.getDate().getFullYear();\n        if(m < 10)\n            m = \"0\"+m;\n        // var date = y+\"-\"+m;\n\n        setmonth(m);\n        setyear(y)\n        }\n    }, []);\n\n    return (\n        <div>\n        <h2 className=\"calendar-title\">{year}년 {month}월의 강의일정</h2>\n            <div className=\"mb15\">\n                <WhiteButton class=\"mr15\" name=\"오늘날짜\" click={TodayButton}/>\n                <WhiteButton class=\"mr15\" name=\"<\" click={PrevButton}/>\n                <WhiteButton name=\">\" click={NextButton}/>\n            </div>\n            <TUICalendar\n                ref={cal}\n                height=\"100%\"\n                view=\"month\"\n                useCreationPopup={false}\n                useDetailPopup={true}\n                template={templates}\n                calendars={calendars}\n                schedules={schedules}\n                onClickSchedule={onClickSchedule}\n                onBeforeCreateSchedule={onBeforeCreateSchedule}\n                onBeforeDeleteSchedule={deleteDate}\n                // onBeforeUpdateSchedule={onBeforeUpdateSchedule}\n            />\n        </div>\n    );\n}\n\nexport default LectureCalendar;","import React, { useCallback, useRef, useEffect, useState } from \"react\";\n\nimport TUICalendar from \"@toast-ui/react-calendar\";\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport '../../../assets/css/calendar.css';\nimport \"tui-time-picker/dist/tui-time-picker.css\";\nimport WhiteButton from '../../modules/button/white_button';\n\nconst calendarColor = [\"#000000\",\"#e49d5a\", \"#e4ce5a\", \"#4285f4\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n\nfunction CommonCalendar(props) {\n    const cal = useRef(null);\n    const [schedules, setschedules] = useState([])\n    const [calendars, setcalendars] = useState([])\n    const [year, setyear] = useState(null)\n    const [month, setmonth] = useState(null)\n    const [calendarDates, setcalendarDates] = useState(null);\n\n\n    useEffect(() => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.today();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            //var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y);\n        }\n    }, [])\n\n    useEffect(() => {\n        if(props.resultDates !== null) {\n            setcalendarDates(props.resultDates);\n        }\n    }, [props.resultDates])\n\n\n    useEffect(() => {\n        var dateData = [];\n        schedules.forEach(element => {\n            if(element.calendarId === 1)\n                dateData.push(element.start);\n        });\n        props.setdateData(dateData);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [schedules])\n\n    useEffect(() => {\n        if(calendarDates !== null) {\n            var tempSchedule = [];\n            var tempCalendar = [];\n            calendarDates.forEach((date, index) => {\n                tempSchedule.push({\n                    calendarId: 1,\n                    category:\"time\",\n                    isAllDay: true,\n                    isVisible: true,\n                    title: '강의'+(index+1),\n                    id: index+1,\n                    start: date,\n                    end: date\n                })\n            });\n\n            if(props.academyDates !== null) {\n                // var academy_id = tempSchedule[tempSchedule.length-1].id;\n                props.academyDates.forEach((data, index) => {\n                    tempSchedule.push({\n                        calendarId: 2,\n                        isAllDay: true,\n                        isVisible: true,\n                        category: \"time\",\n                        isReadOnly: true,\n                        title: data.name,\n                        id: 0,\n                        start: data.date,\n                        end: data.date\n                    })\n                    // academy_id++;\n                });\n            }\n            setschedules(tempSchedule);\n\n            tempCalendar.push({\n                id: 1,\n                name: \"강의 시간\",\n                color: calendarColor[3],\n                bgColor: calendarColor[3]+\"40\",\n                dragBgColor: calendarColor[3]+\"40\",\n                borderColor: calendarColor[3]\n            });\n            tempCalendar.push({\n                id: 2,\n                name: \"학사 일정\",\n                color: calendarColor[0],\n                bgColor: calendarColor[0]+\"40\",\n                dragBgColor: calendarColor[0]+\"40\",\n                borderColor: calendarColor[0]\n            })\n            setcalendars(tempCalendar);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [calendarDates])\n\n    const addLectureDate = (data) => {\n        var index = 0;\n        schedules.forEach(element => {\n            if(element.id > index)\n                index = element.id;\n        });\n        var date = data.start;\n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        var lecture_date = year+\"-\"+month+\"-\"+day\n        \n        const addSchedule = {\n            calendarId: 1,\n            category:\"time\",\n            isAllDay: true,\n            isVisible: true,\n            title: '강의'+(index+1),\n            id: index+1,\n            start: lecture_date,\n            end: lecture_date\n        };\n        setschedules(schedules.concat(addSchedule));\n    }\n\n    const deleteLecture = (res) => {\n        setschedules(schedules.filter((e) => (e.id !== res.schedule.id)))\n    }\n\n    function _getFormattedTime(time) {\n        const date = new Date(time);\n        const h = date.getHours();\n        const m = date.getMinutes();\n\n        return `${h}:${m}`;\n    }\n\n    function _getTimeTemplate(schedule, isAllDay) {\n        var html = [];\n\n        if (!isAllDay) {\n            html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n        }\n        if (schedule.isPrivate) {\n            html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n            html.push(\" Private\");\n        } else {\n            if (schedule.isReadOnly) {\n                html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n            } else if (schedule.recurrenceRule) {\n                html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n            } else if (schedule.attendees.length) {\n                html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n            } else if (schedule.location) {\n                html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n            }\n            html.push(\" \" + schedule.title);\n        }\n\n        return html.join(\"\");\n    }\n\n    const templates = {\n        time: function (schedule) {\n            return _getTimeTemplate(schedule, false);\n        }\n    };\n\n\n    const NextButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.next();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n\n            setmonth(m);\n            setyear(y);\n\n        }\n    }, []);\n\n    const PrevButton = useCallback((e) => {\n        \n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.prev();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n        }\n    }, []);\n\n    const TodayButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.today();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n        }\n    }, []);\n\n    return (\n        <div>\n        \n        <h2 className=\"calendar-title\">{year}년 {month}월</h2>\n       \n            <div className=\"mb15\">\n                <WhiteButton class=\"mr15\" name=\"오늘날짜\" click={TodayButton}/>\n                <WhiteButton class=\"mr15\" name=\"<\" click={PrevButton}/>\n                <WhiteButton name=\">\" click={NextButton}/>\n            </div>\n            \n            <TUICalendar\n                ref={cal}\n                height=\"100%\"\n                view=\"month\"\n                useCreationPopup={false}\n                useDetailPopup={true}\n                template={templates}\n                calendars={calendars}\n                schedules={schedules}\n                onBeforeCreateSchedule={addLectureDate}\n                onBeforeDeleteSchedule={deleteLecture}\n                // onBeforeUpdateSchedule={updateLecture}\n            />\n        </div>\n    );\n}\n\nexport default CommonCalendar;","import React, { useCallback, useRef, useEffect, useState } from \"react\";\n\nimport TUICalendar from \"@toast-ui/react-calendar\";\n// import { ISchedule, ICalendarInfo } from \"tui-calendar\";\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport '../../../assets/css/calendar.css';\nimport \"tui-time-picker/dist/tui-time-picker.css\";\nimport WhiteButton from '../../modules/button/white_button';\n\nconst allcalendarColor = [\"#ef6f87\",\"#e49d5a\", \"#e4ce5a\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\nconst calendarColor = [\"#fbbc05\", \"#cccccc\", \"#4285f4\", \"#7ddc8b\" ,\"#000000\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n// const calendarInstructor = [\"#ef6f87\",\"#e49d5a\", \"#2196f3\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n\n\nfunction CommonCalendar(props) {\n    const cal = useRef(null);\n    const [schedules, setschedules] = useState([])\n    const [calendars, setcalendars] = useState([])\n    const [year, setyear] = useState(null)\n    const [month, setmonth] = useState(null)\n\n    useEffect(() => {\n        if(props.calendarData !== null) {\n            const data = props.calendarData;\n            \n            var index = 0;\n            var tempSchedule = [];\n            var tempCalendar = [];\n            \n            if(props.path !== null && (props.path ===\"/\" || props.path ===\"/lecture/date\")) {\n\n                for(var i=0 ; i<data.length ; i++) {\n                    tempSchedule.push({\n                        calendarId: data[i].id,\n                        category: \"time\",\n                        isAllDay: true,\n                        isVisible: true,\n                        title: data[i].name,\n                        id: data[i].id,\n                        body: \"[강사명] \"+data[i].inst_name+\"- [주제]\" +data[i].topic_list,\n                        start: data[i].date,\n                        end: data[i].date,\n                        location: data[i].region_list\n                    })\n\n                    // eslint-disable-next-line no-loop-func\n                    if(!tempCalendar.find(element => element.id === data[i].id)) {\n                        tempCalendar.push({\n                            id: data[i].id,\n                            name: data[i].name,\n                            color: allcalendarColor[index],\n                            bgColor: allcalendarColor[index]+\"40\",\n                            dragBgColor: allcalendarColor[index]+\"40\",\n                            borderColor: allcalendarColor[index]\n                        })\n                        index++;\n                    }\n                    \n                    if(index === calendarColor.length)\n                        index=0;\n                }\n            }\n            else if(props.path === \"/mypage/contact\" || props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") {\n                // var tempSchedule = [];\n                // var tempCalendar = [];\n                // eslint-disable-next-line no-redeclare\n                for(var i=0 ; i<data.length ; i++) {\n                    var status_id = 1;\n                    var start_time = data[i].date;\n                    var end_time = data[i].date;\n                    var isAllDay = true;\n                    \n                    // 신청자가 있을 때\n                    if(data[i].form_id) {\n                        // status\n                        if(data[i].status === 0)\n                            status_id = 1\n                        else if(data[i].status === 1)\n                            status_id = 2\n                        else if(data[i].status === 2) {\n                            status_id = 3\n                            start_time = data[i].date+\" \"+data[i].contact_start_date\n                            end_time = data[i].date+\" \"+data[i].contact_end_date\n                            isAllDay = false\n                        }\n                        \n                        // 취소된 컨택내역은 안보여줌\n                        if(data[i].status !== -1)\n                            tempSchedule.push({\n                                calendarId: status_id,\n                                category: \"time\",\n                                isAllDay: isAllDay,\n                                isVisible: true,\n                                title: data[i].name,\n                                id: status_id,\n                                body: \"[주제]\" +data[i].topic_list,\n                                start: start_time,\n                                end: end_time,\n                                location: data[i].region_list\n                            })\n                    } else {\n                        tempSchedule.push({\n                            calendarId: 4,\n                            category: \"time\",\n                            isAllDay: true,\n                            isVisible: true,\n                            title: data[i].name,\n                            id: 3,\n                            body: \"[주제]\" +data[i].topic_list,\n                            start: data[i].date,\n                            end: data[i].date,\n                            location: data[i].region_list\n                        })\n                    }\n                }\n\n                if(props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") {\n                    if(props.academyDates !== null) {\n                        props.academyDates.forEach((data, index) => {\n                            tempSchedule.push({\n                                calendarId: 6,\n                                isAllDay: true,\n                                isVisible: true,\n                                category: \"time\",\n                                isReadOnly: true,\n                                title: data.name,\n                                id: 0,\n                                start: data.date,\n                                end: data.date\n                            })\n                        });\n                    }        \n                }\n                \n                if(props.path === \"/lecture/subject\" || props.path === \"/lecture/date\" || props.path === \"/lecture/instructor\") {\n                    tempCalendar.push({\n                        id: 1,\n                        name: \"강사 확인전\",\n                        color: calendarColor[0],\n                        bgColor: calendarColor[0]+\"40\",\n                        dragBgColor: calendarColor[0]+\"40\",\n                        borderColor: calendarColor[0]\n                    })\n                } else {\n                    tempCalendar.push({\n                        id: 1,\n                        name: \"신규(미확인)\",\n                        color: calendarColor[0],\n                        bgColor: calendarColor[0]+\"40\",\n                        dragBgColor: calendarColor[0]+\"40\",\n                        borderColor: calendarColor[0]\n                    })\n                }\n                tempCalendar.push({\n                    id: 2,\n                    name: \"진행중\",\n                    color: calendarColor[1],\n                    bgColor: calendarColor[1]+\"40\",\n                    dragBgColor: calendarColor[1]+\"40\",\n                    borderColor: calendarColor[1]\n                })\n                tempCalendar.push({\n                    id: 3,\n                    name: \"일정확정됨\",\n                    color: calendarColor[2],\n                    bgColor: calendarColor[2]+\"40\",\n                    dragBgColor: calendarColor[2]+\"40\",\n                    borderColor: calendarColor[2]\n                })\n                tempCalendar.push({\n                    id: 4,\n                    name: \"신청없음\",\n                    color: calendarColor[3],\n                    bgColor: calendarColor[3]+\"40\",\n                    dragBgColor: calendarColor[3]+\"40\",\n                    borderColor: calendarColor[3]\n                })\n                tempCalendar.push({\n                    id: 5,\n                    name: \"컨택취소\",\n                    color: calendarColor[4],\n                    bgColor: calendarColor[4]+\"40\",\n                    dragBgColor: calendarColor[4]+\"40\",\n                    borderColor: calendarColor[4]\n                })\n                tempCalendar.push({\n                    id: 6,\n                    name: \"학사일정\",\n                    color: calendarColor[4],\n                    bgColor: calendarColor[4]+\"40\",\n                    dragBgColor: calendarColor[4]+\"40\",\n                    borderColor: calendarColor[4]\n                })\n            }\n\n            setschedules(tempSchedule)\n            setcalendars(tempCalendar)\n\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.calendarData])\n\n\n    useEffect(() => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.today();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y);\n\n            if(props.clickedLecture !== null && (props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\"))\n                props.readMainCalendar(date, props.clickedLecture.id);\n            else\n                props.readMainCalendar(date)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        const calendarInstance = cal.current.getInstance();\n        calendarInstance.today();\n        var m = calendarInstance.getDate().getMonth() + 1;\n        var y = calendarInstance.getDate().getFullYear();\n        if(m < 10)\n            m = \"0\"+m;\n        // var date = y+\"-\"+m;\n\n        setmonth(m);\n        setyear(y);\n    }, [props.clickedLecture])\n\n\n    const onClickSchedule = useCallback((e) => {\n        const { calendarId, id } = e.schedule;\n        cal.current.calendarInst.getElement(id, calendarId);\n\n    }, []);\n\n    const onBeforeCreateSchedule = useCallback((scheduleData) => {\n        \n        const schedule = {\n            id: String(Math.random()),\n            title: scheduleData.title,\n            isAllDay: scheduleData.isAllDay,\n            start: scheduleData.start,\n            end: scheduleData.end,\n            category: scheduleData.isAllDay ? \"allday\" : \"time\",\n            dueDateClass: \"\",\n            location: scheduleData.location,\n            raw: {\n                class: scheduleData.raw[\"class\"]\n            },\n            state: scheduleData.state\n        };\n        cal.current.calendarInst.createSchedules([schedule]);\n    }, []);\n\n    const onBeforeDeleteSchedule = useCallback((res) => {\n\n        const { id, calendarId } = res.schedule;\n\n        cal.current.calendarInst.deleteSchedule(id, calendarId);\n    }, []);\n\n    const onBeforeUpdateSchedule = useCallback((e) => {\n        \n        const { schedule, changes } = e;\n\n        cal.current.calendarInst.updateSchedule(\n            schedule.id,\n            schedule.calendarId,\n            changes\n        );\n    }, []);\n\n    function _getFormattedTime(time) {\n        const date = new Date(time);\n        const h = date.getHours();\n        const m = date.getMinutes();\n\n        return `${h}:${m}`;\n    }\n\n    function _getTimeTemplate(schedule, isAllDay) {\n        var html = [];\n\n        if (!isAllDay) {\n            html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n        }\n        if (schedule.isPrivate) {\n            html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n            html.push(\" Private\");\n        } else {\n            if (schedule.isReadOnly) {\n                html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n            } else if (schedule.recurrenceRule) {\n                html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n            } else if (schedule.attendees.length) {\n                html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n            } else if (schedule.location) {\n                html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n            }\n            html.push(\" \" + schedule.title);\n        }\n\n        return html.join(\"\");\n    }\n\n    const templates = {\n        time: function (schedule) {\n            return _getTimeTemplate(schedule, false);\n        }\n    };\n\n\n    const NextButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.next();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y);\n\n            if((props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") && props.clickedLecture !== null)\n                props.readMainCalendar(date, props.clickedLecture.id);\n            else\n                props.readMainCalendar(date)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clickedLecture]);\n\n    const PrevButton = useCallback((e) => {\n        \n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.prev();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            if((props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") && props.clickedLecture !== null) {\n                props.readMainCalendar(date, props.clickedLecture.id);\n            }\n            else\n                props.readMainCalendar(date)\n        }\n\n        \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clickedLecture]);\n\n    const TodayButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.today();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            if((props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") && props.clickedLecture !== null)\n                props.readMainCalendar(date, props.clickedLecture.id);\n            else\n                props.readMainCalendar(date)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clickedLecture]);\n\n    return (\n        <div>\n        \n        <h2 className=\"calendar-title\">{year}년 {month}월의 강의</h2>\n       \n            <div className=\"mb15\">\n                <WhiteButton class=\"mr15\" name=\"오늘날짜\" click={TodayButton}/>\n                <WhiteButton class=\"mr15\" name=\"<\" click={PrevButton}/>\n                <WhiteButton name=\">\" click={NextButton}/>\n            </div>\n            {props.path !== null && (props.path === \"/mypage/contact\" || props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") ?\n            <div style={{textAlign:\"right\", marginBottom:\"15px\"}}>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[0]}}></span>\n                    <span>{props.path === \"/lecture/subject\" || props.path === \"/lecture/date\" || props.path === \"/lecture/instructor\" ? \"강사 확인전\" : \"신규(미확인)\"}</span>\n                </span>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[1]}}></span>\n                    <span>진행중</span>\n                </span>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[2]}}></span>\n                    <span>일정확정됨</span>\n                </span>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[3]}}></span>\n                    <span>신청없음</span>\n                </span>\n                {props.path === \"/mypage/lecture\" || props.path === \"/admin/lecture\" ?\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[4]}}></span>\n                    <span>학사일정</span>\n                </span>:\n                null\n                }\n            </div> :\n            null\n            }\n            \n            <TUICalendar\n                ref={cal}\n                height=\"100%\"\n                view=\"month\"\n                useCreationPopup={true}\n                useDetailPopup={true}\n                template={templates}\n                calendars={calendars}\n                schedules={schedules}\n                isReadOnly={true}\n                onClickSchedule={onClickSchedule}\n                onBeforeCreateSchedule={onBeforeCreateSchedule}\n                onBeforeDeleteSchedule={onBeforeDeleteSchedule}\n                onBeforeUpdateSchedule={onBeforeUpdateSchedule}\n            />\n        </div>\n    );\n}\n\nexport default CommonCalendar;","\nimport React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_lecture.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport CommonModal from '../../modules/modal/common';\n\nimport LectureCalendar from '../../modules/calendar/lecture_calendar';\nimport CommonCalendar from '../../modules/calendar/common';\nimport ReadCalendar from '../../modules/calendar/read_calendar';\nimport WhiteButton from '../../modules/button/white_button';\n\nfunction AdminLecture(props) {\n    const [keyword, setKeyword] = useState(null);\n    const [calendarInfo, setcalendarInfo] = useState(null)\n\n    const [allLecture, setAllLecture] = useState(null);\n    const [allInstructors, setallInstructors] = useState(null);\n    const [editLecture, seteditLecture] = useState(false);\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [categoryData, setCategoryData] = useState([]);\n\n    const [addLectureInstId, setaddLectureInstId] = useState(\"\");\n    const [addLectureName, setAddLectureName] = useState(\"\");\n    const [addLectureStartDate, setAddLectureStartDate] = useState(\"\");\n    const [addLectureEndDate, setAddLectureEndDate] = useState(\"\");\n    const [addLectureSampleUrl, setAddLectureSampleUrl] = useState(\"\");\n    const [addLectureIntro, setAddLectureIntro] = useState(\"\");\n\n    const [isModalOpen, setisModalOpen] = useState(false);\n    const [today, setToday] = useState(new Date());\n    const [regionData, setRegionData] = useState(null);\n    const [selectedCategoryData, setSelectedCategoryData] = useState([]);\n    const [selectedRegionData, setSelectedRegionData] = useState([]);\n    const [calendar, setCalendar] = useState(false);\n    const [editcalendar, seteditcalendar] = useState(false)\n    const [selectedTimeZoneData, setSelectedTimeZoneData] = useState([]);\n    const [selectedDayWeekData, setSelectedDayWeekData] = useState([]);\n    const [isShowDelete, setisShowDelete] = useState(false);\n    \n    const [topicDataByLecture, settopicDataByLecture] = useState(null);\n    const [regionDataByLecture, setregionDataByLecture] = useState(null);\n    const [lectureDateDataByLecture, setlectureDateByLecture] = useState(null)\n    const [detailByLecture, setDetailByLecture] = useState(null);\n    const [editLectureInfo, seteditLectureInfo] = useState(null);\n    const [resultDates, setresultDates] = useState(null);\n    const [dateData, setdateData] = useState([]);\n    const [notUsingCalendar, setnotUsingCalendar] = useState(false);\n    const [academyDates, setacademyDates] = useState(null);\n\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    \n    let submitFlag = false;\n\n    function submitCheck(){\n        if(submitFlag){\n            return submitFlag;\n        }else{\n            submitFlag = true;\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        readAllLecture();\n        readCategory();\n        readAllInstructors();\n        readAcademyDates();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    useEffect(() => {\n        setPage(1);\n    }, [isShowDelete])\n\n    useEffect(() => {\n        if(selectedLecture !== null) {\n            seteditLectureInfo(selectedLecture);\n            if(selectedLecture.date === \"\") {\n                seteditcalendar(false);\n            } else {\n                seteditcalendar(true);\n            }\n            readTopicByLectureId();\n            readRegionByLectureId();\n            readLectureDateByLectureId();\n            readDetailByLectureId();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLecture]);\n\n    useEffect(() => {\n        if(notUsingCalendar) {\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: null,\n                end_date: null,\n                day_week_array:[0,0,0,0,0,0,0],\n                morning:0,\n                afternoon:0,\n                evening:0\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [notUsingCalendar])\n\n    useEffect(() => {\n\n        if(detailByLecture !== null && lectureDateDataByLecture!== null && lectureDateDataByLecture.length !== 0 && detailByLecture.day_week !== null) {\n\n            setnotUsingCalendar(false);\n            var day_split = detailByLecture.day_week.split(\",\");\n            var default_day_week = [0,0,0,0,0,0,0];\n            day_split.forEach(day => {\n                if(day.trim()  === \"월\")    default_day_week[1] = 1;\n                if(day.trim()  === \"화\")    default_day_week[2] = 1;\n                if(day.trim()  === \"수\")    default_day_week[3] = 1;\n                if(day.trim()  === \"목\")    default_day_week[4] = 1;\n                if(day.trim()  === \"금\")    default_day_week[5] = 1;\n                if(day.trim()  === \"토\")    default_day_week[6] = 1;\n                if(day.trim()  === \"일\")    default_day_week[0] = 1;\n            });\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: detailByLecture.start_date,\n                end_date: detailByLecture.end_date,\n                morning: detailByLecture.morning,\n                afternoon: detailByLecture.afternoon,\n                evening: detailByLecture.evening,\n                day_week_array: default_day_week\n            })\n        } else if(detailByLecture !== null){\n            setnotUsingCalendar(true);\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: detailByLecture.start_date,\n                end_date: detailByLecture.end_date,\n                morning: detailByLecture.morning,\n                afternoon: detailByLecture.afternoon,\n                evening: detailByLecture.evening,\n                day_week_array: [0,0,0,0,0,0,0]\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [detailByLecture])\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readAcademyDates = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setacademyDates(response.data);\n    }\n\n    const readLectureDateByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate', \n            {\n                params: {\n                    lecture_id: selectedLecture.id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setlectureDateByLecture(response.data);\n    }\n\n    const readTopicByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/topic/'+selectedLecture.id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        settopicDataByLecture(response.data);\n    }\n\n    const readRegionByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/region/'+selectedLecture.id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setregionDataByLecture(response.data);\n    }\n\n    const readDetailByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/lectureDetail/'+selectedLecture.id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setDetailByLecture(response.data);\n    }\n\n    const readAllInstructors = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setaddLectureInstId(response.data[0].user_id);\n        setallInstructors(response.data);\n    }\n\n    const readAllLecture = async() => {\n        setPage(1);\n        if(keyword !== null && keyword !== \"\"){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/admin',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setAllLecture(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/admin', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setAllLecture(response.data);\n        }\n        setKeyword(null);\n        setSelectedLecture(null);\n    }\n\n    function clickLecture(data) {\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = today.getMonth() + 1;\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        if(selectedLecture === null || selectedLecture.id !== data.id) {\n            setSelectedLecture(data);\n            readMainCalendar(date, data.id);\n            seteditLecture(false);\n            seteditLectureInfo(data);\n        } else {\n            setSelectedLecture(null);\n        }\n    }\n\n    const readMainCalendar = async(date, id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/lecture', {\n                params: {\n                    date: date,\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n        setresultDates(response.data);\n    }\n\n\n    const editBtnClick = () => {\n        seteditLecture(true);\n        seteditLectureInfo(selectedLecture);\n        readTopicByLectureId();\n        readRegionByLectureId();\n        readLectureDateByLectureId();\n        readDetailByLectureId();\n    }\n\n    const cancelBtnClick = () => {\n        seteditLecture(false);\n        if(selectedLecture.date === \"\") {\n            seteditcalendar(false);\n        } else {\n            seteditcalendar(true);\n        }\n    }\n    const deleteBtnClick = () => {\n        if(window.confirm(\"강의를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture/delete',\n                    method: 'put',\n                    data: {\n                        id: selectedLecture.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readAllLecture();\n                setSelectedLecture(null);\n                alert(\"강의가 삭제되었습니다.\")\n            })\n        }\n    }\n\n    const updateFinishBtn = () => {\n        \n        var day_week_string = [];\n        editLectureInfo.day_week_array.forEach((item, index) => {\n            if(index === 0 && item === 1)   day_week_string.push(\"일\");\n            if(index === 1 && item === 1)   day_week_string.push(\"월\");\n            if(index === 2 && item === 1)   day_week_string.push(\"화\");\n            if(index === 3 && item === 1)   day_week_string.push(\"수\");\n            if(index === 4 && item === 1)   day_week_string.push(\"목\");\n            if(index === 5 && item === 1)   day_week_string.push(\"금\");\n            if(index === 6 && item === 1)   day_week_string.push(\"토\");                \n        });\n        day_week_string = day_week_string.join(',');\n\n        if(editLectureInfo.name === null || editLectureInfo.name === \"\") {\n            alert(\"강의 제목을 입력해주세요.\");\n            return;\n        }\n        var topicFlag = false;\n        var regionFlag = false;\n        topicDataByLecture.forEach((topic) => {\n            if(topic.status === 1) \n                topicFlag = true;\n        });\n        regionDataByLecture.forEach((region) => {\n            if(region.status === 1) \n                regionFlag = true;\n        })\n        if(topicFlag === false) {\n            alert(\"강의 주제를 선택해주세요.\");\n            return;\n        }\n        if(regionFlag === false) {\n            alert(\"강의 가능 지역을 선택해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar){\n            if(editLectureInfo.morning === 0 && editLectureInfo.afternoon === 0 && editLectureInfo.evening === 0) {\n                alert(\"강의 가능 시간대를 선택해주세요.\");\n                return;\n            }\n        }\n        if(editLectureInfo.intro === null || editLectureInfo.intro === \"\") {\n            alert(\"강의 소개를 입력해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && !editcalendar) {\n            alert(\"캘린더에 일정을 반영해주세요!\");\n            return;\n        }\n\n        if(window.confirm(\"강의를 수정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture',\n                    method: 'put',\n                    data: {\n                        ...editLectureInfo,\n                        regionInfo: regionDataByLecture,\n                        topicInfo: topicDataByLecture,\n                        dateInfo: resultDates,\n                        day_week: day_week_string,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readAllLecture();\n                setSelectedLecture(null);\n                seteditLecture(false);\n                seteditcalendar(false);\n                alert(\"강의가 수정되었습니다.\")\n            })\n        }\n    }\n\n\n    const openModal = () => {\n        setToday(new Date());\n        readCategory();\n        readRegion();\n        setisModalOpen(true)\n    }\n    const readCategory = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/category', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setCategoryData(response.data);\n    }\n\n    const selectCategory = (index) => {\n        const result = selectedCategoryData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedCategoryData([...selectedCategoryData,index]);\n        }else{\n            setSelectedCategoryData(selectedCategoryData.filter(id => id !== index));\n        }\n    }\n\n    const readRegion = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/region', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setRegionData(response.data);\n    }\n\n    const selectRegion = (index) => {\n        const result = selectedRegionData.filter(id => id === index || id === 0);\n        var temp;\n        if(result.length === 0){\n            if(index === 0){\n                temp = [...selectedRegionData,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];\n                temp.sort(function(a, b) {\n                    return a - b;\n                })\n                setSelectedRegionData(temp);\n            }else{\n                temp = [...selectedRegionData,index];\n                temp.sort(function(a, b) {\n                    return a - b;\n                })\n                setSelectedRegionData(temp);\n            }\n        }else{\n            if(index === 0){\n                setSelectedRegionData([]);\n            }else{\n                setSelectedRegionData(selectedRegionData.filter(id => id !== index  && id !== 0));\n            }\n        }\n    }\n\n    const selectTimeZone = (index) => {\n        const result = selectedTimeZoneData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedTimeZoneData([...selectedTimeZoneData,index]);\n        }else{\n            setSelectedTimeZoneData(selectedTimeZoneData.filter(id => id !== index));\n        }\n    }\n\n    const selectDayWeek = (index) => {\n        const result = selectedDayWeekData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedDayWeekData([...selectedDayWeekData,index]);\n        }else{\n            setSelectedDayWeekData(selectedDayWeekData.filter(id => id !== index));\n        }\n    }\n\n    const closeModal = () => {\n        setisModalOpen(false);\n        setAddLectureName(null);\n        setAddLectureIntro(null);\n        setAddLectureSampleUrl(\"\");\n        setAddLectureStartDate(null);\n        setAddLectureEndDate(null);\n        setSelectedDayWeekData([]);\n        setSelectedTimeZoneData([]);\n        setSelectedCategoryData([]);\n        setSelectedRegionData([]);\n        setaddLectureInstId(allInstructors[0].user_id);\n        setresultDates(null);\n        setCalendar(false);\n        setnotUsingCalendar(false);\n        submitFlag = false;\n    }\n\n    const createLecture = async() => {\n        var tempDayWeek = [];\n        if(selectedDayWeekData.find(element => element === \"월\"))    tempDayWeek.push(\"월\");\n        if(selectedDayWeekData.find(element => element === \"화\"))    tempDayWeek.push(\"화\");\n        if(selectedDayWeekData.find(element => element === \"수\"))    tempDayWeek.push(\"수\");\n        if(selectedDayWeekData.find(element => element === \"목\"))    tempDayWeek.push(\"목\");\n        if(selectedDayWeekData.find(element => element === \"금\"))    tempDayWeek.push(\"금\");\n        if(selectedDayWeekData.find(element => element === \"토\"))    tempDayWeek.push(\"토\");\n        if(selectedDayWeekData.find(element => element === \"일\"))    tempDayWeek.push(\"일\");\n        \n        if(addLectureName === null || addLectureName === \"\") {\n            alert(\"강의 제목을 입력해주세요.\");\n            return;\n        }\n        if(selectedCategoryData === [] || selectedCategoryData.length === 0) {\n            alert(\"강의 주제를 선택해주세요.\");\n            return;\n        }\n        if(selectedRegionData === [] || selectedRegionData.length === 0) {\n            alert(\"강의 가능 지역을 선택해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar){\n            if(selectedTimeZoneData === [] || selectedTimeZoneData.length === 0) {\n                alert(\"강의 가능 시간대를 선택해주세요.\");\n                return;\n            }\n        }\n        if(addLectureIntro === null || addLectureIntro === \"\") {\n            alert(\"강의 소개를 입력해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && !calendar) {\n            alert(\"캘린더에 일정을 반영해주세요!\");\n            return;\n        }\n        if(submitCheck()){\n            alert(\"데이터 처리 중입니다.\");\n            return;\n        }\n        if(window.confirm(\"강의를 추가하시겠습니까?\")) {\n            var params = new URLSearchParams();\n            params.append('name', addLectureName);\n            params.append('intro', addLectureIntro);\n            params.append('sample_url', addLectureSampleUrl);\n            if(!notUsingCalendar){\n                params.append('start_date', addLectureStartDate);\n                params.append('end_date', addLectureEndDate);\n                params.append('day_week', Array.from(new Set(tempDayWeek)).join(', '));\n            }\n            params.append('morning', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"morning\").length);\n            params.append('afternoon', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"afternoon\").length);\n            params.append('evening', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"evening\").length);\n            params.append('topic', Array.from(new Set(selectedCategoryData)).join(','));\n            params.append('token', window.sessionStorage.getItem('token'));\n            params.append('manageID', window.sessionStorage.getItem('id'));\n            if(selectedRegionData.filter(id => id === 0).length >= 1){\n                params.append('region', \"0\");\n            }else{\n                params.append('region', Array.from(new Set(selectedRegionData)).join(','));\n            }\n            params.append('dateData', dateData);\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/instructor/'+addLectureInstId, //[loginID]로그인 후 변경\n            params,\n            );\n\n            setAddLectureName(null);\n            setAddLectureIntro(null);\n            setAddLectureSampleUrl(\"\");\n            setAddLectureStartDate(null);\n            setAddLectureEndDate(null);\n            setSelectedDayWeekData([]);\n            setSelectedTimeZoneData([]);\n            setSelectedCategoryData([]);\n            setSelectedRegionData([]);\n            setaddLectureInstId(allInstructors[0].user_id);\n            setresultDates(null);\n            setCalendar(false);\n            setnotUsingCalendar(false);\n\n            readAllLecture();\n            alert(\"강의를 추가했습니다~:)\");\n            closeModal();\n        }\n    }\n\n\n    const openCalendar = () => {\n        if(addLectureStartDate===null || addLectureEndDate===null || selectedDayWeekData.length===0) {\n            alert(\"시작날짜, 끝날짜, 요일을 모두 선택해주세요!\");\n            return;\n        }\n        var allDays = betweenDate();\n        var weekDays = [0,0,0,0,0,0,0]; // 일, 월, 화, 수, 목, 금, 토\n        var resultDates = [];\n\n        selectedDayWeekData.forEach(day => {\n            if(day === \"일\")    weekDays[0] = 1;\n            else if(day === \"월\")    weekDays[1] = 1;\n            else if(day === \"화\")    weekDays[2] = 1;\n            else if(day === \"수\")    weekDays[3] = 1;\n            else if(day === \"목\")    weekDays[4] = 1;\n            else if(day === \"금\")    weekDays[5] = 1;\n            else if(day === \"토\")    weekDays[6] = 1;\n        });\n        allDays.forEach(date => {\n            if(weekDays[new Date(date).getDay()] === 1)\n                resultDates.push(date);\n        });\n        setresultDates(resultDates);\n        \n        setCalendar(true);\n    }\n\n    const reCalendar = () => {\n        if(addLectureStartDate===null || addLectureEndDate===null || selectedDayWeekData.length===0) {\n            alert(\"시작날짜, 끝날짜, 요일을 선택해주세요!\");\n            return;\n        }\n        if(window.confirm(\"위에 일정을 다시 캘린더에 반영하면 캘린더에서 편집했던 일정이 모두 사라집니다. 반영하시겠습니까?\")) {\n            var allDays = betweenDate();\n            var weekDays = [0,0,0,0,0,0,0]; // 일, 월, 화, 수, 목, 금, 토\n            var resultDates = [];\n\n            selectedDayWeekData.forEach(day => {\n                if(day === \"일\")    weekDays[0] = 1;\n                else if(day === \"월\")    weekDays[1] = 1;\n                else if(day === \"화\")    weekDays[2] = 1;\n                else if(day === \"수\")    weekDays[3] = 1;\n                else if(day === \"목\")    weekDays[4] = 1;\n                else if(day === \"금\")    weekDays[5] = 1;\n                else if(day === \"토\")    weekDays[6] = 1;\n            });\n            allDays.forEach(date => {\n                if(weekDays[new Date(date).getDay()] === 1)\n                    resultDates.push(date);\n            });\n            setresultDates(resultDates);\n        }\n    }\n\n    const reEditCalendar = () => {  \n        if(editLectureInfo.start_date === null || editLectureInfo.start_date === \"\" || editLectureInfo.end_date === null || editLectureInfo.end_date === \"\" || editLectureInfo.day_week_array.find(element => element === 1) === undefined) {\n            alert(\"시작날짜, 끝날짜, 요일을 모두 선택해주세요!\");\n            return;\n        }\n        if(window.confirm(\"위에 일정을 다시 캘린더에 반영하면 캘린더에서 편집했던 일정이 모두 사라집니다. 반영할까요?\")) {\n            var allDays = betweenEditDate();\n            var tempData = [];\n            if(resultDates !== null)\n                tempData = resultDates.filter((e)=>(e.form_id !== 0));\n                \n            allDays.forEach(date => {\n                if(editLectureInfo.day_week_array[new Date(date).getDay()] === 1)\n                    tempData.push({\n                        lecture_date_id:0,\n                        date: date,\n                        form_id: 0\n                    });\n            });\n            setresultDates(tempData);\n            seteditcalendar(true);\n        }\n    }\n\n    function betweenDate() {\n        var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\n        if(!(regex.test(addLectureStartDate) && regex.test(addLectureEndDate))) return \"Not Date Format\";\n        var result = [];\n        var curDate = new Date(addLectureStartDate);\n        while(curDate <= new Date(addLectureEndDate)) {\n            result.push(curDate.toISOString().split(\"T\")[0]);\n            curDate.setDate(curDate.getDate() + 1);\n        }\n        return result;\n    }\n\n    function betweenEditDate() {\n        var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\n        if(!(regex.test(editLectureInfo.start_date) && regex.test(editLectureInfo.end_date))) return \"Not Date Format\";\n        var result = [];\n        var curDate = new Date(editLectureInfo.start_date);\n        while(curDate <= new Date(editLectureInfo.end_date)) {\n            result.push(curDate.toISOString().split(\"T\")[0]);\n            curDate.setDate(curDate.getDate() + 1);\n        }\n        return result;\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        if(isShowDelete){ // 삭제된 거 보여줄때   \n            currentPosts = allLecture.filter(data => data.del_date !== null).slice(indexOfFirst, indexOfLast);\n        } else { // 전체 강의일 때\n            currentPosts = allLecture.filter(data => data.del_date === null).slice(indexOfFirst, indexOfLast);\n        }\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"lecture\";\n        const ws = XLSX.utils.json_to_sheet(allLecture);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const deleteToExist = () => {\n        if(window.confirm(\"강의를 복구하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture/recover',\n                    method: 'put',\n                    data: {\n                        id: selectedLecture.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readAllLecture();\n                setSelectedLecture(null);\n                alert(\"강의가 복구되었습니다.\")\n            })\n        }\n    }\n\n    const onEdit = (e) => {\n        const {value, name} = e.target;\n        seteditLectureInfo({\n            ...editLectureInfo,\n            [name]:value\n        })\n    }\n\n    const createDate = async (lecture_id, date) => {\n        var params = new URLSearchParams();\n        params.append('lecture_id', lecture_id);\n        params.append('date', date);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n        \n        const response = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'lectureDate',\n        params,\n        )\n    }\n\n    const deleteDate = (id) => {\n        axios(\n            {\n                url: process.env.REACT_APP_RESTAPI_HOST+'lectureDate',\n                method: 'delete',\n                data: {\n                    id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        )\n    }\n\n    const clickTopic = (data) => {\n        let newTopic = topicDataByLecture.map((topic, i) => {\n            if(topic.id === data.id) {\n                if(topic.status === 0)\n                    return {...topic, status:1};\n                else\n                    return {...topic, status:0};\n            } else {\n                return topic;\n            }\n        })\n        settopicDataByLecture(newTopic);\n    }\n\n\n    const clickRegion = (data) => {\n        var check = 0;\n        let newRegion = regionDataByLecture.map((region, i) => {\n            if(region.id === data.id) {\n                if(region.status === 0)\n                    return {...region, status:1};\n                else {\n                    check = 1;\n                    return {...region, status:0};\n                }\n            } else {\n                return region;\n            }\n        })\n        if(check === 1) {\n            newRegion[0].status = 0;\n        }\n        setregionDataByLecture(newRegion);\n    }\n\n    const clickTimezone = (time) => {\n        var status=0;\n        if(time===\"morning\") {\n            if(editLectureInfo.morning === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                morning: status\n            })\n        }\n        else if(time===\"afternoon\") {\n            if(editLectureInfo.afternoon === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                afternoon: status\n            })\n        }\n        if(time===\"evening\") {\n            if(editLectureInfo.evening === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                evening: status\n            })\n        }\n    }\n\n    const editDayClick = (index) => {\n        let updateArr = editLectureInfo.day_week_array;\n        updateArr.forEach((item, i) => {\n            if(i === index) {\n                if(item === 0)\n                    updateArr[i] = 1;\n                else\n                    updateArr[i] = 0;\n            }\n        });\n        seteditLectureInfo({\n            ...editLectureInfo,\n            day_week_array: updateArr\n        });\n    }\n\n    const clickEveryRegion = () => {\n        var isEvery = regionDataByLecture[0].status;\n\n        let newArr = regionDataByLecture.map((item, i) => { \n            if (isEvery) {  // 전국 체크 해제\n                return { ...item, status: 0 }; \n            } else { \n                return { ...item, status: 1 }; \n            } \n        }); \n        \n        setregionDataByLecture(newArr);\n\n    }\n\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">강의 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 relative\">\n\n                    <p className=\"table-name mb40\">\n                        {isShowDelete ? \"삭제된 강의 목록\" : \"강의 목록\"}\n                        <GreyButton class=\"right\" name=\"강의 추가하기\" click={openModal}/>\n                        <GreyButton class=\"right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    </p>\n\n                    <div className=\"mb35\">\n                        <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"강사명, 강의명, 강의 소개, 지역, 주제로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                        <GreyButton name=\"검색\" class=\"mr15\" click={readAllLecture}/>\n                        {!isShowDelete ?\n                        <GreyButton name=\"삭제된 강의 보기\" click={() => {setisShowDelete(true)}}/>:\n                        <GreyButton name=\"전체 강의 보기\" click={() => {setisShowDelete(false)}}/>}\n                    </div>\n\n                    <CommonModal open={isModalOpen} close={closeModal} func={createLecture} header=\"강의 추가하기\" footer=\"추가하기\">\n                        <div className=\"lecture-info-wrapper\">\n                            <p className=\"admin-lecture-date\">\n                                <span>\n                                    {allInstructors !== null && allInstructors.length !== 0 ?\n                                    <select className=\"mr15 p4\" defaultValue={addLectureInstId} onChange = {(e)=>setaddLectureInstId(e.target.value)}>\n                                        {allInstructors.map((data) => \n                                            (<option key={data.id} value={data.user_id}>{data.inst_name} {data.position_name}</option>)\n                                        )}\n                                        {/* <option>hello</option> */}\n                                    </select>:\n                                    <span>강사가 없습니다.</span>\n                                    }\n                                    {/* {allInstructors !== null ?\n                                    <select>\n                                    allInstructors.map((data, index) => (\n                                        <option value={data.id}>{data.name} 강사</option>\n                                    ))\n                                    </select>\n                                    :\n                                    <span>강사가 없습니다.</span>\n                                    } */}\n                                    작성일 {today.toLocaleString()}\n                                </span>\n                                {/* <span className=\"lecture-update\">수정일 2021_07_14_일</span> */}\n                            </p>\n                            <div className=\"p4030\">\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">강의 제목</span>\n                                    <input className=\"lecture-input\" onChange={(e) => { setAddLectureName(e.target.value); }}/>\n                                </div>\n                                <hr className=\"lecture-hr\"/>\n                                <div className=\"category-grid mb20\">\n                                    <span className=\"lecture-info-title\">가능 지역</span>\n                                    <div className=\"category-wrapper\">\n                                        {regionData !== null ?\n                                        regionData.map((dataUnit, index2) => (\n                                            <div key={index2} className={selectedRegionData.filter(id => id === dataUnit.id || id === 0).length !== 0? \"category-btn category-active\": \"category-btn \"} onClick = {() => {selectRegion(dataUnit.id)}}>{dataUnit.name}</div>\n                                        )):null}\n                                    </div>\n                                </div>\n                                <div className=\"category-grid\">\n                                    <span className =\"lecture-info-title\">주제 카테고리</span>\n                                    <div className=\"category-wrapper\">\n                                        {categoryData !== null ?\n                                        categoryData.map((dataUnit, index2) => (\n                                            <div key={index2} className={selectedCategoryData.filter(id => id === dataUnit.id).length !== 0? \"category-btn category-active\":\"category-btn \"} onClick = {() => {selectCategory(dataUnit.id)}}>{dataUnit.name}</div>\n                                        )):null}\n                                    </div>\n                                </div>\n                                <hr className=\"lecture-hr\"/>\n                                {notUsingCalendar ?\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" onChange={(e) => setnotUsingCalendar(!notUsingCalendar)} checked/>\n                                        </div>\n                                    </span>\n                                </div>\n                                :\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <input className=\"lecture-input\" type=\"date\" onChange={(e) => { setAddLectureStartDate(e.target.value); }}/> ~ <input className=\"lecture-input\" type=\"date\"  onChange={(e) => { setAddLectureEndDate(e.target.value); }}/>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" onChange={(e) => setnotUsingCalendar(!notUsingCalendar)}/>\n                                        </div>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 시간대</span>\n                                    <span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"morning\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"morning\")}}>오전</span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"afternoon\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"afternoon\")}}>오후</span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"evening\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"evening\")}}>저녁</span>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 요일</span>\n                                    <span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"월\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"월\")}}>월</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"화\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"화\")}}>화</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"수\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"수\")}}>수</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"목\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"목\")}}>목</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"금\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"금\")}}>금</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"토\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"토\")}}>토</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"일\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"일\")}}>일</span>\n                                    </span>\n                                    <span></span>\n                                    <WhiteButton name={calendar === true? \"다시 반영하기\":\"캘린더에서 확인하기\"} click={calendar === true? reCalendar:openCalendar}/>\n                                </div>}\n                                \n                                {calendar === true?\n                                <CommonCalendar academyDates={academyDates} resultDates={resultDates} setdateData={setdateData}/>\n                                :\n                                null\n                                }\n                                <hr className=\"lecture-hr\"/>\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">강의 URL 주소</span>\n                                    <input className=\"lecture-input mr15\" onChange={(e) => { setAddLectureSampleUrl(e.target.value); }}/>\n                                    <span className=\"lecture-info-title\">강의 내용 설명</span>\n                                    <textarea className=\"lecture-input mr15 h600\"  onChange={(e) => { setAddLectureIntro(e.target.value); }}></textarea>\n                                </div>\n                                {/* <div className=\"button-wrapper\">\n                                    <GreyButton class=\"mr15\" name=\"수정 완료\"/>\n                                    <GreyButton class=\"\" name=\"강의 삭제\"/>\n                                </div> */}\n                            </div>\n                        </div>\n                    </CommonModal>\n\n                    <div className=\"mt50 table-row-lec\">\n                        <span className=\"th admin-subject\">주제</span>\n                        <span className=\"th\">강의명</span>\n                        <span className=\"th\">강사명</span>\n                        <span className=\"th admin-date\">기간</span>\n                        <span className=\"th admin-loc\">강의 지역</span>\n                    </div>\n                    { allLecture !== null && currentPosts(allLecture).length !== 0 ?\n                            currentPosts(allLecture).map((data, index) =>\n                                <div key={index}  className = {selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-lec\" : \"table-row-lec\"} onClick = {() => {clickLecture(data)}}>\n                                    <span className=\"td admin-subject\">{data.topic}</span>\n                                    <span className=\"td\">{data.name}</span>\n                                    <span className=\"td\">{data.instructor_name}</span>\n                                    <span className=\"td admin-date\">{data.date === \"\" || data.date.length === 0 ? \"일정 미지정\":data.date}</span>\n                                    <span className=\"td admin-loc\">{data.region}</span>\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">강의가 없습니다.</div>\n                        }\n                </div>\n                <Pagination \n                    activePage={page} \n                    itemsCountPerPage={postsPerPage} \n                    totalItemsCount={allLecture === null ? \n                        0 :\n                        isShowDelete ? \n                        allLecture.filter(data => data.del_date !== null).length:\n                        allLecture.filter(data => data.del_date === null).length} \n                    pageRangeDisplayed={5} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} \n                />\n\n                {selectedLecture !== null ?\n                    editLecture ===true && editLectureInfo !== null ?\n                    <div className=\"lecture-info-wrapper\">\n                        <p className=\"lecture-date\">\n                            <span>작성일 {editLectureInfo.reg_Date}</span>\n                            <span className=\"lecture-update\">수정일 {editLectureInfo.toLocaleString()}</span>\n                        </p>\n                        <div className=\"p4030\">\n                            <div className=\"lecture-grid-layout2 mb15\">\n                                <span className=\"lecture-info-title\">강의 제목</span>\n                                <input className=\"lecture-input\" defaultValue={editLectureInfo.name} name=\"name\" onChange={onEdit}/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"lecture-info-title\">강사명</span>\n                                <span>{editLectureInfo.instructor_name} 강사</span>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            <div className=\"lecture-grid-layout mb15\">\n                                <span className=\"lecture-info-title\">가능 지역</span>\n                                <div className=\"category-wrapper\">\n                                    {regionDataByLecture !== null ?\n                                    regionDataByLecture.map((data, index) => (\n                                        <span \n                                            key={index} \n                                            className={data.status === 1 ? \"category-btn category-active\" : \"category-btn\"} \n                                            onClick={() => {data.id === 0 ? clickEveryRegion() : clickRegion(data)}}>\n                                            {data.name}\n                                        </span>\n                                    ))\n                                    :\n                                    <div>선택 가능한 지역이 없습니다.</div>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"category-grid\">\n                                <span className=\"lecture-info-title\">주제 카테고리</span>\n                                <div className=\"category-wrapper\">\n                                    {topicDataByLecture !== null ?\n                                    topicDataByLecture.map((data, index) => (\n                                        <span key={index} className={data.status === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTopic(data)}>{data.name}</span>\n                                    ))\n                                    :\n                                    <div>선택 가능한 주제가 없습니다.</div>\n                                    }\n                                </div>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            {notUsingCalendar ?\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" value={notUsingCalendar} onChange={(e) => {setresultDates(null); setnotUsingCalendar(!notUsingCalendar)}} checked/>\n                                        </div>\n                                    </span>\n                                </div>\n                                :\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <input className=\"lecture-input\" name=\"start_date\" defaultValue={editLectureInfo.start_date} onChange={onEdit} type=\"date\"/> ~ <input className=\"lecture-input\" name=\"end_date\" onChange={onEdit} defaultValue={editLectureInfo.end_date} type=\"date\"/>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" value={notUsingCalendar} onChange={(e) => {setnotUsingCalendar(!notUsingCalendar)}}/>\n                                        </div>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 시간대</span>\n                                    <span>\n                                        <span className={editLectureInfo.morning ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"morning\")}>아침</span>\n                                        <span className={editLectureInfo.afternoon ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"afternoon\")}>점심</span>\n                                        <span className={editLectureInfo.evening ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"evening\")}>저녁</span>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 요일</span>\n                                    <span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[1] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(1)}>월</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[2] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(2)}>화</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[3] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(3)}>수</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[4] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(4)}>목</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[5] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(5)}>금</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[6] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(6)}>토</span>\n                                        <span className={editLectureInfo.day_week_array !== null && editLectureInfo.day_week_array !== undefined && editLectureInfo.day_week_array[0] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(0)}>일</span>\n                                    </span>\n                                    <WhiteButton name=\"다시 반영하기\" click={reEditCalendar}/>\n                                </div>\n                                }\n                                {!notUsingCalendar && editcalendar ?\n                                <LectureCalendar \n                                    academyDates={academyDates}\n                                    calendarData={resultDates} \n                                    path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}\n                                    createDate={createDate}\n                                    // updateDate={updateDate}\n                                    deleteDate={deleteDate}\n                                    lectureId={editLectureInfo.id}\n                                    setResultDates={setresultDates}\n                                />:\n                                <div></div>\n                            }\n                            <hr className=\"lecture-hr\"/>\n                            <div className=\"lecture-grid-layout2 mb15\">\n                                <span className=\"lecture-info-title\">강의 URL 주소</span>\n                                <input className=\"lecture-input mr15\" defaultValue={editLectureInfo.sample_url} name=\"sample_url\" onChange={onEdit}/>\n                                <span className=\"lecture-info-title\">강의 내용 설명</span>\n                                <textarea className=\"lecture-input mr15 h600\" defaultValue={selectedLecture.intro.replaceAll(\"<br/>\",\"\\n\")} name=\"intro\" onChange={onEdit}/>\n                            </div>\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr15\" name=\"수정 완료\" click={updateFinishBtn}/>\n                                <GreyButton class=\"\" name=\"수정 취소\" click={cancelBtnClick}/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"show-lecture-detail\">\n                        <div className=\"detail-title\">\n                            <h2>{selectedLecture.name}</h2>\n                            <span>{selectedLecture.instructor_name} 작성</span>\n                            <span className=\"lecture-detail-date\">강의가능기간: {selectedLecture.date !== null && selectedLecture.date !== \"\"? selectedLecture.date : \"일정 미지정\"}</span>\n                        </div>\n                        <div className=\"detail-content\">\n                            <div className=\"detail-sub-info\">\n                                <span>강의 가능 지역</span>\n                                <span>: {selectedLecture.region} </span>\n                                <span>강의 주제 카테고리\u001d</span>\n                                <span>: {selectedLecture.topic}</span>\n                                {selectedLecture.sample_url !== null && selectedLecture.sample_url !== \"\" && selectedLecture.sample_url !== \"null\"? <span>강의 URL 주소</span>:null}\n                                {selectedLecture.sample_url !== null && selectedLecture.sample_url !== \"\" && selectedLecture.sample_url !== \"null\"? <span>: <a href={selectedLecture.sample_url}>{selectedLecture.sample_url}</a></span>:null}\n                            </div>\n                            <p className=\"mb30\">\n                                {selectedLecture.intro.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}\n                            </p>\n                            {\n                                selectedLecture.date.length === 0?\n                                \"일정 추후 문의\":\n                                <div className=\"lecture-inst-calendar\">\n                                    <ReadCalendar\n                                        academyDates={academyDates}\n                                        readMainCalendar={readMainCalendar} \n                                        calendarData={calendarInfo} \n                                        path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} \n                                        clickedLecture={selectedLecture}/>\n                                </div>\n                            }\n                            {/* <div className=\"lecture-inst-calendar\">\n                                <ReadCalendar academyDates={academyDates} readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} clickedLecture={selectedLecture}/>\n                            </div> */}\n                            {isShowDelete ?\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"\" name=\"복구하기\" click={deleteToExist}/>\n                            </div>\n                            :\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr15\" name=\"수정하기\" click={editBtnClick}/>\n                                <GreyButton class=\"\" name=\"삭제하기\" click={deleteBtnClick}/>\n                            </div>\n                            }\n                        </div>\n\n                    </div>\n                    :\n                    null\n                    }\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminLecture;\n","import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\n\nimport '../../../assets/css/admin.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\nfunction AdminMain() {\n    const [settingInfo, setSettingInfo] = useState(null)\n    const [instructorInfo, setInstructorInfo] = useState(null)\n    const [lectureInfo, setLectureInfo] = useState(null)\n\n    /* section 1*/\n    const [removeBackgroundImage,setRemoveBackgroundImage] = useState([false, false,false,false, false])\n    const [backgroundImage,setBackgroundImage] = useState([null,null,null,null, null])\n    const [backgroundBase64Image, setBackgroundBase64Image] = useState([\"\",\"\",\"\",\"\", \"\"])\n\n    const [section1backgroundDelay, setSection1backgroundDelay] = useState(null)\n\n    /* section 2*/\n    const [removeBackgroundSection2,setRemoveBackgroundSection2] = useState(false)\n    const [backgroundSection2,setBackgroundSection2] = useState(null)\n    const [backgroundBase64Section2, setBackgroundBase64Section2] = useState(\"\")\n\n    const [section2Content, setSection2Content] = useState(null)\n\n    /* section 3*/\n    const [defaultInstructorImage, setDefaultInstructorImage] = useState([true,true,true,true])\n    const [instructorImage, setInstructorImage] = useState([null,null,null,null])\n    const [instructorBase64Image, setInstructorBase64Image] = useState([\"\",\"\",\"\",\"\"])\n    const [instructorFlag, setInstructorFlag] = useState([false, false, false, false])\n    const [instructorId, setInstructorId] = useState([-2,-2,-2,-2])\n\n    /* section 4*/\n    //const [removeLectureImage, setRemoveLectureImage] = useState([false, false, false, false, false,false, false, false])\n    const [defaultLectureImage, setDefaultLectureImage] = useState([true,true,true,true,true,true,true,true])\n    const [lectureFlag, setLectureFlag] = useState([false, false, false, false,false, false, false, false])\n    const [lectureImage, setLectureImage] = useState([null,null,null,null,null,null,null,null])\n    const [lectureBase64Image, setLectureBase64Image] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\n    const [lectureId, setLectureId] = useState([-2,-2,-2,-2,-2,-2,-2,-2])\n\n    useEffect(() => {\n        readMainPageContent();\n        readAllLecture();\n        readInstructor();\n    }, []);\n    \n    useEffect (() => {\n        if(settingInfo !== null){\n            var value = [false, false, false, false, false];\n            \n            for(let index=0; index<4; index++){\n                if(settingInfo.find(element => element.key === \"section1_img\"+(index+1)).value === \"\" || settingInfo.find(element => element.key === \"section1_img\"+(index+1)).value === null)\n                    value[index] = true;\n            }\n            if(settingInfo.find(element => element.key === \"section1_title\").value === \"\" || settingInfo.find(element => element.key === \"section1_title\").value === null){\n                value[4] = true;\n            }\n            setRemoveBackgroundImage(value);\n            setSection1backgroundDelay(settingInfo.find(element => element.key === \"section1_delay\").value);\n\n\n            if(settingInfo.find(element => element.key === \"section2_img\").value === \"\" || settingInfo.find(element => element.key === \"section2_img\").value === null)\n                setRemoveBackgroundSection2(true);\n\n            setSection2Content(settingInfo.find(element => element.key === \"section2_text\").value);\n\n            setInstructorId([\n                parseInt(settingInfo.find(element => element.key === \"section3_id1\").value),\n                parseInt(settingInfo.find(element => element.key === \"section3_id2\").value),\n                parseInt(settingInfo.find(element => element.key === \"section3_id3\").value),\n                parseInt(settingInfo.find(element => element.key === \"section3_id4\").value)\n            ]);\n            setLectureId([\n                parseInt(settingInfo.find(element => element.key === \"section5_id1\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id2\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id3\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id4\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id5\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id6\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id7\").value),\n                parseInt(settingInfo.find(element => element.key === \"section5_id8\").value)\n            ]);\n        }\n    }, [settingInfo]);\n\n    useEffect(() => {\n        let newArr = instructorBase64Image.map((item, i) => { \n            if (instructorId[i] === -1) { \n                return null; \n            } else { \n                return item; \n            } \n        }); \n        setInstructorBase64Image(newArr);\n\n        let newArr2 = instructorImage.map((item, i) => { \n            if (instructorId[i] === -1) { \n                return null; \n            } else { \n                return item; \n            } \n        }); \n        setInstructorImage(newArr2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instructorId]);\n\n    useEffect(() => {\n        let newArr = lectureBase64Image.map((item, i) => { \n            if (lectureId[i] === -1) { \n                return null; \n            } else { \n                return item; \n            } \n        }); \n        setLectureBase64Image(newArr);\n\n        let newArr2 = lectureImage.map((item, i) => { \n            if (lectureId[i] === -1) { \n                return null; \n            } else { \n                return item; \n            } \n        }); \n        setLectureImage(newArr2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lectureId]);\n    \n    const delayChanged = e => {\n        setSection1backgroundDelay(e.target.value);\n    }\n\n\n    const handleChangeFile = (event,setImage,setImagebase64) => {\n        var reader = new FileReader();\n            if (event.target.files[0]) {\n                reader.readAsDataURL(event.target.files[0]);\n                setImage(event.target.files[0]);\n            }\n            reader.onloadend = () => {\n            const base64 = reader.result;\n            if (base64) {\n                setImagebase64(base64.toString());\n            }\n        }\n        \n    }\n    const ChangeFiles = (event,Image, setImage,Imagebase64, setImagebase64, index) => {\n        var reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]);\n\n            let newArr = Image.map((item, i) => { \n                if (index === i) { \n                    return event.target.files[0]; \n                } else { \n                    return item; \n                } \n            }); \n            setImage(newArr);\n        }\n        reader.onloadend = () => {\n            const base64 = reader.result;\n            if (base64) {\n                let newArr = Imagebase64.map((item, i) => { \n                    if (index === i) { \n                        return base64.toString(); \n                    } else { \n                        return item; \n                    } \n                }); \n                setImagebase64(newArr);\n            }\n        }\n    }\n    const ChangeFiles2 = (event,Image, setImage,Imagebase64, setImagebase64, index, setImageFlag, imageFlag) => {\n        var reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]);\n\n            let newArr = Image.map((item, i) => { \n                if (index === i) { \n                    return event.target.files[0]; \n                } else { \n                    return item; \n                } \n            }); \n            setImage(newArr);\n\n            let newArr3 = imageFlag.map((item, i) => { \n                if (index === i) { \n                    return true; \n                } else { \n                    return item; \n                } \n            }); \n            setImageFlag(newArr3);\n        }else {\n            let newArr2 = imageFlag.map((item, i) => { \n                if (index === i) { \n                    return false; \n                } else { \n                    return item; \n                } \n            }); \n            setImageFlag(newArr2);\n        }\n        reader.onloadend = () => {\n            const base64 = reader.result;\n            if (base64) {\n                let newArr = Imagebase64.map((item, i) => { \n                    if (index === i) { \n                        return base64.toString(); \n                    } else { \n                        return item; \n                    } \n                }); \n                setImagebase64(newArr);\n            }\n        }\n    }\n\n    const readMainPageContent = async () =>{\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting/admin', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setSettingInfo(response.data)\n    }\n\n    const readAllLecture = async() => {\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/all', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setLectureInfo(response.data);\n    }\n\n    const readInstructor = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/all', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setInstructorInfo(response.data)\n    }\n    const clickEditMainPageButton = async () =>{\n        const params = new FormData();\n        const headers = {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n        }\n        var removeFlag = false;\n        var values = [\"\",\"\",\"\",\"\",\"\"];\n        for(let i=0; i<4; i++){\n            if(removeBackgroundImage[i] === false){\n                values[i] = settingInfo.find(element => element.key === \"section1_img\"+(i+1)).value;\n                removeFlag = true;\n            }\n            else \n                values[i] = null;\n        }\n\n        if(removeBackgroundImage[4] === false){\n            values[4] = settingInfo.find(element => element.key === \"section1_title\").value;\n            removeFlag = true;\n        }else \n            values[4] = null;\n\n        if(!removeFlag){\n            alert(\"이미지를 하나 이상 넣어야 수정할 수 있습니다.\");\n            return;\n        }\n\n        let fileCount = backgroundImage.map((item, i) => { \n            if (removeBackgroundImage[i] === false && item !== null) {\n                params.append('file', item);\n                return i;\n            } else { \n                return -1;\n            } \n        });\n        fileCount = fileCount.filter(x => x !== -1);\n\n        let valuesData = values.map((item, i) => { \n            if (removeBackgroundImage[i] === false) { \n                return item;\n            } else { \n                return null; \n            } \n        }); \n\n        params.append('values', valuesData);\n        params.append('delay', section1backgroundDelay);\n        params.append('fileCount', fileCount);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST +'setting/mainHome',\n        params,{headers})\n        .then(function(res) {\n            alert(\"처음 화면 수정이 완료되었습니다.\");\n            readMainPageContent();\n            setBackgroundImage([null,null,null,null, null]);\n            setBackgroundBase64Image([\"\",\"\",\"\",\"\", \"\"]);\n        });\n    }\n\n    const clickEditExplainSiteButton = async () => {\n        const params = new FormData();\n        const headers = {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n        }\n        if(removeBackgroundSection2 === true){\n            alert(\"사진을 하나 이상 넣어야 수정하실 수 있습니다.\");\n            return;\n        }else {\n            params.append('value', settingInfo.find(element => element.key === \"section2_img\").value);\n            params.append('file', backgroundSection2);\n        }\n        params.append('content', section2Content);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST +'setting/explainSite',\n            params,{headers})\n            .then(function(res) {\n                alert(\"사이트 설명 화면 수정이 완료되었습니다.\");\n                readMainPageContent();\n                setBackgroundBase64Section2(\"\");\n                setBackgroundSection2(null);\n            });\n    }\n\n    const clickEditExplainInstructorButton = async () => {\n        const params = new FormData();\n        const headers = {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n        }\n        var defaultValues = [\"\",\"\",\"\",\"\",\"final\"];\n        for(let i=0; i<4; i++){\n            if(instructorId[i] !== -1 && instructorId[i] !== parseInt(settingInfo.find(element => element.key === \"section3_id\"+(i+1)).value)){\n                defaultValues[i] = instructorInfo.find(element => parseInt(element.id) === instructorId[i]).image;\n            }else {\n                defaultValues[i] = settingInfo.find(element => element.key === \"section3_img\"+(i+1)).value;\n            }\n        }\n        var instructorFlag = false;\n        let fileCount = instructorImage.map((item, i) => { \n            if (instructorId[i] !== -1 && instructorImage[i] !== null) {\n                params.append('file', item);\n                instructorFlag = true;\n                return i;\n            } else { \n                return -1;\n            } \n        });\n        fileCount = fileCount.filter(x => x !== -1);\n\n        if(!instructorFlag){\n            alert(\"사진을 하나 이상 넣어야 수정하실 수 있습니다.\");\n            return;\n        }\n        params.append('fileCount', fileCount);\n        params.append('values', defaultValues);\n        params.append('instructor_id', instructorId);\n        params.append('token', window.sessionStorage.getItem('token'))\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST +'setting/explainInstructor',\n        params,{headers})\n        .then(function(res) {\n            alert(\"강사 화면 수정이 완료되었습니다.\");\n            readMainPageContent();\n            setInstructorImage([null,null,null,null]);\n            setInstructorBase64Image([\"\",\"\",\"\",\"\", \"\"]);\n            setInstructorFlag([false, false, false, false]);\n        });\n    }\n\n    const clickEditExplainLectureButton = async () => {\n        const params = new FormData();\n        const headers = {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n        }\n        var defaultValues = [\"\",\"\",\"\",\"\"];\n        for(let i=0; i<8; i++){\n            defaultValues[i] = settingInfo.find(element => element.key === \"section5_img\"+(i+1)).value;\n        }\n        let fileCount = lectureImage.map((item, i) => { \n            if (lectureId[i] !== -1 && lectureImage[i] !== null) {\n                params.append('file', item);\n                return i;\n            } else { \n                return -1;\n            } \n        });\n        fileCount = fileCount.filter(x => x !== -1);\n \n        params.append('fileCount', fileCount);\n        params.append('values', defaultValues);\n        params.append('lecture_id', lectureId);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST +'setting/explainLecture',\n        params,{headers})\n        .then(function(res) {\n            alert(\"강사 화면 수정이 완료되었습니다.\");\n            readMainPageContent();\n            setLectureImage([null,null,null,null,null,null,null,null]);\n            setLectureBase64Image([\"\",\"\",\"\",\"\", \"\",\"\",\"\",\"\"]);\n        });\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">메인페이지 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <p className=\"main-title mb40\">\n                    처음 화면\n                </p>\n                <div className=\"main-content-wrapper mb55\">\n                    <p className=\"main-title\">배경 화면</p>\n                    <div className=\"main-sub-wrapper\">\n                        {\n                            [0,1,2,3].map((data, i) =>\n                                <div className=\"img-wrapper\" key={i}>\n                                    <span className=\"default-img\">\n                                        {removeBackgroundImage[data] === false && backgroundImage[data] !== null?\n                                        <img className=\"default-img\" src={backgroundBase64Image[data]} alt=\"배경화면\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:\n                                        removeBackgroundImage[data] === false && settingInfo !== null && settingInfo.find(element => element.key === \"section1_img\"+(data+1)).value !== null && settingInfo.find(element => element.key === \"section1_img\"+(data+1)).value !== \"\" && settingInfo.find(element => element.key === \"section1_img\"+(data+1)).value !== \"null\"?\n                                        <img className=\"default-img\" src={process.env.REACT_APP_RESTAPI_HOST+ \"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img\"+(data+1)).value} alt=\"배경화면\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:null\n                                        }\n                                    </span>\n                                    <div>\n                                    <label className={removeBackgroundImage[data] === false? \"input-file-button\": \"input-file-button disabled\"} htmlFor={\"input-file\"+data}>첨부파일</label>\n                                    {removeBackgroundImage[data] === true?\n                                    <input type=\"file\" id=\"input-file\" style={{display:\"none\"}} disabled/>:\n                                    <input type=\"file\" id={\"input-file\"+data} style={{display:\"none\"}} onChange={(e) => { ChangeFiles(e, backgroundImage, setBackgroundImage, backgroundBase64Image, setBackgroundBase64Image,data);}}/>\n                                    }\n                                    <span className=\"admin-main-remove\" >삭제</span>\n                                    {\n                                        removeBackgroundImage[data] === false?\n                                            <input type=\"checkbox\" onChange={(e) => {\n                                                let newArr = removeBackgroundImage.map((item, index) => { \n                                                    if (data === index) { \n                                                        return e.target.checked; \n                                                    } else { \n                                                        return item; \n                                                    } \n                                                }); \n                                                setRemoveBackgroundImage(newArr);\n                                            }}/>\n                                        :\n                                            <input type=\"checkbox\" onChange={(e) => {\n                                                let newArr = removeBackgroundImage.map((item, index) => { \n                                                    if (data === index) { \n                                                        return e.target.checked; \n                                                    } else { \n                                                        return item; \n                                                    } \n                                                }); \n                                                setRemoveBackgroundImage(newArr);\n                                            }} checked/>\n                                    }\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <p className=\"main-title\">배경 전환</p>\n                    <div className=\"main-sub-wrapper\">\n                        <span className=\"main-second\">\n                            사진이 <input className=\"sec-input\" type=\"text\" value={section1backgroundDelay || \"\"} onChange={delayChanged}/> 초에 한 번씩 바뀌도록\n                        </span>\n                    </div>\n                    <p className=\"main-title\">중간 글귀</p>\n                    <div className=\"main-sub-wrapper justify-start mb0\">\n                        <div className=\"mr30 img-wrapper no-margin\">\n                            <span className=\"default-img\">\n                                    {removeBackgroundImage[4] === false && backgroundImage[4] !== null?\n                                        <img className=\"default-img\" src={backgroundBase64Image[4]} alt=\"배경화면\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:\n                                        removeBackgroundImage[4] === false && settingInfo !== null && settingInfo.find(element => element.key === \"section1_title\").value !== null && settingInfo.find(element => element.key === \"section1_title\").value !== \"null\" && settingInfo.find(element => element.key === \"section1_title\").value !== \"\"?\n                                        <img className=\"default-img\" src={process.env.REACT_APP_RESTAPI_HOST+ \"resources/upload/\"+settingInfo.find(element => element.key === \"section1_title\").value} alt=\"배경화면 1\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:null\n                                    }\n                            </span>\n                            <label className={removeBackgroundImage[4] === false? \"input-file-button\": \"input-file-button disabled\"} htmlFor={\"input-file\"+4}>첨부파일</label>\n                                {removeBackgroundImage[4] === true?\n                                <input type=\"file\" id=\"input-file\" style={{display:\"none\"}} disabled/>:\n                                <input type=\"file\" id={\"input-file\"+4} style={{display:\"none\"}} onChange={(e) => { ChangeFiles(e, backgroundImage, setBackgroundImage, backgroundBase64Image, setBackgroundBase64Image, 4) }}/>\n                            }\n                            <span className=\"admin-main-remove\" >삭제</span>\n                            <input type=\"checkbox\" defaultValue={removeBackgroundImage[4]} onChange={(e) => {\n                                        let newArr = removeBackgroundImage.map((item, i) => { \n                                            if (4 === i) { \n                                                return !item; \n                                            } else { \n                                                return item; \n                                            } \n                                        }); \n                                        setRemoveBackgroundImage(newArr);\n                                    }}/>\n                        </div>\n                        <div className=\"position-r\">\n                        </div>\n                    </div>\n                </div>\n                <div className=\"button-wrapper\"><GreyButton class=\"inst-grey-btn\" name=\"수정하기\" click={clickEditMainPageButton}/></div>\n                <p className=\"main-title mb30\">\n                    사이트 설명 화면\n                </p>\n                <div className=\"main-content-wrapper mb55\">\n                    <p className=\"main-title\">배경 사진</p>\n                    <div className=\"main-sub-wrapper\">\n                        <div className=\"mr25 img-wrapper\">\n                            <span className=\"default-img\">\n                                {removeBackgroundSection2 === false && backgroundSection2 !== null?\n                                    <img className=\"default-img\" src={backgroundBase64Section2} alt=\"배경화면 section2\"\n                                    onError={(e) => {\n                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                    }}/>:\n                                    removeBackgroundSection2 === false && settingInfo !== null && settingInfo.find(element => element.key === \"section2_img\").value !== null && settingInfo.find(element => element.key === \"section2_img\").value !== \"null\" && settingInfo.find(element => element.key === \"section2_img\").value !== \"\"?\n                                    <img className=\"default-img\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section2_img\").value} alt=\"배경화면 section 2\"\n                                    onError={(e) => {\n                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                    }}/>:null\n                                }\n                            </span>\n                            <label className={removeBackgroundSection2 === false? \"input-file-button\": \"input-file-button disabled\"} htmlFor=\"input-file-explain\">첨부파일</label>\n                            {removeBackgroundSection2 === true?\n                                <input type=\"file\" id=\"input-file-explain\" style={{display:\"none\"}} disabled/>:\n                                <input type=\"file\" id=\"input-file-explain\" style={{display:\"none\"}} onChange={(e) => {handleChangeFile(e, setBackgroundSection2, setBackgroundBase64Section2)}}/>\n                            }\n                            <span className=\"admin-main-remove\" >삭제</span>\n                            <input type=\"checkbox\" onChange={(e) => {setRemoveBackgroundSection2(e.target.checked); }}/>\n                        </div>\n                    </div>\n                    <p className=\"main-title\">행사 조직 안내글</p>\n                    <div>\n                        <textarea className=\"info-textarea\" placeholder=\"행사 조직 안내글을 입력하세요.\" value={section2Content || \"\"} onChange={(e) => {setSection2Content(e.target.value);}}></textarea>\n                    </div>\n                </div>\n                <div className=\"button-wrapper\"><GreyButton class=\"inst-grey-btn\" name=\"수정하기\" click={clickEditExplainSiteButton}/></div>\n                \n                <p className=\"main-title mb30\">\n                    대표 강사 소개 화면\n                </p>\n                <div className=\"main-content-wrapper mb55 p4020\">\n                    <div className=\"main-sub-wrapper mb0\">\n                        {\n                            [0,1,2,3].map((data, i) =>\n                                <div className=\"img-inst-wrapper\" key={i}>\n                                    <span className=\"default-inst-img\">\n                                        {instructorId[data] !== -1 && instructorBase64Image[data] !== null && instructorBase64Image[data] !== \"\"?\n                                        <img className=\"default-img admin-main-img-content\" src={instructorBase64Image[data]} alt=\"강사화면1\"onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:\n                                        instructorFlag[data] === false && defaultInstructorImage[data] === true && settingInfo !== null && settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value !== null && settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value !== \"\" && settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value !== \"null\"?\n                                        <img className=\"default-img admin-main-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+ \"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value} alt=\"강사화면2\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:\n                                        instructorId[data] !== -1 && instructorInfo !== null && instructorInfo.find(element => parseInt(element.id) === instructorId[data]) !== null && instructorInfo.find(element => parseInt(element.id) === instructorId[data]) !== undefined && instructorInfo.find(element => parseInt(element.id) === instructorId[data]).image !== undefined && instructorInfo.find(element => parseInt(element.id) === instructorId[data]).image !== null && instructorInfo.find(element => parseInt(element.id) === instructorId[data]).image !== \"null\" && instructorInfo.find(element => parseInt(element.id) === instructorId[data]).image !== \"\"?\n                                        <img className=\"default-img admin-main-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+ \"resources/upload/\"+instructorInfo.find(element => parseInt(element.id) === instructorId[data]).image} alt=\"강사화면3\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:\n                                        instructorId[data] !== -1 && settingInfo !== null && settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value !== null && settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value !== \"\" && settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value !== \"null\"?\n                                        <img className=\"default-img admin-main-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+ \"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img\"+(data+1)).value} alt=\"강사화면4\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:null\n                                        }\n                                    </span>\n                                    <label className={instructorId[data] !== -1? \"input-file-button\": \"input-file-button disabled\"} htmlFor={\"input-inst-file\"+data}>첨부파일</label>\n                                    {instructorId[data] === -1?\n                                    <input type=\"file\" id=\"input-inst-file\" style={{display:\"none\"}} disabled/>:\n                                    <input type=\"file\" id={\"input-inst-file\"+data} style={{display:\"none\"}} onChange={(e) => { ChangeFiles2(e, instructorImage, setInstructorImage, instructorBase64Image, setInstructorBase64Image,data, setInstructorFlag, instructorFlag);}}/>\n                                    }\n                                    <span className=\"search-inst-wrapper\">\n                                        {\n                                            instructorInfo !== null?\n                                            <select className = \"search-input\" value={instructorId[data]}\n                                            onChange={(e) =>{\n                                                if(defaultInstructorImage[data] === true){\n                                                    let newArr2 = defaultInstructorImage.map((item, i) => { \n                                                        if (data === i) { \n                                                            return false; \n                                                        } else { \n                                                            return item; \n                                                        } \n                                                    }); \n                                                    setDefaultInstructorImage(newArr2);\n                                                }\n                                                let newArr = instructorId.map((item, i) => { \n                                                    if (data === i) { \n                                                        return parseInt(e.target.value); \n                                                    } else { \n                                                        return item; \n                                                    } \n                                                }); \n                                                setInstructorId(newArr);\n                                            }}>\n                                            <option value={-1}>삭제 (선택 안 함)</option>\n                                            {instructorInfo !== null ?\n                                                instructorInfo.map((data2, index2) =>\n                                                <option key={index2} value={parseInt(data2.id)}>{data2.inst_name}</option>\n                                                    )\n                                                :\n                                                <option value=\"-2\">데이터 없음</option>\n                                            }\n                                        </select>:\n                                        <select className = \"search-input\" defaultValue=\"-2\">\n                                            <option value=\"-2\">데이터 없음</option>\n                                        </select>\n                                        }\n                                    </span>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"button-wrapper\"><GreyButton class=\"inst-grey-btn\" name=\"수정하기\" click={clickEditExplainInstructorButton}/></div>\n                <p className=\"main-title mb30\">\n                    대표 강좌 소개 화면\n                </p>\n                <div className=\"main-content-wrapper mb55 p4020\">\n                    <div className=\"main-sub-lecture-wrapper mb0\">\n                        {\n                            [0,1,2,3,4,5,6,7].map((data, i) =>\n                                <div className=\"img-lecture-wrapper\" key={i}>\n                                    <span className=\"default-lecture-img\">\n                                        {lectureId[data] !== -1 && lectureBase64Image[data] !== \"\" && lectureBase64Image[data] !== null?\n                                        <img className=\"default-img admin-main-img-content\" src={lectureBase64Image[data]} alt=\"강사화면\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}\n                                        />:\n                                        lectureId[data] !== -1 && settingInfo !== null && settingInfo.find(element => element.key === \"section5_img\"+(data+1)).value !== null && settingInfo.find(element => element.key === \"section5_img\"+(data+1)).value !== \"\" && settingInfo.find(element => element.key === \"section5_img\"+(data+1)).value !== \"null\"?\n                                        <img className=\"default-img admin-main-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+ \"resources/upload/\"+settingInfo.find(element => element.key === \"section5_img\"+(data+1)).value} alt=\"강사화면2\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}\n                                        />:\n                                        null\n                                        }\n                                    </span>\n                                    <label className={lectureId[data] !== -1? \"input-file-button\": \"input-file-button disabled\"} htmlFor={\"input-lecture-file\"+data}>첨부파일</label>\n                                    {lectureId[data] === -1?\n                                    <input type=\"file\" id=\"input-lecture-file\" style={{display:\"none\"}} disabled/>:\n                                    <input type=\"file\" id={\"input-lecture-file\"+data} style={{display:\"none\"}} onChange={(e) => { ChangeFiles2(e, lectureImage, setLectureImage, lectureBase64Image, setLectureBase64Image, data, setLectureFlag, lectureFlag);}}/>\n                                    }\n                                    <span className=\"search-lecture-wrapper\">\n                                        <select className = \"search-input\" value={lectureId[data]} \n                                            onChange={(e) =>{\n                                                if(defaultLectureImage[data] === true){\n                                                    let newArr2 = defaultLectureImage.map((item, i) => { \n                                                        if (data === i) { \n                                                            return false; \n                                                        } else { \n                                                            return item; \n                                                        } \n                                                    }); \n                                                    setDefaultLectureImage(newArr2);\n                                                }\n                                                let newArr = lectureId.map((item, i) => { \n                                                    if (data === i) { \n                                                        return parseInt(e.target.value); \n                                                    } else { \n                                                        return item; \n                                                    } \n                                                }); \n                                                setLectureId(newArr);\n                                            }}>\n                                            <option value={-1}>삭제 (선택 안 함)</option>\n                                            {lectureInfo !== null ?\n                                                lectureInfo.map((data, index) =>\n                                                    <option key={index} value={parseInt(data.id)}>{data.name}</option>\n                                                    )\n                                                :\n                                                <option value=\"-2\">데이터 없음</option>\n                                            }\n                                        </select>\n                                    </span>\n                                </div>\n                            )\n                        }\n                        \n                        \n                    </div>\n                </div>\n                <div className=\"button-wrapper\"><GreyButton class=\"inst-grey-btn\" name=\"수정하기\" click={clickEditExplainLectureButton}/></div>\n            </div>        \n        </div>\n    )\n}\n\nexport default AdminMain;","import React from \"react\";\n\n// width:'115px', height: '40px'\nfunction BlueButton(props) {\n    return (\n        <button \n            style={{cursor:\"pointer\" ,padding:\"5px 12px\",background:\"rgb(20 92 204 / 20%)\", fontSize:'16px', fontWeight:'500', borderRadius:'6px', boxShadow:'2px 2px 0 rgb(0 0 0 / 20%)', border:'1px solid rgb(0 0 0 / 20%)'}}\n            className={props.class} onClick={props.click}>\n                {props.name}\n        </button>\n    )\n}\nexport default BlueButton;\n\n","import React, {useState,useEffect} from \"react\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport Postcode from '@actbase/react-daum-postcode';\nimport Pagination from \"react-js-pagination\";\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_lecture.css';\nimport '../../../assets/css/admin_church.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport BlueButton from '../../modules/button/blue_button';\nimport CommonModal from '../../modules/modal/common';\n\nfunction AdminChurch() {\n    const [keyword, setKeyword] = useState(null);\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const [ isInsertModalOpen, setisInsertModalOpen ] = useState(false)\n    const [clickedChurch, setclickedChurch] = useState(null);\n    const [editChurch, seteditChurch] = useState(false);\n    const [editChurchInfo, seteditChurchInfo] = useState({userId:window.sessionStorage.getItem('id'), name:\"\", region_id:\"\", nation:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n    const [addChurchInfo, setaddChurchInfo] = useState({userId:window.sessionStorage.getItem('id') , name:\"\", region_id:\"\", nation:\"대한민국\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n    const [churchInfo, setchurchInfo] = useState(null)\n    const [isPostModal, setPostModal] = useState(false);\n    const [isPostCodeOpen, setisPostCodeOpen] = useState(false)\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [isShowDelete, setisShowDelete] = useState(false);\n    // excel upload\n    const [excelJSONData, setExcelJSONData] = useState(null);\n    const [errorCount, seterrorCount] = useState(0);\n    const excelFormat = {name:\"교회 이름 (필수)\", nation:\"대한민국(필수)\", city:\"경북 (필수)\", district:\"포항시 북구 (필수)\", zip_code:\"우편번호 (필수)\", addr1:\"경북 포항시 북구 흥해읍 한동로 558 (필수)\", addr2:\"뉴턴홀 (필수)\", phone:\"교회 번호 (필수)\", email:\"교회 이메일\", page_url:\"교회 홈페이지 주소\", fax:\"교회 팩스 번호\", size:\"교회 규모(명)\", denomination:\"교단\", pastor:\"담임목사\", admin_name:\"교회 담당자 이름\", hgu_yn:\"한동대와 연관성 여부\", hgu_memo:\"한동대와 연관성 세부정보\", memo:\"비고\"};\n\n    useEffect(() => {\n        readChurchInfo();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setPage(1);\n        setclickedChurch(null);\n    }, [isShowDelete])\n\n    useEffect(() => {\n        if(excelJSONData !== null) {\n            var count = 0;\n            excelJSONData.forEach(data => {\n                if(data.isValid === false)\n                    count++;\n            });\n            seterrorCount(count);\n        }\n    }, [excelJSONData])\n\n    const readChurchInfo = async () => {\n\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setchurchInfo(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setchurchInfo(response.data);\n        }\n        setKeyword(null);\n        setclickedChurch(null);\n    }\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    function clickChurch(church) {\n        if(clickedChurch === null || church !== clickedChurch) {\n            setclickedChurch(church);\n            seteditChurchInfo(church);\n            seteditChurch(false);\n        } else {\n            setclickedChurch(null);\n            seteditChurch(false);\n            seteditChurchInfo({name:\"\", region_id:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n        }\n    }\n\n    const openModal = () => {\n        setModalOpen(true);\n    }\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n    const insertModalOpen = () => {\n        setisInsertModalOpen(true);\n    }\n    const insertModalClose = () => {\n        setisInsertModalOpen(false);\n        setaddChurchInfo({userId:window.sessionStorage.getItem('id') , name:\"\", region_id:\"\", nation:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n    }\n    const editBtnClick = () => {\n        seteditChurch(true);\n    }\n    const cancelBtnClick = () => {\n        seteditChurch(false);\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n        setaddChurchInfo({\n            ...addChurchInfo,\n            [name]: value\n        });\n    };\n\n    const onEdit = (e) => {\n        const { value, name } = e.target;\n        seteditChurchInfo({\n            ...editChurchInfo,\n            [name]: value\n        });\n    };\n\n    const createChurch = async() => {\n        var params = new URLSearchParams();\n        params.append('userId', window.sessionStorage.getItem('id'));\n        params.append('name', addChurchInfo.name);\n        params.append('nation', addChurchInfo.nation);\n        params.append('district', addChurchInfo.district);\n        params.append('zip_code', addChurchInfo.zip_code);\n        params.append('addr1', addChurchInfo.addr1);\n        params.append('addr2', addChurchInfo.addr2);\n        params.append('phone', addChurchInfo.phone);\n        params.append('email', addChurchInfo.email);\n        params.append('page_url', addChurchInfo.page_url);\n        params.append('fax', addChurchInfo.fax);\n        params.append('size', addChurchInfo.size);\n        params.append('denomination', addChurchInfo.denomination);\n        params.append('pastor', addChurchInfo.pastor);\n        params.append('admin_name', addChurchInfo.admin_name);\n        params.append('hgu_yn', addChurchInfo.hgu_yn);\n        params.append('hgu_memo', addChurchInfo.hgu_memo);\n        params.append('memo', addChurchInfo.memo);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"교회를 추가하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church',\n            params,\n            ).then(function(res) {\n                alert(\"추가되었습니다.\");\n                readChurchInfo();\n                setaddChurchInfo({userId:window.sessionStorage.getItem('id') , name:\"\", region_id:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"})\n                setisInsertModalOpen(false);\n            });\n        }\n    }\n\n    const updateChurch = async() => {\n        if(window.confirm(\"교회 정보를 수정하시겠습니까?\")) {\n            editChurchInfo.token = window.sessionStorage.getItem('token');\n            editChurchInfo.manageID = window.sessionStorage.getItem('id');\n            axios(\n                {\n                url: process.env.REACT_APP_RESTAPI_HOST+'church/churchId/'+window.sessionStorage.getItem('id'),\n                method: 'put',\n                data: editChurchInfo\n                }\n            ).then(function(res) {\n                alert(\"수정이 완료되었습니다.\");\n                readChurchInfo();\n                setclickedChurch(null)\n                seteditChurch(false)\n                seteditChurchInfo({name:\"\", region_id:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", phone:\"\", email:\"\", page_url:\"\", fax:\"\", size:\"\", denomination:\"\", pastor:\"\", admin_name:\"\", hgu_yn:\"\", hgu_memo:\"\", writer_name:\"\", memo:\"\"});\n            })\n        }\n    }\n\n    const deleteChurch = async() => {\n        if(window.confirm(\"교회를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'church/delete',\n                    method: 'put',\n                    data: {\n                        church_id: clickedChurch.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readChurchInfo();\n                alert(\"삭제가 완료되었습니다.\")\n                setclickedChurch(null)\n            })\n        }\n    }\n\n    const recoverChurch = () => {\n        if(window.confirm(\"교회를 복구하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'church/recover',\n                    method: 'put',\n                    data: {\n                        church_id: clickedChurch.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readChurchInfo();\n                alert(\"복구가 완료되었습니다.\")\n                setclickedChurch(null)\n            })\n        }\n    }\n\n    function readExcel(event) {\n        seterrorCount(0);\n        let input = event.target;\n        let reader = new FileReader();\n        reader.onload = function () {\n            let data = reader.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n            workBook.SheetNames.forEach(function (sheetName) {\n                let rows = XLSX.utils.sheet_to_json(workBook.Sheets[sheetName]);\n                var changedData = [];\n                rows.forEach(data => {\n                    var temp = {\n                        name:data.name, \n                        nation: data.nation,\n                        zip_code:data.zip_code, \n                        city: data.city,\n                        district: data.district,\n                        addr1:data.addr1, \n                        addr2:data.addr2, \n                        phone:data.phone, \n                        email:data.email, \n                        page_url:data.page_url, \n                        fax:data.fax, \n                        size:data.size, \n                        denomination:data.denomination, \n                        pastor:data.pastor, \n                        admin_name:data.admin_name, \n                        hgu_yn:data.hgu_yn, \n                        hgu_memo:data.hgu_memo, \n                        writer_name:data.writer_name, \n                        memo:data.memo};\n\n                    for (var variable in temp) { \n                        if(temp[variable] === undefined) {\n                            temp[variable] = \"\";\n                        }   \n                    }\n                    if(temp['name'] === \"\" || temp['addr1'] === \"\" || temp['addr2'] === \"\" || temp['zip_code'] === \"\" || temp['phone'] === \"\") {\n                        temp.isValid = false;\n                    } else {\n                        temp.isValid = true;\n                    }\n                    changedData.push(temp);\n                });\n                setExcelJSONData(changedData);\n            })\n        };\n        if(input.files[0] !== undefined) {\n            reader.readAsBinaryString(input.files[0]);\n            openModal();\n            event.target.value = null;\n        }\n    }\n\n    const uploadExcelFile = async() => {\n        var params = new URLSearchParams();\n        params.append('data', JSON.stringify(excelJSONData));\n        \n        if(window.confirm(\"교회 정보를 업로드하시겠습니까?\")) {\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/excel/'+window.sessionStorage.getItem('id'),\n            params,\n            ).then(function(res) {\n                alert(\"엑셀 업로드가 완료되었습니다!\");\n                setModalOpen(false);\n                readChurchInfo();\n                setExcelJSONData(null);\n            });\n        }\n    }\n    \n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"church\";\n        const ws = XLSX.utils.json_to_sheet(churchInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const exportExcelForamt = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"church_format\";\n        const ws = XLSX.utils.json_to_sheet(excelFormat);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    const selectPostCode = (data) => {\n        setaddChurchInfo({\n            ...addChurchInfo,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n        setisPostCodeOpen(false);\n    }\n\n    const selectEditPostCode = (data) => {\n        seteditChurchInfo({\n            ...editChurchInfo,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n    }\n\n    const closePostModal = () => {\n        setPostModal(false);\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        if(isShowDelete){ // 삭제된 거 보여줄때   \n            currentPosts = churchInfo.filter(data => data.del_date !== null).slice(indexOfFirst, indexOfLast);\n        } else { // 전체 강의일 때\n            currentPosts = churchInfo.filter(data => data.del_date === null).slice(indexOfFirst, indexOfLast);\n        }\n        return currentPosts;\n    }\n\n    return (\n    <div>\n        <p className=\"admin-title-header\">교회 관리</p>\n        <div className=\"admin-content-wrapper\">\n            <div className=\"table-wrapper mt0 relative\">\n                <p className=\"table-name mb40\">\n                    {isShowDelete ? \"삭제된 교회 목록\" : \"교회 목록\"}\n                    <GreyButton class=\"right\" name=\"교회 추가하기\" click={insertModalOpen}/>\n                    <GreyButton class=\"right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    <GreyButton class=\"right mr10\" name=\"엑셀 업로드 포맷\" click={exportExcelForamt}/>\n\n                    <input\n                        type='file'\n                        accept='.xlsx'\n                        onChange={readExcel}\n                        id='uploadExcel'\n                        name='uploadExcel'\n                        style={{ display: 'none' }}\n                    />\n                    <label htmlFor='uploadExcel' className=\"grey-btn\">\n                        교회 정보 업로드\n                    </label>\n                </p>\n\n                <CommonModal open={isPostModal} close={closePostModal} func={closePostModal} header=\"주소 찾기\" footer=\"닫기\"> \n                    <Postcode\n                        style={{ width: 320, height: 320 }}\n                        jsOptions={{ animated: true, hideMapBtn: true }}\n                        onSelected={data => {\n                            selectEditPostCode(data);\n                            setPostModal(false);\n                        }}\n                    />\n                </CommonModal>\n\n                <CommonModal open={ isInsertModalOpen } close={ insertModalClose } func={createChurch} header=\"교회 추가하기\" footer=\"추가하기\">\n                    <div id=\"church-info\" className=\"lecture-info-wrapper mb40\">\n                        <div className=\"mt20\">\n                            <span className=\"add-church-title\">교회명</span>\n                            <input className=\"p4\" type=\"text\" name=\"name\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교단</span>\n                            <input className=\"p4\" type=\"text\" name=\"denomination\" onChange={onAdd}/>\n                        </div>\n                        {/* <div>\n                            <span className=\"add-church-title\">교단</span>\n                            <select className=\"w158 p4\">\n                                <option>교단</option>\n                            </select>\n                        </div> */}\n                        <div>\n                            <span className=\"add-church-title\">한동대와 연관성</span>\n                            <input className=\"p4 mr15\" placeholder=\"예) 한동대 후원 교회\" name=\"hgu_yn\" onChange={onAdd}/>\n                            <input className=\"p4 no-left-margin\" placeholder=\"세부사항 입력\"  name=\"hgu_memo\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 규모</span>\n                            <input className=\"p4 no-left-margin\" placeholder=\"예) 1000명 이상\"  name=\"size\" onChange={onAdd}/>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div>\n                            <span className=\"add-church-title\">담임 목사 성명</span>\n                            <input className=\"p4\" type=\"text\" name=\"pastor\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">실무자 성명</span>\n                            <input className=\"p4\" type=\"text\" name=\"admin_name\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">정보 제공자</span>\n                            <input className=\"p4\" type=\"text\" name=\"writer_name\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">주소 입력</span>\n                            <input className=\"church-addr no-left-margin w158 p4 mr15\" type=\"text\" placeholder=\"국가\" value={addChurchInfo.nation} name=\"nation\" onChange={onAdd}/>\n                            <input className=\"church-addr w158 p4 mr15\" type=\"text\" placeholder=\"시/도\" value={addChurchInfo.city} name=\"city\" onChange={onAdd}/>\n                            <input className=\"church-addr no-left-margin w158 p4 mr15\" placeholder=\"시/군/구\" type=\"text\" value={addChurchInfo.district} name=\"district\" onChange={onAdd}/>\n                        </div>\n\n                        <div className=\"mb8\" style={{position:'relative'}}>\n                            <span className=\"add-church-title\"></span>\n                            <input readOnly className=\"p4 mr15\" type=\"text\" placeholder=\"우편 번호\" value={addChurchInfo.zip_code} name=\"zip_code\" onChange={onAdd}/>\n                            {isPostCodeOpen ? \n                            <BlueButton click={() => setisPostCodeOpen(false)} name=\"주소창닫기\" class=\"blue-btn\"/>:\n                            <BlueButton click={() => setisPostCodeOpen(true)} name=\"주소찾기\" class=\"blue-btn\"/>\n                            }\n                            {isPostCodeOpen &&\n                            <Postcode\n                                style={{ width: 320, height: 320, position:'absolute', left:'170px' }}\n                                jsOptions={{ animated: true }}\n                                onSelected={data => selectPostCode(data)}\n                            />\n                            }\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"add-church-title\"></span>\n                            <input readOnly className=\"p4 w400\" type=\"text\" placeholder=\"주소\" name=\"addr1\" value={addChurchInfo.addr1} onChange={onAdd}/>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"add-church-title\"></span>\n                            <input className=\"p4 w400\" type=\"text\" placeholder=\"상세 주소 입력\" name=\"addr2\" onChange={onAdd}/>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div >\n                            <span className=\"add-church-title\">교회 연락처</span>\n                            <input className=\"p4\" type=\"text\" name=\"phone\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 이메일</span>\n                            <input className=\"p4\" type=\"text\" name=\"email\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 홈페이지</span>\n                            <input className=\"w400 p4\" type=\"text\" name=\"page_url\" onChange={onAdd}/>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 팩스 번호</span>\n                            <input className=\"w400 p4\" type=\"text\" name=\"fax\" onChange={onAdd}/>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div className=\"church-grid mb30\">\n                            <span className=\"add-church-title\">메모 사항</span>\n                            <textarea className=\"h180 p4\" name=\"memo\" onChange={onAdd}></textarea>\n                        </div>\n                    </div>\n                </CommonModal>\n\n                <CommonModal open={ modalOpen } close={ closeModal } func={uploadExcelFile} header=\"파일 업로드 목록\" footer=\"데이터 저장\">\n                    <p>\n                        빨간 색으로 표시된 것은 업로드 할 수 없는 데이터입니다. 빼고 업로드를 진행할까요?<br/>\n                        현재 잘못된 데이터는 {errorCount}개 입니다.\n                    </p>\n                    <div className=\"table-wrapper mt0 relative modal-table\" style={{width:\"2200px\"}}>\n                        <div className=\"mt50 table-row-modal-church\">\n                            <span className=\"th\">이름</span>\n                            <span className=\"th\">국가</span>\n                            <span className=\"th\">우편번호</span>\n                            <span className=\"th\">주소</span>\n                            <span className=\"th\">세부지역</span>\n                            <span className=\"th\">교회 번호</span>\n                            <span className=\"th\">교회 이메일</span>\n                            <span className=\"th\">홈페이지</span>\n                            <span className=\"th\">팩스</span>\n                            <span className=\"th\">교회규모</span>\n                            <span className=\"th\">교단</span>\n                            <span className=\"th\">담임목사</span>\n                            <span className=\"th\">관리자이름</span>\n                            <span className=\"th\">한동대 연관성</span>\n                            <span className=\"th\">한동대 세부 연관</span>\n                            <span className=\"th\">작성자이름</span>\n                            <span className=\"th\">메모</span>\n                        </div>\n                        {excelJSONData !== null ?\n                        excelJSONData.map((data, i) =>\n                        <div key={i} className={data.isValid ? \"table-row-modal-church\" : \"table-row-modal-church modal-error\"}>\n                            <span className=\"td\">{data.name}</span>\n                            <span className=\"td\">{data.nation}</span>\n                            <span className=\"td\">{data.zip_code}</span>\n                            <span className=\"td\">{data.addr1}</span>\n                            <span className=\"td\">{data.addr2}</span>\n                            <span className=\"td\">{data.phone}</span>\n                            <span className=\"td\">{data.email}</span>\n                            <span className=\"td\">{data.page_url}</span>\n                            <span className=\"td\">{data.fax}</span>\n                            <span className=\"td\">{data.size}</span>\n                            <span className=\"td\">{data.denomination}</span>\n                            <span className=\"td\">{data.pastor}</span>\n                            <span className=\"td\">{data.admin_name}</span>\n                            <span className=\"td\">{data.hgu_yn}</span>\n                            <span className=\"td\">{data.hgu_memo}</span>\n                            <span className=\"td\">{data.writer_name}</span>\n                            <span className=\"td\">{data.memo}</span>\n                        </div>\n                        )\n                        :\n                        <div>엑셀 데이터가 없습니다.</div>\n                        }\n                    </div>\n                </CommonModal>\n\n                <div className=\"mb35\">\n                    <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"교회명, 교단, 연관성, 담임 목사명, 실무자명, 전체 주소, 연락처, 이메일, 메모 사항으로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                    <GreyButton class=\"mr15\" name=\"검색\" click={readChurchInfo}/>\n                    {!isShowDelete ?\n                        <GreyButton name=\"삭제된 교회 보기\" click={() => {setisShowDelete(true)}}/>:\n                        <GreyButton name=\"교회 보기\" click={() => {setisShowDelete(false)}}/>}\n                </div>\n\n                {clickedChurch !== null ?\n                editChurch === true ?\n                // edit church\n                <div id=\"church-info\" className=\"lecture-info-wrapper mb40\">\n                    <div className=\"church-info lecture-date mb30\">\n                        <span>작성일자: {clickedChurch.reg_date}</span>\n                        <span>작성자: {clickedChurch.creater_name}</span>\n                        <span className=\"\">관리자확인 일자: {clickedChurch.confirm_date}</span>\n                        <span className=\"info-admin\">수정일자: {clickedChurch.update_date}</span>\n                        <span className=\"info-admin\">수정자: {clickedChurch.updater_name}</span>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회명</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.name} name=\"name\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교단</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.denomination} name=\"denomination\" onChange={onEdit}/>\n                    </div>\n                    {/* <div>\n                        <span className=\"add-church-title\">교단</span>\n                        <select className=\"w158 p4\">\n                            <option>교단</option>\n                        </select>\n                    </div> */}\n                    <div>\n                        <span className=\"add-church-title\">한동대와 연관성</span>\n                        <input className=\"p4 mr15\" type=\"text\" value={editChurchInfo.hgu_yn} name=\"hgu_yn\" onChange={onEdit}/>\n                        {/* <select className=\"w158 p4 mr15\" >\n                            <option>한동대와 연관성</option>\n                        </select> */}\n                        <input className=\"p4 no-left-margin\" placeholder=\"세부사항 입력\" value={editChurchInfo.hgu_memo} name=\"hgu_memo\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 규모</span>\n                        {/* <select className=\"w158 p4\">\n                            <option>교회 규모</option>\n                        </select> */}\n                        <input className=\"p4\" value={editChurchInfo.size} name=\"size\" onChange={onEdit}/>\n                    </div>\n                    <hr className=\"lecture-hr\"/>\n                    <div>\n                        <span className=\"add-church-title\">담임 목사 성명</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.pastor} name=\"pastor\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">실무자 성명</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.admin_name} name=\"admin_name\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">정보 제공자</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.writer_name} name=\"writer_name\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">주소 입력</span>\n                        <input className=\"church-addr no-left-margin w158 p4 mr15\" type=\"text\" placeholder=\"국가\" value={editChurchInfo.nation} name=\"nation\" onChange={onEdit}/>\n                        <input className=\"church-addr w158 p4 mr15\" type=\"text\" placeholder=\"시/도\" value={editChurchInfo.city} name=\"city\" onChange={onEdit}/>\n                        <input className=\"church-addr no-left-margin w158 p4 mr15\" placeholder=\"시/군/구\" type=\"text\" value={editChurchInfo.district} name=\"district\" onChange={onEdit}/>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"add-church-title\"></span>\n                        <input readOnly className=\"p4 mr10\" type=\"text\" placeholder=\"우편 번호\" value={editChurchInfo.zip_code} name=\"zip_code\" onChange={onEdit}/>\n                        <BlueButton class=\"blue-btn\" name=\"주소검색\" click={() => setPostModal(true)}/>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"add-church-title\"></span>\n                        <input readOnly className=\"p4 mr15 w400\" type=\"text\" value={editChurchInfo.addr1} name=\"addr1\" onChange={onEdit}/>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"add-church-title\"></span>\n                        <input className=\"p4 w400\" type=\"text\" placeholder=\"상세 주소 입력\" value={editChurchInfo.addr2} name=\"addr2\" onChange={onEdit}/>\n                    </div>\n                    <hr className=\"lecture-hr\"/>\n                    <div >\n                        <span className=\"add-church-title\">교회 연락처</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.phone} name=\"phone\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 이메일</span>\n                        <input className=\"p4\" type=\"text\" value={editChurchInfo.email} name=\"email\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 홈페이지</span>\n                        <input className=\"w400 p4\" type=\"text\" value={editChurchInfo.page_url} name=\"page_url\" onChange={onEdit}/>\n                    </div>\n                    <div>\n                        <span className=\"add-church-title\">교회 팩스 번호</span>\n                        <input className=\"w400 p4\" type=\"text\" value={editChurchInfo.fax} name=\"fax\" onChange={onEdit}/>\n                    </div>\n                    <hr className=\"lecture-hr\"/>\n                    <div className=\"church-grid\">\n                        <span className=\"add-church-title\">메모 사항</span>\n                        <textarea className=\"h180 p4\" value={editChurchInfo.memo} name=\"memo\" onChange={onEdit}></textarea>\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <GreyButton class=\"mr15\" name=\"수정 완료\" click={updateChurch}/>\n                        <GreyButton class=\"mb40\" name=\"수정 취소\" click={cancelBtnClick}/>\n                    </div>\n                </div>\n                :\n                // read church\n                <div id=\"read-church-info\" className=\"lecture-info-wrapper mb40\">\n                    <div className=\"church-info lecture-date mb30\">\n                        <span>작성일자: {clickedChurch.reg_date}</span>\n                        <span>작성자: {clickedChurch.creater_name}</span>\n                        <span>관리자확인 일자: {clickedChurch.confirm_date}</span>\n                        <span>수정일자: {clickedChurch.update_date}</span>\n                        <span>수정자: {clickedChurch.updater_name}</span>\n                    </div>\n                    <div className=\"read-church-content\">\n                        <div>\n                            <span className=\"add-church-title\">교회명</span>\n                            <span>{clickedChurch.name}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교단</span>\n                            <span>{clickedChurch.denomination}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">한동대와 연관성</span>\n                            <span>{clickedChurch.hgu_yn}</span>\n                            <span>{clickedChurch.hgu_memo}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 규모</span>\n                            <span>{clickedChurch.size}</span>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div>\n                            <span className=\"add-church-title\">담임 목사 성명</span>\n                            <span>{clickedChurch.pastor}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">실무자 성명</span>\n                            <span>{clickedChurch.admin_name}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">정보 제공자</span>\n                            <span>{clickedChurch.writer_name}</span>\n                        </div>\n                        {/* <div>\n                            <span className=\"add-church-title\">실무자 연락처</span>\n                            <span>{clickedChurch.admin_phone}</span>\n                        </div> */}\n                        <div>\n                            <span className=\"add-church-title\">주소</span>\n                            <span>{clickedChurch.nation}</span>\n                            <span>{clickedChurch.city}</span>\n                            <span>{clickedChurch.district}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">우편 번호</span>\n                            <span>{clickedChurch.zip_code}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 주소</span>\n                            {/* <span className=\" church-blank add-church-title\"></span> */}\n                            <span>{clickedChurch.addr1}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 세부 주소</span>\n                            <span>{clickedChurch.addr2}</span>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div >\n                            <span className=\"add-church-title\">교회 연락처</span>\n                            <span>{clickedChurch.phone}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 이메일</span>\n                            <span>{clickedChurch.email}</span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 홈페이지</span>\n                            <span><a href={clickedChurch.page_url !== \"\" && clickedChurch.page_url !== null ? clickedChurch.page_url : \"\"}>{clickedChurch.page_url}</a></span>\n                        </div>\n                        <div>\n                            <span className=\"add-church-title\">교회 팩스 번호</span>\n                            <span>{clickedChurch.fax}</span>\n                        </div>\n                        <hr className=\"lecture-hr\"/>\n                        <div className=\"church-grid\">\n                            <span className=\"add-church-title\">메모 사항</span>\n                            <span>{clickedChurch.memo}</span>\n                        </div>\n                        {isShowDelete ?\n                        <div className=\"button-wrapper\">\n                            <GreyButton class=\"\" name=\"복구하기\" click={recoverChurch}/>\n                        </div>\n                        :\n                        <div className=\"button-wrapper\">\n                            <GreyButton class=\"mr15\" name=\"수정하기\" click={editBtnClick}/>\n                            <GreyButton class=\"\" name=\"삭제하기\" click={deleteChurch}/>\n                        </div>\n                        }\n                    </div>\n                </div> \n                :\n                null\n                }\n                \n                <div className=\"mt50 table-row-church\">\n                    <span className=\"th\">교단</span>\n                    <span className=\"th\">이름</span>\n                    <span className=\"th church-location\">주소</span>\n                    <span className=\"th church-writer\">정보제공자</span>\n                    <span className=\"th church-date\">작성일자</span>\n                </div>\n                {churchInfo !== null && currentPosts(churchInfo).length > 0 ?\n                currentPosts(churchInfo).map((church, i) =>\n                    <div key={church.id} className={church === clickedChurch ? \"table-row-church click-inst-row\" : \"table-row-church\"} onClick = {() => {clickChurch(church)}}>\n                        <span className=\"td\">{church.denomination}</span>\n                        <span className=\"td\">{church.name}</span>\n                        <span className=\"td church-location\">{church.addr1} {church.addr2}</span>\n                        <span className=\"td church-writer\">{church.writer_name}</span>\n                        <span className=\"td church-date\">{church.reg_date}</span>\n                    </div>\n                )\n                : <div className=\"no-content\">교회 정보 없음</div>\n                }\n            </div>\n            <Pagination \n                activePage={page} \n                itemsCountPerPage={postsPerPage} \n                totalItemsCount={churchInfo === null ? \n                    0 :\n                    isShowDelete ? \n                    churchInfo.filter(data => data.del_date !== null).length:\n                    churchInfo.filter(data => data.del_date === null).length} \n                pageRangeDisplayed={5} \n                prevPageText={\"‹\"} \n                nextPageText={\"›\"} \n                onChange={handlePageChange} \n            />\n        </div>\n    </div>\n    )\n}\n\nexport default AdminChurch;","\nimport React, {useState, useEffect} from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_lecture.css';\nimport '../../../assets/css/admin_church.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\nfunction AdminChurchTemp() {\n\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [churchTempData, setChurchTempData] = useState(null);\n    const [selectedChurchTemp, setSelectedChurchTemp] = useState(null);\n    const [keyword, setKeyword] = useState(null);\n\n    function clickChurch(data) {\n        if(selectedChurchTemp !== null && data.id === selectedChurchTemp.id) {\n            setSelectedChurchTemp(null);\n        } else {\n            setSelectedChurchTemp(data);\n        }\n    }\n\n    useEffect(() => {\n        readChurchTempData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    const readChurchTempData = async() => {\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church/temp',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setChurchTempData(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'church/temp', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setChurchTempData(response.data);\n        }\n        setKeyword(null);\n        setSelectedChurchTemp(null);\n    }\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const acceptTemp = async() => {\n        var params = new URLSearchParams();\n        params.append('user_id', window.sessionStorage.getItem('id'));\n        params.append('id', selectedChurchTemp.id);\n        params.append('new_name', selectedChurchTemp.new_name);\n        params.append('new_district', selectedChurchTemp.new_district);\n        params.append('new_zip_code', selectedChurchTemp.new_zip_code);\n        params.append('new_addr1', selectedChurchTemp.new_addr1);\n        params.append('new_addr2', selectedChurchTemp.new_addr2);\n        params.append('new_pastor', selectedChurchTemp.new_pastor);\n        params.append('new_email', selectedChurchTemp.new_email);\n        params.append('new_phone', selectedChurchTemp.new_phone);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"교회 정보를 수정하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/confirmChurchTemp',\n            params,\n            ).then(function(res) {\n                alert(\"교회 정보가 수정되었습니다.\");\n                readChurchTempData();\n                setSelectedChurchTemp(null);\n            });\n        }\n    }\n\n    const rejectTemp = () => {\n        var value = false;\n        if(selectedChurchTemp.church_id === 0){ //church_status로 변경 예정 0 인 경우!!\n            value = window.confirm(\"등록된 적 없는 교회이므로 수락하지 않을 시 이 교회에서 신청한 모든 강의가 취소됩니다. 변경 사항을 거절하시겠습니까?\")\n        }else {\n            value = window.confirm(\"이 교회에 대한 변경 사항을 거절하시겠습니까?\")\n        }\n        if(value) {\n            selectedChurchTemp.token = window.sessionStorage.getItem('token');\n            selectedChurchTemp.manageID = window.sessionStorage.getItem('id');\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'church/temp',\n                    method: 'put',\n                    data: selectedChurchTemp\n                }\n            ).then(function(res) {\n                alert(\"교회에 대한 변경 사항이 삭제되었습니다.\");\n                readChurchTempData();\n                setSelectedChurchTemp(null);\n            }).catch(function(error) {\n                console.log(error)\n            })\n        }\n    }\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = churchTempData.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"churchTemp\";\n        const ws = XLSX.utils.json_to_sheet(churchTempData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const acceptNewChurch = async() => {\n        var params = new URLSearchParams();\n        params.append('userId', window.sessionStorage.getItem('id'));\n        params.append('name', selectedChurchTemp.new_name);\n        params.append('city', selectedChurchTemp.new_city);\n        params.append('district', selectedChurchTemp.new_district);\n        params.append('zip_code', selectedChurchTemp.new_zip_code);\n        params.append('addr1', selectedChurchTemp.new_addr1);\n        params.append('addr2', selectedChurchTemp.new_addr2);\n        params.append('phone', selectedChurchTemp.new_phone);\n        params.append('email', selectedChurchTemp.new_email);\n        params.append('pastor', selectedChurchTemp.new_pastor);\n        params.append('writer_name', selectedChurchTemp.writer_name);\n        params.append('application_form_id', selectedChurchTemp.application_form_id);\n        params.append('id', selectedChurchTemp.id);\n        params.append('church_temp_id', selectedChurchTemp.id);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"새로운 교회를 수락하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/temp',\n            params,\n            ).then(function(res) {\n                alert(\"새로운 교회가 수락되었습니다.\");\n                readChurchTempData();\n                setSelectedChurchTemp(null);\n            });\n        }\n    }\n\n    return (\n    <div>\n        <p className=\"admin-title-header\">교회 관리</p>\n        <div className=\"admin-content-wrapper\">\n            <div className=\"table-wrapper mt0 relative\">\n                <p className=\"table-name mb40\">\n                    교회 정보 변경사항\n                    <GreyButton class=\"right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                </p>\n                <div className=\"mb20\">\n                    <input className=\"p48 mr15\" type=\"text\" placeholder=\"교회명, 주소, 사용자 이메일로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                    <GreyButton name=\"검색\" click={readChurchTempData}/>\n                </div>\n                {selectedChurchTemp !== null ?\n                <div className=\"mb50 church-info-wrapper\">\n                    <div className=\"original original-info\">\n                        <p className=\"original-title\">기존 정보</p>\n                        <div className=\"p25\">\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">교회명</span>\n                                <span>{selectedChurchTemp.name}</span>\n                            </div>\n                            <div className=\"church-padding mb8\">\n                                <span className=\"add-church-title\">주소 입력</span>\n                                <span>{selectedChurchTemp.addr1}</span>\n                            </div>\n                            <div className=\"church-padding mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.addr2}</span>\n                            </div>\n                            <div className=\"church-padding mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.zip_code}</span>\n                            </div>\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">담임 목사</span>\n                                <span>{selectedChurchTemp.pastor}</span>\n                            </div>\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">대표 연락처</span>\n                                <span>{selectedChurchTemp.phone}</span>\n                            </div>\n                            <div className=\"church-padding\">\n                                <span className=\"add-church-title\">대표 이메일</span>\n                                <span>{selectedChurchTemp.email}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"change-info\">\n                        <p className=\"change-title\">변경된 정보</p>\n                        <div className=\"p25\">\n                            <div className=\"church-flex\">\n                            <span className=\"add-church-title\">교회명</span>\n                                <span>{selectedChurchTemp.new_name === null ? \"변경 사항 없음\": selectedChurchTemp.new_name}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">주소 입력</span>\n                                <span>{selectedChurchTemp.new_addr1=== null ? \"변경 사항 없음\": selectedChurchTemp.new_addr1}</span>\n                            </div>\n                            <div className=\"church-flex mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.new_addr2=== null ? \"변경 사항 없음\": selectedChurchTemp.new_addr2}</span>\n                            </div>\n                            <div className=\"church-flex mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <span>{selectedChurchTemp.new_zip_code=== null ? \"변경 사항 없음\": selectedChurchTemp.new_zip_code}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">담임 목사</span>\n                                <span>{selectedChurchTemp.new_pastor === null ? \"변경 사항 없음\": selectedChurchTemp.new_pastor}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">대표 연락처</span>\n                                <span>{selectedChurchTemp.new_phone === null ? \"변경 사항 없음\": selectedChurchTemp.new_phone}</span>\n                            </div>\n                            <div className=\"church-flex\">\n                                <span className=\"add-church-title\">대표 이메일</span>\n                                <span>{selectedChurchTemp.new_email === null ? \"변경 사항 없음\": selectedChurchTemp.new_email}</span>\n                            </div>\n                            {selectedChurchTemp.status === 0 && selectedChurchTemp.church_id === 0 ?\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr10\" name=\"새로운 교회 수락\" click={acceptNewChurch}/>\n                                <GreyButton name=\"변경 내용 거절\" click = {rejectTemp}/>\n                            </div>:\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr10\" name=\"변경 내용 수락\" click = {acceptTemp}/>\n                                <GreyButton name=\"변경 내용 거절\" click = {rejectTemp}/>\n                            </div>\n                            }\n                            \n                            {/* <div>\n                                <span className=\"add-church-title\">교회명</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교단</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">한동대와 연관성</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" type=\"text\" placeholder=\"세부사항 입력\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 규모</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            <div>\n                                <span className=\"add-church-title\">담임 목사 성명</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">실무자 성명</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">실무자 연락처</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">주소 입력</span>\n                                <input className=\"p4\" type=\"text\" placeholder=\"국가\"/>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4 mr15\" placeholder=\"시 * 도\" type=\"text\"/>\n                                <input className=\"p4\" placeholder=\"시 * 군 * 구\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" placeholder=\"우편번호\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\"></span>\n                                <input className=\"p4\" placeholder=\"상세주소 입력\" type=\"text\"/>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            <div>\n                                <span className=\"add-church-title\">교회 연락처</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 이메일</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 홈페이지</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span className=\"add-church-title\">교회 팩스 번호</span>\n                                <input className=\"p4\" type=\"text\"/>\n                            </div>\n                            <div className=\"church-grid\">\n                                <span className=\"add-church-title\">메모 사항</span>\n                                <textarea className=\"h180 p4\"></textarea>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>:\n                null}\n\n                <div className=\"mt50 table-row-church\">\n                    <span className=\"th\">기존 교단</span>\n                    <span className=\"th\">기존 이름</span>\n                    <span className=\"th church-location\">기존 지역</span>\n                    <span className=\"th church-writer\">작성자</span>\n                    <span className=\"th church-date\">작성일자</span>\n                </div>\n\n\n                { churchTempData !== null && churchTempData.length !== 0 ?\n                    currentPosts(churchTempData).map((data, index) =>\n                        <div key={index}  className = {selectedChurchTemp !== null && selectedChurchTemp.id === data.id ? \"click-inst-row table-row-church\" : \"table-row-church\"} onClick = {() => {clickChurch(data)}}>\n                            <span className=\"td admin-subject\">{data.denomination}</span>\n                            <span className=\"td\">{data.new_name !== \"\" ? data.new_name : data.name !== \"\" ? data.name : \"\"}</span>\n                            <span className=\"td\">{data.new_addr1 !== \"\" ? data.new_addr1 : data.addr1 !== \"\" ? data.addr1 : \"\"}</span>\n                            <span className=\"td admin-date\">{data.admin_name}</span>\n                            <span className=\"td admin-loc\">{data.reg_date}</span>\n                        </div>\n                    )\n                    :\n                    <div className=\"no-content\">변경되거나 추가된 교회 정보가 없습니다.</div>\n                }\n            </div>\n            <Pagination\n                activePage={page}\n                itemsCountPerPage={postsPerPage}\n                totalItemsCount={churchTempData !== null ? churchTempData.length : 0}\n                pageRangeDisplayed={5}\n                prevPageText={\"‹\"}\n                nextPageText={\"›\"}\n                onChange={handlePageChange}\n            />\n        </div>\n    </div>\n    );\n}\n\nexport default AdminChurchTemp;\n","import React from \"react\";\n\nfunction WhiteButton(props) {\n    return (\n        <button \n            style={{cursor:\"pointer\" ,background:\"white\", width:'85px', height:\n            '25px', fontSize:'14px', textAlign:'center', borderRadius:'6px', display:'inline-block', border:'1px solid black'}}\n            className={props.class} onClick={props.click}>\n                {props.name}\n        </button>\n    )\n}\nexport default WhiteButton;\n\n","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport Pagination from \"react-js-pagination\";\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_instructor.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport WhiteButton from '../../modules/button/admin_white_btn';\nimport CommonModal from '../../modules/modal/common';\n\nfunction AdminInstructor() {\n    const [keyword, setKeyword] = useState(null);\n    const [ excelModalOpen, setExcelModalOpen ] = useState(false);\n    const [clickedInstructor, setClickedInstructor] = useState(null);\n    const [instructorInfo, setinstructorInfo] = useState(null);\n    const [positionInfo, setpositionInfo] = useState(null);\n    const [isEdit, setisEdit] = useState(false);\n    const [editInfo, seteditInfo] = useState({id:\"\", position_id:\"3\", inst_name:\"\", phone:\"\", image:\"\", intro:\"\", memo:\"\", position_name:\"\", email:\"\"})\n    const [addInfo, setaddInfo] = useState({id:\"\", position_id:\"3\", inst_name:\"\", phone:\"\", image:\"\", intro:\"\", memo:\"\", position_name:\"\", email:\"\"})\n    const [isInsertModalOpen, setisInsertModalOpen] = useState(false)\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n\n    const [isShowDelete, setisShowDelete] = useState(false);\n\n    const [removeProfileImage, setRemoveProfileImage] = useState(false)\n    const [profileImage,setProfileImage] = useState(null)\n    const [profileImageBase64, setProfileImageBase64] = useState(\"\")\n\n    // excel upload\n    const [excelJSONData, setExcelJSONData] = useState(null);\n    const excelFormat = {email:\"000@handong.edu(필수)\", name:\"강사 이름(필수)\", phone:\"010-0000-0000\", position:\"동문/학부모/교수(필수)\", intro:\"강사 소개\", memo:\"강사 약력\"};\n    const [errorCount, seterrorCount] = useState(0);\n\n    useEffect(() => {\n        readInstructor();\n        readPosition();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setPage(1);\n        setClickedInstructor(null);\n    }, [isShowDelete])\n\n    useEffect(() => {\n        if(excelJSONData !== null) {\n            var count = 0;\n            excelJSONData.forEach(data => {\n                if(data.isValid === false)\n                    count++;\n            });\n            seterrorCount(count);\n        }\n    }, [excelJSONData])\n\n    const handleChangeFile = (event, setImage, setImagebase64) => {\n        var reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]);\n            setImage(event.target.files[0]);\n        }\n        reader.onloadend = () => {\n            const base64 = reader.result;\n            if (base64) {\n                setImagebase64(base64.toString());\n            }\n        }\n    }\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    function clickInstructor(inst) {\n        if(!isEdit){\n            if(clickedInstructor === null || clickedInstructor !== inst) {\n                setProfileImage(null);\n                setClickedInstructor(inst);\n                setisEdit(false);\n                seteditInfo(inst);\n            }\n            else {\n                setClickedInstructor(null);\n                seteditInfo(null);\n            }\n        }\n    }\n\n    const readInstructor = async () => {\n        setPage(1);\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'instructor',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    },\n                }\n            );\n            setinstructorInfo(response.data)\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'instructor', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setinstructorInfo(response.data)\n        }\n        setKeyword(null);\n        setClickedInstructor(null);\n    }\n\n    const readPosition = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/position', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setpositionInfo(response.data)\n    }\n\n    const updateInstructor = async () => {\n\n        if(window.confirm(\"프로필 정보를 수정하시겠습니까?\")) {\n            const params = new FormData();\n            const headers = {\n                'Content-type': 'multipart/form-data; charset=UTF-8',\n                'Accept': '*/*'\n            }\n            if(removeProfileImage === true){\n                params.append('image', \"\");\n            }else {\n                params.append('image', editInfo.image);\n            }\n            //var params = new URLSearchParams();\n            params.append('id', editInfo.id);\n            params.append('position_id', editInfo.position_id);\n            params.append('name', editInfo.inst_name);\n            params.append('phone', editInfo.phone);\n            params.append('intro', editInfo.intro);\n            params.append('memo', editInfo.memo);\n            params.append('file', profileImage);\n            params.append('token', window.sessionStorage.getItem('token'));\n            params.append('manageID', window.sessionStorage.getItem('id'));\n\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST +'instructor/update',\n            params,{headers})\n            .then(function(res) {\n                alert(\"프로필 수정이 완료되었습니다.\");\n                readInstructor();\n                setClickedInstructor(null);\n                setisEdit(false);\n            });;\n        }\n\n    }\n    \n    const createInstructor = async () => {\n\n        if(window.confirm(\"강사를 추가하시겠습니까?\")){\n            const params = new FormData();\n                const headers = {\n                    'Content-type': 'multipart/form-data; charset=UTF-8',\n                    'Accept': '*/*'\n                }\n                params.append(' email', addInfo.email);\n                params.append('position_id', addInfo.position_id);\n                params.append('name', addInfo.inst_name);\n                params.append('phone', addInfo.phone);\n                params.append('file', profileImage);\n                params.append('intro', addInfo.intro);\n                params.append('memo', addInfo.memo);\n                params.append('token', window.sessionStorage.getItem('token'));\n                params.append('manageID', window.sessionStorage.getItem('id'));\n                \n            await axios.post(\n                process.env.REACT_APP_RESTAPI_HOST +'instructor',\n            params,{headers}).then(function(res) {\n                alert(res.data);\n                readInstructor();\n                setClickedInstructor(null);\n                setaddInfo({id:\"\", position_id:\"3\", inst_name:\"\", phone:\"\", image:\"\", intro:\"\", memo:\"\", position_name:\"\", email:\"\"});\n                closeModal();\n            })\n        }\n    }\n\n    const deleteInstructor = async () => {\n        if(window.confirm(\"강사를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'instructor/delete',\n                    method: 'put',\n                    data: {\n                        instructor_id : clickedInstructor.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readInstructor();\n                alert(\"강사 정보가 삭제되었습니다.\");\n                setClickedInstructor(null);\n            });\n        }\n    }\n\n    const recoverInstructor = async () => {\n        if(window.confirm(\"강사를 복구하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'instructor/recover',\n                    method: 'put',\n                    data: {\n                        id : clickedInstructor.id,\n                        email: clickedInstructor.email,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readInstructor();\n                alert(res.data);\n                setClickedInstructor(null);\n            });\n        }\n    }\n\n\n    function readExcel(event) {\n        seterrorCount(0);\n        let input = event.target;\n        let reader = new FileReader();\n        reader.onload = function () {\n            let data = reader.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n            workBook.SheetNames.forEach(function (sheetName) {\n                let rows = XLSX.utils.sheet_to_json(workBook.Sheets[sheetName]);\n                var changedData = [];\n                rows.forEach(data => {\n                    var temp = {\n                        email: data.email,\n                        name: data.name,\n                        image: data.image,\n                        phone: data.phone,\n                        position: data.position,\n                        intro: data.intro,\n                        memo: data.memo,\n                        isValid: true\n                    };\n\n                    for (var variable in temp) { \n                        if(temp[variable] === undefined) {\n                            temp[variable] = \"\";\n                        }   \n                    }\n\n                    if(temp['name'] === \"\" || temp['position'] === \"\" || temp['email'] === \"\") {\n                        temp.isValid = false;\n                    } else {\n                        temp.isValid = true;\n                    }\n                    if(!positionInfo.find(position => position.name === temp.position))\n                        temp.isValid = false;\n                    changedData.push(temp);\n                });\n                setExcelJSONData(changedData);\n            })\n        };\n        if(input.files[0] !== undefined) {\n            reader.readAsBinaryString(input.files[0]);\n            openExcelModal();\n            event.target.value = null;\n        }\n    }\n\n    const uploadExcelFile = async() => {\n        var params = new URLSearchParams();\n        params.append('data', JSON.stringify(excelJSONData));\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"강사 정보를 업로드하시겠습니까?\")) {\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/excel',\n            params,\n            ).then(function(res) {\n                alert(\"엑셀 업로드가 완료되었습니다!\");\n                setClickedInstructor(null);\n                setExcelModalOpen(false);\n                readInstructor();\n                setExcelJSONData(null)\n            });\n        }\n    }\n\n\n    const clickEditBtn = async () => {\n        setisEdit(true)\n        seteditInfo(clickedInstructor)\n    }\n\n    const clickCloseBtn = async () => {\n        setClickedInstructor(null);\n    }\n\n    const clickCancelBtn = () => {\n        setisEdit(false);\n        seteditInfo(null);\n        setProfileImage(null);\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n        setaddInfo({\n            ...addInfo,\n            [name]: value\n        });\n    };\n\n    const onEdit = (e) => {\n        const { value, name } = e.target;\n        seteditInfo({\n            ...editInfo,\n            [name]: value\n        });\n    };\n\n    const insertModalClose = () => {\n        setisInsertModalOpen(false)\n    }\n\n    const openModal = () => {\n        setisInsertModalOpen(true)\n    }\n\n    const closeModal = () => {\n        setisInsertModalOpen(false)\n    }\n\n    const openExcelModal = () => {\n        setExcelModalOpen(true);\n    }\n    const closeExcelModal = () => {\n        setExcelModalOpen(false);\n    }\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        if(isShowDelete){ // 삭제된 거 보여줄때\n            currentPosts = instructorInfo.filter(data => data.del_date !== null).slice(indexOfFirst, indexOfLast);\n        } else { // 전체 강의일 때\n            currentPosts = instructorInfo.filter(data => data.del_date === null).slice(indexOfFirst, indexOfLast);\n        }\n        return currentPosts;\n    }\n\n\n    const exportToCSV = () => {\n        var excelInstructor = instructorInfo.map (obj =>{\n            return {email : obj.email,\n                    inst_name: obj.inst_name,\n                    intro: obj.intro,\n                    memo: obj.memo,\n                    phone: obj.phone,\n                    position_name: obj.position_name,\n                    reg_date: obj.reg_date}\n        })\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"instructor\";\n        const ws = XLSX.utils.json_to_sheet(excelInstructor);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const exportExcelForamt = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"instructor_format\";\n        const ws = XLSX.utils.json_to_sheet(excelFormat);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">강사 관리</p>\n            <div id=\"instructor-wrapper\" className=\"admin-content-wrapper\">\n                <div className=\"instructor-title\">\n                    <p className=\"table-name\">\n                        {isShowDelete ? \"삭제된 강사 목록\" : \"강사 목록\"}\n                        <GreyButton class=\"right\" name=\"강사 추가하기\" click={openModal}/>\n                        <GreyButton class=\"no-button right mr10\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                        <GreyButton class=\"no-button right mr10\" name=\"엑셀 업로드 포맷\" click={exportExcelForamt}/>\n                        <input\n                            type='file'\n                            accept='.xlsx'\n                            onChange={readExcel}\n                            id='uploadExcel'\n                            name='uploadExcel'\n                            style={{ display: 'none' }}\n                        />\n                        <label htmlFor='uploadExcel' className=\"no-button grey-btn\">\n                            강사 정보 업로드\n                        </label>\n                        {/* <GreyButton class=\"inst-grey-btn position1 mb8\" name=\"강사 정보 업로드\" click={openExcelModal}/> */}\n                    </p>\n                    <div className=\"mb20\">\n                        <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"강사명, 연락처, 그룹, 강사 소개, 메모, 이메일 주소로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                        <GreyButton class=\"mr15\" name=\"검색\" click={readInstructor}/>\n                        {!isShowDelete ?\n                        <GreyButton class=\"delete-inst\" name=\"삭제된 강사 보기\" click={() => {setisShowDelete(true)}}/>:\n                        <GreyButton name=\"전체 강사 보기\" click={() => {setisShowDelete(false)}}/>}\n                    </div>\n                </div>\n                <div>\n                    <div className=\"table-wrapper mt0\">\n                        <div className=\"table-row-inst\">\n                            <span className=\"th\">그룹</span>\n                            <span className=\"th\">이름</span>\n                        </div>\n                        {instructorInfo !== null && currentPosts(instructorInfo).length > 0 ?\n                        currentPosts(instructorInfo).map((inst, i) =>\n                            <div key={inst.id} className={inst === clickedInstructor ? \"click-inst-row table-row-inst\" : \"table-row-inst\"} onClick = {() => {clickInstructor(inst)}}>\n                                <span className=\"td\">{inst.position_name}</span>\n                                <span className=\"td\">{inst.inst_name}</span>\n                            </div>\n                        )\n                        : <div className=\"no-content\">강사 정보 없음</div>\n                        }\n                        <CommonModal open={ isInsertModalOpen } close={ insertModalClose } func={ createInstructor } header=\"강사 추가하기\" footer=\"추가하기\">\n                            <p className=\"mb13\">프로필</p>\n                            <div className=\"flex-layout mb40\">\n                                <div className=\"flex-item\" style={{textAlign:'center'}}>\n                                    <span className=\"default-img h180\">\n                                        {profileImage !== null?\n                                        <img className=\"profile-img-content\" src={profileImageBase64} alt=\"profile_image\"\n                                        onError={(e) => {\n                                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                        }}/>:null\n                                        }\n                                    </span>\n                                    <label className=\"input-file-button\" htmlFor=\"input-file2\">첨부파일</label>\n                                    <input type=\"file\" id=\"input-file2\" style={{display:\"none\"}}  onChange={(e) => { handleChangeFile(e, setProfileImage, setProfileImageBase64)}}/>\n                                </div>\n                                <div className=\"inst-info-wrapper mb30\">\n                                    <span>이름</span>\n                                    <input name=\"inst_name\" onChange={onAdd}/>\n                                    <select defaultValue={addInfo.position_id} name=\"position_id\" onChange={onAdd}>\n                                        <option value=\"3\">교수</option>\n                                        <option value=\"2\">동문</option>\n                                        <option value=\"1\">학부모</option>\n                                    </select>\n                                    <span>연락처</span>\n                                    <input name=\"phone\" onChange={onAdd}/>\n                                    <span></span>\n                                    <span>이메일</span>\n                                    <input name=\"email\" onChange={onAdd}/>\n                                    <span></span>\n                                </div>\n                            </div>\n\n                            <p className=\"mb10\">인사말 작성란</p>\n                            <textarea name=\"intro\" onChange={onAdd} className=\"h100 mb20 inst-textarea\"></textarea>\n                            <p className=\"mb10\">약력 작성란</p>\n                            <textarea name=\"memo\" onChange={onAdd} className=\"h180 mb20 inst-textarea\"></textarea>\n                            {/* <div className=\"center\">\n                                <WhiteButton class=\"mr20\" name=\"추가하기\" click={createInstructor}/>\n                                <WhiteButton name=\"취소하기\" click={closeModal}/>\n                            </div> */}\n                        </CommonModal>\n                        <CommonModal open={excelModalOpen} close={closeExcelModal} func={uploadExcelFile} header=\"강사 업로드 목록\" footer=\"데이터 저장\">\n                            <p className=\"mb20\">\n                                강사의 이름, 이메일, 그룹은 필수 입력 요소입니다.<br/>\n                                업로드시 intro가 소개를, memo가 약력을 의미합니다. position의 경우 동문, 학부모, 교수 중에서 입력해주세요.<br/>\n                                빨간 색으로 표시된 것은 업로드 할 수 없는 데이터입니다. 빼고 업로드를 진행할까요?<br/>\n                                현재 잘못된 데이터는 {errorCount}개 입니다.\n                            </p>\n                            <div className=\"table-wrapper mt0 relative modal-table\">\n                                <div className=\"table-row-excel-inst\" >\n                                    <span className=\"th\">이메일</span>\n                                    <span className=\"th\">이름</span>\n                                    <span className=\"th\">핸드폰</span>\n                                    <span className=\"th\">그룹</span>\n                                    <span className=\"th\">소개</span>\n                                    <span className=\"th\">약력</span>\n                                </div>\n                                {excelJSONData !== null ?\n                                excelJSONData.map((data, i) =>\n                                <div key={i} className={data.isValid ? \"table-row-excel-inst\" : \"table-row-excel-inst modal-error\"}>\n                                    <span className=\"td\">{data.email}</span>\n                                    <span className=\"td\">{data.name}</span>\n                                    <span className=\"td\">{data.phone}</span>\n                                    <span className=\"td\">{data.position}</span>\n                                    <span className=\"td\">{data.intro}</span>\n                                    <span className=\"td\">{data.memo}</span>\n                                    {/* <span className=\"td\">{data.position}</span> */}\n                                </div>\n                                )\n                                :\n                                <div>엑셀 데이터가 없습니다.</div>\n                                }\n                            </div>\n                            </CommonModal>\n                    </div>\n                    <Pagination\n                        activePage={page}\n                        itemsCountPerPage={postsPerPage}\n                        totalItemsCount={instructorInfo === null ?\n                            0 :\n                            isShowDelete ?\n                            instructorInfo.filter(data => data.del_date !== null).length:\n                            instructorInfo.filter(data => data.del_date === null).length}\n                        pageRangeDisplayed={5}\n                        prevPageText={\"‹\"}\n                        nextPageText={\"›\"}\n                        onChange={handlePageChange}\n                    />\n                </div>\n                <div className=\"relative\">\n                    {clickedInstructor ?\n                    isEdit ?\n                    <div className=\"show-inst-detail relative\">\n                        <p className=\"mb13\">프로필</p>\n                        <div className=\"profile-edit\">\n                            <div className=\"profile-image\">\n                            {removeProfileImage === false && profileImage !== null?\n                                <img className=\"profile-img-content\" src={profileImageBase64} alt=\"profile_image\"\n                                onError={(e) => {\n                                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                }}/>:\n                                removeProfileImage === false && clickedInstructor !== null && clickedInstructor.image !== \"null\" && clickedInstructor.image !== null && clickedInstructor.image !== \"\"?\n                                <img className=\"profile-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+clickedInstructor.image} alt=\"profile_image\"\n                                onError={(e) => {\n                                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                }}/>\n                                :null\n                                }\n                                </div>\n                            <div className=\"profile-info\">\n                                <div>\n                                    <span className=\"mb30\">이름</span>\n                                    <input defaultValue={editInfo.inst_name} className=\"mr15 p48\" name=\"inst_name\" onChange={onEdit}/>\n                                    <select defaultValue={editInfo.position_id} name=\"position_id\" className=\"p48\" onChange={onEdit}>\n                                        <option value=\"3\">교수</option>\n                                        <option value=\"2\">동문</option>\n                                        <option value=\"1\">학부모</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    <span className=\"mb30\">연락처</span>\n                                    <input defaultValue={editInfo.phone} name=\"phone\" onChange={onEdit}/>\n                                </div>\n                                <div><span>이메일</span>{editInfo.email}</div>\n                                {/* <div className =\"checkbox-wrapper\"><span className =\"checkbox-content\">삭제</span><input className=\"checkbox-input\" type=\"checkbox\" onChange={(e) => {setRemoveProfileImage(!removeProfileImage); }}/></div> */}\n                            </div>\n                            {/* <label className={removeProfileImage === false? \"profile-file file-button\": \"profile-file file-button disabled\"} htmlFor='input-file'>첨부파일</label> */}\n                            <div className=\"profile-file\">\n                                <label className={removeProfileImage === false? \"file-button\": \"file-button disabled\"} htmlFor='input-file'>첨부파일</label>\n                                <div className =\"checkbox-wrapper\"><span className =\"checkbox-content\">삭제</span><input className=\"checkbox-input\" type=\"checkbox\" onChange={(e) => {setRemoveProfileImage(!removeProfileImage); }}/></div>\n                            </div>\n                            {removeProfileImage === true?\n                            <input type=\"file\" id=\"input-file\" style={{display:\"none\"}} disabled/>:\n                            <input type=\"file\" id=\"input-file\" style={{display:\"none\"}} onChange={(e) => { handleChangeFile(e, setProfileImage, setProfileImageBase64)}}/>\n                            }\n                        </div>\n\n                        <p className=\"mb10\">인사말 작성란</p>\n\n                        <textarea name=\"intro\" className=\"h100 mb20 inst-textarea\" value={editInfo.intro.replaceAll(\"<br/>\",\"\\n\")} onChange={onEdit}></textarea>\n                        <p className=\"mb10\">약력 작성란</p>\n                        <textarea name=\"memo\" className=\"h180 mb20 inst-textarea\" value={editInfo.memo.replaceAll(\"<br/>\",\"\\n\")} onChange={onEdit}></textarea>\n\n\n                        <div className=\"center\">\n                            <WhiteButton class=\"mr20\" name=\"수정완료\" click={updateInstructor}/>\n                            <WhiteButton name=\"취소하기\" click={clickCancelBtn}/>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"show-inst-detail relative\">\n                        <p className=\"mb13\">프로필</p>\n                        <button className=\"close-btn\" onClick={clickCloseBtn}>X</button>\n                        <div className=\"flex-layout mb40\">\n                            <div className=\"flex-item\" style={{textAlign:'center'}}>\n                                <span className=\"default-img h180\">\n                                    {clickedInstructor.image !== \"null\" && clickedInstructor.image !== null && clickedInstructor.image !== \"\"?\n                                    <img className=\"profile-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+clickedInstructor.image} alt=\"profile_image\"\n                                    onError={(e) => {\n                                e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                }}/>\n                                    :null}\n                                </span>\n                            </div>\n                            <div className=\"inst-info-wrapper mb30\">\n                                <span className=\"bold-font\">이름</span>\n                                <span>{clickedInstructor.inst_name}</span>\n                                <span>{clickedInstructor.position_name}</span>\n                                <span className=\"bold-font\">연락처</span>\n                                <span>{clickedInstructor.phone}</span>\n                                <span></span>\n                                <span className=\"bold-font\">이메일</span>\n                                <span>{clickedInstructor.email}</span>\n                                <span></span>\n                            </div>\n                        </div>\n                        <p className=\"mb10 bold-font\">인사말 작성란</p>\n                        <div className=\"mb25\">{clickedInstructor.intro.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</div>\n                        <p className=\"mb10 bold-font\">약력 작성란</p>\n                        <div className=\"mb25\">{clickedInstructor.memo.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</div>\n                        {isShowDelete ?\n                        <div className=\"button-wrapper\">\n                            <GreyButton class=\"\" name=\"복구하기\" click={recoverInstructor}/>\n                        </div>\n                        :\n                        <div className=\"button-wrapper\">\n                            <GreyButton class=\"mr15\" name=\"수정하기\" click={clickEditBtn}/>\n                            <GreyButton class=\"\" name=\"삭제하기\" click={deleteInstructor}/>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className=\"select-inst\">\n                        강사를 선택하세요.\n                    </div>}\n\n                    {/* // 추가하기\n                    // <div className=\"show-inst-detail relative\">\n                    //     <p className=\"mb13\">프로필</p>\n                    //     <div className=\"flex-layout mb40\">\n                    //         <div className=\"flex-item\" style={{textAlign:'center'}}>\n                    //             <span className=\"default-img h180\"></span>\n                    //             <label className=\"input-file-button\" for=\"input-file\">첨부파일</label>\n                    //             <input type=\"file\" id=\"input-file\" style={{display:\"none\"}}/>\n                    //         </div>\n                    //         <div className=\"inst-info-wrapper mb30\">\n                    //             <span>이름</span>\n                    //             <input/>\n                    //             <select>\n                    //                 <option>교수</option>\n                    //                 <option>동문</option>\n                    //                 <option>학부모</option>\n                    //             </select>\n                    //             <span>연락처</span>\n                    //             <input/>\n                    //             <span></span>\n                    //             <span>이메일</span>\n                    //             <span>123@gmail.com</span>\n                    //             <span></span>\n                    //         </div>\n                    //     </div>\n\n                    //     <p className=\"mb10\">인사말 작성란</p>\n                    //     <textarea className=\"h100 mb20 inst-textarea\"></textarea>\n                    //     <p className=\"mb10\">약력 작성란</p>\n                    //     <textarea className=\"h180 mb20 inst-textarea\"></textarea>\n\n                    //     <div className=\"center\">\n                    //         <WhiteButton class=\"mr20\" name=\"추가하기\"/>\n                    //         <WhiteButton name=\"취소하기\"/>\n                    //     </div>\n                    // </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminInstructor;\n","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_user.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\nfunction AdminUsers() {\n    const [keyword, setKeyword] = useState(null);\n    const [userInfo, setuserInfo] = useState(null)\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n\n    useEffect(() => {\n        readUser();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readUser = async () => {\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'user',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setuserInfo(response.data)\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'user', {\n                    params: {\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setuserInfo(response.data)\n        }\n        setKeyword(null);\n    }\n\n    const statusChange = async(e, user_id) => {\n        const { value,name } = e.target;\n\n        if(window.confirm(\"사용자의 권한을 변경하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'user/status',\n                    method: 'put',\n                    data: {\n                        id : name,\n                        status: value,\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"권한이 변경되었습니다.\")\n            });\n        } else {\n            var box_value = document.getElementById('statusSelect'+user_id).value;\n            if(box_value === 0)\n                document.getElementById('statusSelect'+user_id).value = -1;\n            else\n                document.getElementById('statusSelect'+user_id).value = 0;\n        }\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = userInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"user\";\n        const ws = XLSX.utils.json_to_sheet(userInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n    \n    return (\n        <div>\n            <p className=\"admin-title-header\">사용자 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 relative\">\n                    \n                    <p className=\"table-name mb40\">\n                        사용자 관리\n                        <GreyButton class=\"right\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    </p>\n                    \n                    <div className=\"mb35\">\n                        <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"이메일 주소로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                        <GreyButton name=\"검색\" click={readUser}/>\n                    </div>\n                    \n                    \n                    <div className=\"mt50 table-row-user\">\n                        <span className=\"th user-index\"></span>\n                        {/* <span className=\"th\">이름</span> */}\n                        <span className=\"th\">이메일</span>\n                        <span className=\"th user-date\">가입일</span>\n                        <span className=\"th user-access\">접근제한여부</span>\n                    </div>\n                    {userInfo !== null ?\n                        currentPosts(userInfo).map((user, i) =>\n                            <div key={user.id} className=\"table-row-user\">\n                                <span className=\"td user-index\">{(i+1)+((page-1)*postsPerPage)}</span>\n                                {/* <span className=\"td\">{user.name}</span> */}\n                                <span className=\"td\">{user.email}</span>\n                                <span className=\"td user-date\">{user.reg_date}</span>\n                                {user.status === 2?\n                                <span className=\"td user-access\">\n                                    관리자\n                                </span>\n                                :user.status === 1?\n                                <span className=\"td user-access\">\n                                    강사\n                                </span>\n                                :\n                                <span className=\"td user-access\">\n                                    <select id={\"statusSelect\"+user.id} defaultValue={user.status} name={user.id} onChange={(e)=>{statusChange(e, user.id)}}>\n                                        <option value=\"0\">일반사용자</option>\n                                        <option value=\"-1\">접근제한</option>\n                                    </select>\n                                </span>\n                                }\n                            </div>\n                        )\n                        : <div>사용자 정보 없음</div>\n                    }\n                </div>\n                <Pagination \n                    activePage={page} \n                    itemsCountPerPage={postsPerPage} \n                    totalItemsCount={userInfo !== null ? userInfo.length : 0} \n                    pageRangeDisplayed={5} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} \n                />\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminUsers;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\nimport XLSX from \"xlsx\";\nimport Pagination from \"react-js-pagination\";\nimport FileSaver from \"file-saver\";\n\nimport { } from '@fortawesome/free-regular-svg-icons'\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_feedback.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\nfunction AdminFeedback() {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [feedbackFileData, setFeedbackFileData] = useState(null);\n    const [keyword, setKeyword] = useState(null);\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n\n    useEffect(() => {\n        readApplicationForms();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    const readApplicationForms = async() => {\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/feedback',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setapplicationInfo(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/feedback', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setapplicationInfo(response.data);\n        }\n        setKeyword(null);\n        setSelectedLecture(null);\n    }\n\n    const selectButton = async(data) => {\n        if(data.visit_reg_date !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/'+data.feedback_id, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setFeedbackFileData(response.data);\n        }\n        setSelectedLecture(data);\n    }\n\n    const deleteButton = async(data) => {\n        var value = window.confirm(\"사용자가 작성한 내용입니다. 삭제할까요?\");\n        if(value !== false){\n            // const response = await axios.get(\n            //     process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/'+data.feedback_id\n            // );\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'visiting_log/feedback',\n                    method: 'delete',\n                    data: {\n                        id: selectedLecture.feedback_id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"삭제가 완료되었습니다.\")\n                readApplicationForms();\n                setSelectedLecture(null);\n            })\n        }\n    }\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"feedback\";\n        const ws = XLSX.utils.json_to_sheet(applicationInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">기타</p>\n            <div className=\"admin-content-wrapper\">\n                <p className=\"table-name mb40\">\n                    피드백 관리\n                    <GreyButton class=\"right\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                </p>\n                <div id=\"feedback-flex-wrapper\">\n                    <div id=\"feedback-table\">\n                        <div className=\"feedback-search\">\n                            <input className=\"p48\" type=\"text\" placeholder=\"관리자명, 강사명, 강의명, 교회명, 주소, 사용자 이메일로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                            <GreyButton name=\"검색\" click={readApplicationForms}/>\n                        </div>\n                        <div className=\"table-wrapper\">\n                            <div>\n                                <div className=\"mt50 table-row-feedback\">\n                                    <span className=\"th feedback-category\">NO</span>\n                                    <span className=\"th\">강의명</span>\n                                    <span className=\"th feedback-date\">강연날짜</span>\n                                    <span className=\"th\">작성자</span>\n                                    <span className=\"th feedback-yn\">작성여부</span>\n                                </div>\n                            { applicationInfo !== null && applicationInfo.length > 0 ?\n                                currentPosts(applicationInfo).map((data, index) => \n                                    <div key={index} className={selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-feedback\" : \"table-row-feedback\"} onClick = {() => {selectButton(data)}}>\n                                        <span className=\"td\">{(index+1)+((page-1)*postsPerPage)}</span>\n                                        <span className=\"td\">{data.lecture_name}</span>\n                                        <span className=\"td feedback-date\">{data.date}</span>\n                                        <span className=\"td\">{data.church_name}</span>\n                                        {data.visit_reg_date !== null?\n                                            <span className=\"td\">완료</span>\n                                            : <span className=\"td\">미완료</span>\n                                        }\n                                    </div>\n                                )\n                                :\n                                <div id=\"no-feedback-detail\"><span>피드백이 없습니다.</span></div>\n                            }\n                        </div>\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />  \n\n                    </div>\n                    {    selectedLecture !== null && selectedLecture.visit_reg_date !== null?\n                        <div className=\"show-lecture-detail\">\n                        <div className=\"star-wrapper\">\n                            <span className=\"stars\">강의 만족도</span>\n                            <span>\n                            {\n                                [1, 2, 3, 4, 5].map((data, index) => \n                                    <img key={index} className=\"rating_star\" src={data <= selectedLecture.lecture_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                )\n                            }\n                            </span>\n                            <span className=\"gap\"> </span>\n                            <span className=\"stars\">강사 만족도</span>\n                            <span>\n                            {\n                                [1, 2, 3, 4, 5].map((data, index) => \n                                    <img key={index} className=\"rating_star\" src={data <= selectedLecture.instructor_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" />\n                                )\n                            }\n                            </span>\n                        </div>\n                        <p className=\"feedback-detail-content\">{selectedLecture.visit_log.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</p>\n                        <div className=\"feedback-image-swiper-wrapper\">\n                        <Swiper \n                            spaceBetween={30} \n                            effect={'fade'}\n                            centeredSlides={true} \n                            loop={true} loopFillGroupWithBlank={true}\n                            pagination={{\n                                \"clickable\": true\n                            }} \n                            navigation={true}\n                            className=\"feedback-swiper\">\n                                {feedbackFileData !== null ?\n                            feedbackFileData.map((data, index) => (\n                                <SwiperSlide key = {index}>\n                                    <div className=\"feedback-image-wrapper\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+data} alt=\"uploadFile\"/></div>\n                                </SwiperSlide>\n                            ))\n                            : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                        }\n                            </Swiper></div>\n                        <button className=\"feedback-submit\" onClick={deleteButton}>삭제하기</button>\n                    </div>: selectedLecture !== null ?\n                     <div className=\"show-lecture-detail\">\n                        <h2 className=\"mb20\">{selectedLecture.lecture_name}</h2>\n                        <hr className=\"bold-hr mb25\"/>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">신청자명</span>\n                            <span>{selectedLecture.admin_name}</span>\n                        </div>\n                        <div>\n                            <span className=\"form-title\">연락처</span>\n                            <span>{selectedLecture.admin_phone}</span>\n                        </div>\n                        <hr className=\"m20\"/>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">교회명</span>\n                            <span>{selectedLecture.church_name}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">주소</span>\n                            <span>{selectedLecture.addr1} {selectedLecture.addr2}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">교회 연락처</span>\n                            <span>{selectedLecture.phone}</span>\n                        </div>\n                        <div>\n                            <span className=\"form-title\">교회 이메일</span>\n                            <span>{selectedLecture.email}</span>\n                        </div>\n                        <hr className=\"m20\"/>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">강의 대상</span>\n                            <span>{selectedLecture.attendee_target}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">청강자 수</span>\n                            <span>{selectedLecture.attendee_number}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">원하는 날짜</span>\n                            <span>{selectedLecture.date}</span>\n                        </div>\n                        <div className=\"mb35\">\n                            <span className=\"form-title\">원하는 시간대</span>\n                            {selectedLecture.status === 2 ?\n                            <span>{selectedLecture.contact_start_date} ~ {selectedLecture.contact_end_date}</span>:\n                            <span>{selectedLecture.timezone}</span>}\n                        </div>\n                        <div className=\"mb25 form-grid\">\n                            <span className=\"form-title\">요청사항</span>\n                            <span>{selectedLecture.memo.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}</span>\n                        </div>\n                        <hr className=\"bold-hr mb35\"/>\n                    </div>:<div id=\"no-feedback-detail\"><span>피드백을 선택해주세요.</span></div>\n                    }\n\n                    {/* \n                    피드백 생성\n                    <div id=\"feedback-detail\">                 \n                        <div>\n                            <button className=\"close-btn\" onClick={closeDetail}>X</button>\n                            <div className=\"feedback-stars mb15\">\n                                <span className=\"mr15\">강사 만족도</span>\n                                <span>\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                </span>\n                            </div>\n                            <div className=\"feedback-stars\">\n                                <span className=\"mr15\">강의 만족도</span>\n                                <span>\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\n                                </span>    \n                            </div>\n                            <textarea className=\"star-textarea\" placeholder=\"글 남기기\"></textarea>\n                            \n                            <label className=\"add-picture-label\" htmlFor=\"picture\">\n                                <FontAwesomeIcon className=\"mr10 camera-icon\" icon={faCameraRetro} />\n                                사진 첨부하기\n                            </label>\n                            <input style={{display:'none'}} type=\"file\" name=\"picture\" id=\"picture\"/>\n                            <div className=\"center\">\n                                <WhiteButton name=\"작성하기\"/>\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminFeedback;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport ReactLoading from \"react-loading\";\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_user.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport CommonModal from '../../modules/modal/common';\n\nfunction AdminAdministrator() {\n    const [adminInfo, setAdminInfo] = useState(null);\n    const [keyword, setKeyword] = useState(null);\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [isModalOpen, setisModalOpen] = useState(false);\n\n    const [addEmail, setAddEmail] = useState(null);\n    const [addName, setAddName] = useState(null);\n    const [addPhone, setAddPhone] = useState(null);\n    const [addEmailYN, setAddEmailYN] = useState(0)\n\n    useEffect(() => {\n        readAdministrator();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const readAdministrator = async () => {\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'administrator',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    },\n                }\n            );\n            setAdminInfo(response.data)\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'administrator', {\n                    parmas: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setAdminInfo(response.data)\n        }\n    }\n\n    const editMailYN = async (id, value) => {\n        if(window.confirm(\"이메일 여부를 변경하시겠습니까?\")) {\n            axios(\n                {\n                url: process.env.REACT_APP_RESTAPI_HOST+'administrator/'+id,\n                method: 'put',\n                data: {\n                    editValue : value,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n                }\n            ).then(function(res) {\n                alert(\"변경되었습니다.\");\n                //readAdministrator();\n            })\n        }\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = adminInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"administrator\";\n        const ws = XLSX.utils.json_to_sheet(adminInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const removeAdministrator = async(id, email) => {\n        if(window.confirm(\"삭제하시겠습니까?\")) {\n            axios(\n                {\n                url: process.env.REACT_APP_RESTAPI_HOST+'administrator/del_date/'+id,\n                method: 'put',\n                data: {\n                    email : email,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n                }\n            ).then(function(res) {\n                alert(\"변경되었습니다.\");\n                readAdministrator();\n            })\n        }\n    }\n\n    const openModal = () => {\n        setisModalOpen(true)\n    }\n\n    const closeModal = () => {\n        setisModalOpen(false)\n    }\n\n    const createAdministrator = async() => {\n        var params = new URLSearchParams();\n        params.append('email', addEmail);\n        params.append('name', addName);\n        params.append('phone', addPhone);\n        params.append('email_yn', addEmailYN);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"관리자를 추가하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'administrator', //[loginID]로그인 후 변경\n            params,\n            );\n            alert(response.data);\n            readAdministrator();\n            closeModal();\n        }\n    }\n    return (\n        <div>\n            <p className=\"admin-title-header\">관리자 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 relative\">\n                    \n                    <p className=\"table-name mb40\">\n                        관리자 관리\n                        <GreyButton class=\"right\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    </p>\n                    \n                    <div className=\"mb35\">\n                        <input className=\"mr15 p48 w450\" type=\"text\" placeholder=\"관리자 이름 or 연락처 or 이메일로 키워드 검색\" onChange={(e) => { setKeyword(e.target.value); }}/>\n                        <GreyButton name=\"검색\" click={readAdministrator}/>\n                        <button  className=\"admin-add-button\" onClick={openModal}>관리자 추가</button>\n                    </div>\n                    <CommonModal open={isModalOpen} close={closeModal} func={createAdministrator} header=\"관리자 추가하기\" footer=\"추가하기\">\n                    <div className=\"lecture-info-wrapper\">\n                            <div className=\"p4030\">\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">이메일</span>\n                                    <input className=\"lecture-input mr15\" onChange={(e) => {setAddEmail(e.target.value);}}/>\n                                    <span className=\"lecture-info-title\">이름</span>\n                                    <input className=\"lecture-input mr15\"  onChange={(e) => { setAddName(e.target.value); }}/>\n                                    <span className=\"lecture-info-title\">연락처</span>\n                                    <input className=\"lecture-input mr15\" onChange={(e) => {setAddPhone(e.target.value);}}/>\n                                    <span className=\"lecture-info-title\">이메일 여부</span>\n                                    <select onChange={(e) => { setAddEmailYN(e.target.value); }} defaultValue=\"0\">\n                                        <option value = \"1\">O</option>\n                                        <option value = \"0\">X</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </CommonModal>\n                    \n                    <div className=\"mt50 table-row-admin\">\n                        <span className=\"th user-index\"></span>\n                        <span className=\"th\">이름</span>\n                        <span className=\"th\">이메일</span>\n                        <span className=\"th user-date\">연락처</span>\n                        <span className=\"th user-access\">이메일 여부</span>\n                    </div>\n                    {adminInfo !== null?\n                        currentPosts(adminInfo).map((data, index) => (\n                            <div className=\"table-row-admin\" key={index}>\n                                <span className=\"td user-index\">{(index+1)+((page-1)*postsPerPage)}</span>\n                                <span className=\"td\">{data.name}</span>\n                                <span className=\"td\">{data.email}</span>\n                                <span className=\"td user-date\">{data.phone}</span>\n                                <span className=\"td user-access\">\n                                    <select onChange={(e) => { editMailYN(data.id, e.target.value); }} defaultValue={data.emailYN}>\n                                        <option value = \"1\">O</option>\n                                        <option value = \"0\">X</option>\n                                    </select>\n                                    <button  className=\"admin-remove-button\" onClick={() => {removeAdministrator(data.id, data.email)}}>X</button>\n                                </span>\n                            </div>\n                        ))\n                        : <div className=\"lecture-loading\"><ReactLoading type=\"spin\" color=\"rgb(5 88 156 / 47%)\" className=\"lecture-loading-data\" width=\"50px\"/></div>\n                    }\n                </div>\n                <Pagination \n                    activePage={page} \n                    itemsCountPerPage={postsPerPage} \n                    totalItemsCount={adminInfo !== null ? adminInfo.length : 0} \n                    pageRangeDisplayed={5} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} \n                />\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminAdministrator;","import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport '../../../assets/css/admin.css';\nimport WhiteButton from '../../modules/button/admin_white_btn';\n\nfunction AdminPhrase() {\n    const [settingInfo, setSettingInfo] = useState(null);\n    const [lecturePageTitle, setLecturePageTitle] = useState(null)\n\n    const [applicationPageTitle, setApplicationPageTitle] = useState(null)\n    const [applicationBelowDate, setApplicationBelowDate] = useState(null)\n    const [applicationListPage, setApplicationListPage] = useState(null)\n\n    const [mypageProfile, setMypageProfile] = useState(null)\n    const [mypageLecture, setMypageLecture] = useState(null)\n    const [mypageContact, setMypageContact] = useState(null)\n    const [mypageVisitDiary, setMypageVisitDiary] = useState(null)\n\n    const [agreePI1, setAgreePI1] = useState(null)\n    const [agreePI2, setAgreePI2] = useState(null)\n    const [agreePI3, setAgreePI3] = useState(null)\n\n    useEffect(() => {\n        readSettingInfo();\n    }, []);\n\n    useEffect(() => {\n        if(settingInfo !== null){\n            setLecturePageTitle(settingInfo.find(element => element.key === \"lecture_page_phrase\").value);\n\n            setApplicationPageTitle(settingInfo.find(element => element.key === \"application_page_phrase\").value);\n            setApplicationBelowDate(settingInfo.find(element => element.key === \"application_below_date_phrase\").value);\n            setApplicationListPage(settingInfo.find(element => element.key === \"application_list_phrase\").value);\n\n            setMypageProfile(settingInfo.find(element => element.key === \"mypage_profile_phrase\").value);\n            setMypageLecture(settingInfo.find(element => element.key === \"mypage_lecture_phrase\").value);\n            setMypageContact(settingInfo.find(element => element.key === \"mypage_contact_phrase\").value);\n            setMypageVisitDiary(settingInfo.find(element => element.key === \"mypage_visit_phrase\").value);\n\n            setAgreePI1(settingInfo.find(element => element.key === \"agree_personal_information_1\").value);\n            setAgreePI2(settingInfo.find(element => element.key === \"agree_personal_information_2\").value);\n            setAgreePI3(settingInfo.find(element => element.key === \"agree_personal_information_3\").value);\n        }\n\n    }, [settingInfo]);\n\n    const readSettingInfo = async () =>{\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting/admin', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setSettingInfo(response.data)\n    }\n\n    const change0 = e => {\n        setLecturePageTitle(e.target.value);\n    }\n\n    const change1 = e => {\n        setApplicationPageTitle(e.target.value);\n    }\n    const change2 = e => {\n        setApplicationBelowDate(e.target.value);\n    }\n    const change3 = e => {\n        setApplicationListPage(e.target.value);\n    }\n\n    const change4 = e => {\n        setMypageProfile(e.target.value);\n    }\n    const change5 = e => {\n        setMypageLecture(e.target.value);\n    }\n    const change6 = e => {\n        setMypageContact(e.target.value);\n    }\n    const change7 = e => {\n        setMypageVisitDiary(e.target.value);\n    }\n\n    const change8 = e => {\n        setAgreePI1(e.target.value);\n    }\n    const change9 = e => {\n        setAgreePI2(e.target.value);\n    }\n    const change10 = e => {\n        setAgreePI3(e.target.value);\n    }\n\n    const updatePhrase1 = async () => {\n        var params = new URLSearchParams();\n        \n        params.append('lecture_page_phrase', lecturePageTitle);\n\n        params.append('application_page_phrase', applicationPageTitle);\n        params.append('application_below_date_phrase', applicationBelowDate);\n        params.append('application_list_phrase', applicationListPage);\n\n        params.append('mypage_profile_phrase', mypageProfile);\n        params.append('mypage_lecture_phrase', mypageLecture);\n        params.append('mypage_contact_phrase', mypageContact);\n        params.append('mypage_visit_phrase', mypageVisitDiary);\n\n        params.append('agree_personal_information_1', agreePI1);\n        params.append('agree_personal_information_2', agreePI2);\n        params.append('agree_personal_information_3', agreePI3);\n\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST +'setting/phrase1',\n        params)\n        .then(function(res) {\n            alert(\"문구 수정이 완료되었습니다.\");\n        });\n    }\n\n    const updatePhrase2 = async () => {\n        var params = new URLSearchParams();\n        \n        params.append('lecture_page_phrase', lecturePageTitle);\n\n        params.append('application_page_phrase', applicationPageTitle);\n        params.append('application_below_date_phrase', applicationBelowDate);\n        params.append('application_list_phrase', applicationListPage);\n\n        params.append('mypage_profile_phrase', mypageProfile);\n        params.append('mypage_lecture_phrase', mypageLecture);\n        params.append('mypage_contact_phrase', mypageContact);\n        params.append('mypage_visit_phrase', mypageVisitDiary);\n\n        params.append('agree_personal_information_1', agreePI1);\n        params.append('agree_personal_information_2', agreePI2);\n        params.append('agree_personal_information_3', agreePI3);\n\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n        \n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST +'setting/phrase2',\n        params)\n        .then(function(res) {\n            alert(\"문구 수정이 완료되었습니다.\");\n        });\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">문구 관리</p>\n            <div className=\"phrase-wrapper\">\n                <p className=\"main-title mb40\">\n                    문구 관리\n                </p>\n                <div className=\"main-content-wrapper mb55\">\n                    <p className=\"main-title\">모든 사용자</p>\n                    <div className=\"phrase-sub-wrapper\">\n                        <p>강의 보기 페이지</p>\n                        <input className=\"phrase-input-short\" value={lecturePageTitle || \"\"} onChange={change0}/>\n                    </div>\n                    <hr className=\"phrase-hr\"/>\n                    <p className=\"main-title\">교회, 일반 사용자</p>\n                    <div className=\"phrase-sub-wrapper\">\n                        <p>신청서 작성 페이지</p>\n                        <input className=\"phrase-input-short\" value={applicationPageTitle || \"\"} onChange={change1}/>\n                        <p className=\"phrase-p-short\">신청서 작성 페이지<br/><span>- 원하는 시간대 아래</span></p>\n                        <input className=\"phrase-input-short\" value={applicationBelowDate || \"\"} onChange={change2}/>\n                        <p>신청 현황 페이지</p>\n                        <input className=\"phrase-input-short\" value={applicationListPage || \"\"} onChange={change3}/>\n                    </div>\n                    <hr className=\"phrase-hr\"/>\n                    <p className=\"main-title\">강사 사용자</p>\n                    <div className=\"phrase-sub-wrapper\">\n                        <p>마이페이지 - 내 프로필</p>\n                        <input className=\"phrase-input-short\" value={mypageProfile || \"\"} onChange={change4}/>\n                        <p>마이페이지 - 내 강의함</p>\n                        <input className=\"phrase-input-short\" value={mypageLecture || \"\"} onChange={change5}/>\n                        <p>마이페이지 - 컨택 / 일정</p>\n                        <input className=\"phrase-input-short\" value={mypageContact || \"\"} onChange={change6}/>\n                        <p>마이페이지 - 방문일지</p>\n                        <input className=\"phrase-input-short\" value={mypageVisitDiary || \"\"} onChange={change7}/>\n                    </div>\n                    <div className=\"center\">\n                        <WhiteButton class=\"mr20\" name=\"수정 완료\" click={updatePhrase1}/> \n                    </div>\n                </div>\n                <div className=\"main-content-wrapper mb55\">\n                    <p className=\"main-title\">신청서 개인 정보 동의 글</p>\n                    <div className=\"phrase-sub-wrapper\">\n                        <textarea value={agreePI1 || \"\"} onChange={change8}></textarea>\n                        <textarea value={agreePI2 || \"\"} onChange={change9}></textarea>\n                        <textarea value={agreePI3 || \"\"} onChange={change10}></textarea>\n                    </div>\n                    <div className=\"center\">\n                        <WhiteButton class=\"mr20\" name=\"수정 완료\" click={updatePhrase2}/> \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPhrase;","import React from \"react\";\n\nfunction BlueButton(props) {\n    return (\n        <button \n            style={{background:\"#a7a7c9\", borderRadius:'7px', padding:'5px 14px', border:'none'}}\n            className={props.class} onClick={props.click}>\n                {props.name}\n        </button>\n    )\n}\nexport default BlueButton;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport Postcode from '@actbase/react-daum-postcode';\nimport FileSaver from \"file-saver\";\nimport DataListInput from \"react-datalist-input\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_contact.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport BlueButton from '../../modules/button/admin_blue_btn';\nimport WhiteButton from '../../modules/button/admin_white_btn';\nimport CommonModal from '../../modules/modal/common';\n\nfunction AdminContact() {\n    const [keyword, setKeyword] = useState('');\n    const [contactDate, setContactDate] = useState('');\n    const [contactStartDate, setContactStartDate] = useState('');\n    const [contactEndDate, setContactEndDate] = useState('');\n    const [contactMemo, setContactMemo] = useState('');\n    const [statusSelect, setStatusSelect] = useState(-2);\n\n    const [clickedContact, setClickedContact] = useState(null);\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [isEdit, setisEdit] = useState(false);\n    const [page, setPage] = useState(1);\n    const postsPerPage = 8;\n\n    const [isOpen, setisOpen] = useState(false);\n    const [isAgree, setisAgree] = useState(false);\n    const [addApplicationInfo, setaddApplicationInfo] = useState({zip_code:\"\", admin_email:\"\", city:\"\", district:\"\", addr1:\"\", addr2:\"\", memo:\"\", attendee_number:\"50\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n    const [morning, setmorning] = useState(false);\n    const [afternoon, setafternoon] = useState(false);\n    const [dinner, setdinner] = useState(false);\n    const [lectureDates, setlectureDates] = useState(null);\n    const [newChurchAdd, setnewChurchAdd] = useState(false);\n    const [churchData, setchurchData] = useState([]);\n    const [churchInfo, setchurchInfo] = useState(null);\n    const [selectChurch, setselectChurch] = useState(null);\n    const [isPostCodeOpen, setisPostCodeOpen] = useState(false);\n    const [lectureData, setlectureData] = useState(null);\n    const [selectedLecture, setselectedLecture] = useState(null);\n\n    useEffect(() => {\n        readApplicationForms();\n        readChurchInfo();\n        readLecture();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        readApplicationForms();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusSelect])\n\n\n    useEffect(() => {\n        var churchArray = [];\n        if(churchInfo !== null) {\n            for(var i=0 ; i<churchInfo.length ; i++) {\n                churchArray.push({label:churchInfo[i].name, key:churchInfo[i].id})\n            }\n            setchurchData(churchArray);\n        }\n    }, [churchInfo])\n\n    useEffect(() => {\n        if(selectedLecture !== null)\n            readLectureDate(selectedLecture.id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLecture])\n\n    useEffect(() => {\n        if(selectChurch !== null) {\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                church: selectChurch.name,\n                addr1: selectChurch.addr1,\n                addr2: selectChurch.addr2,\n                zip_code: selectChurch.zip_code,\n                city: selectChurch.city,\n                district: selectChurch.district,\n                pastor: selectChurch.pastor,\n                phone: selectChurch.phone,\n                email: selectChurch.email\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectChurch])\n\n    const readLecture = async () => {\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/subject', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setlectureData(response.data);\n        setselectedLecture(response.data[0]);\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            lecture_id: response.data[0].id\n        });\n    }\n\n    const readChurchInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'church', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setchurchInfo(response.data);\n    }\n\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readApplicationForms = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application',\n            {\n                params: {\n                    keyword: keyword,\n                    statusSelect: statusSelect,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setapplicationInfo(response.data);\n        setKeyword('');\n    }\n\n    const cancelContact = async() => {\n        if(window.confirm(\"컨택을 취소하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: clickedContact.id,\n                        status: -1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setClickedContact({\n                    ...clickedContact,\n                    status: -1\n                })\n                alert(\"컨택이 취소되었습니다.\")\n            })\n        }\n    }\n\n    const contactStart = async() => {\n        if(window.confirm(\"신청자와 컨택을 시작하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: clickedContact.id,\n                        status: 1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setClickedContact({\n                    ...clickedContact,\n                    status: 1\n                })\n            })\n        }\n    }\n\n    const finishContact = async() => {\n        if(window.confirm(\"날짜를 확정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/complete',\n                    method: 'put',\n                    data: {\n                        selectDate: contactDate,\n                        contact_start_date: contactStartDate,\n                        contact_end_date: contactEndDate,\n                        application_form_id: clickedContact.id,\n                        lecture_id: clickedContact.lecture_id,\n                        contact_memo: contactMemo,\n                        status:2,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                alert(\"컨택이 완료되었습니다.\")\n                setClickedContact(null);\n                setisEdit(false);\n            })\n        }\n    }\n\n    function clickContact(application) {\n        setisEdit(false)\n        if(clickedContact === null || application !== clickedContact) {\n            setClickedContact(application);\n            if(application.date === null)   setContactDate(\"\")\n            else setContactDate(application.date)\n            if(application.contact_start_date === null)   setContactStartDate(\"\")\n            else setContactStartDate(application.contact_start_date)\n            if(application.contact_end_date === null)   setContactEndDate(\"\")\n            else setContactEndDate(application.contact_end_date)\n            if(application.memo === null)   setContactMemo(\"\")\n            else setContactMemo(application.memo)\n        }\n        else\n            setClickedContact(null);\n    }\n\n    const clickEditBtn = () => {\n        setisEdit(true)\n    }\n\n    const clickBackBtn = () => {\n        setisEdit(false);\n        if(clickedContact.date === null)   setContactDate(\"\")\n        else setContactDate(clickedContact.date)\n        if(clickedContact.contact_start_date === null)   setContactStartDate(\"\")\n        else setContactStartDate(clickedContact.contact_start_date)\n        if(clickedContact.contact_end_date === null)   setContactEndDate(\"\")\n        else setContactEndDate(clickedContact.contact_end_date)\n        if(clickedContact.memo === null)   setContactMemo(\"\")\n        else setContactMemo(clickedContact.memo)\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"contact\";\n        const ws = XLSX.utils.json_to_sheet(applicationInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const closeModal = () => {\n        setaddApplicationInfo({zip_code:\"\", city:\"\", district:\"\", admin_email:\"\", addr1:\"\", addr2:\"\", memo:\"\", phone:\"\", email:\"\", pastor:\"\", lecture_id: lectureData[0].id, lecture_date_id:0, attendee_number:\"50\", attendee_target:\"유아\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n        setmorning(false);\n        setafternoon(false);\n        setdinner(false);\n        setselectedLecture(lectureData[0]);\n        setselectChurch(null);\n        setnewChurchAdd(false);\n        setisOpen(false);\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            [name]: value\n        });\n    };\n\n    const setMorning = () => {\n        if(morning)\n            setmorning(false)\n        else\n            setmorning(true)\n    }\n    const setAfternoon = () => {\n        if(afternoon)\n            setafternoon(false)\n        else\n            setafternoon(true)\n    }\n    const setDinner = () => {\n        if(dinner)\n            setdinner(false)\n        else\n            setdinner(true)\n    }\n\n    const setIsAgree = () => {\n        if(isAgree)\n            setisAgree(false)\n        else\n            setisAgree(true)\n    }\n\n    const readLectureDate = async (lecture_id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate', {\n                params: {\n                    lecture_id: lecture_id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        if(response.data !== null && response.data.length > 0) \n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            lecture_id: lecture_id,\n            lecture_date_id: response.data[0].id\n        });\n        else\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            lecture_id: lecture_id,\n            lecture_date_id: 0\n        });\n        setlectureDates(response.data);\n    }\n\n    const handleChange = (selectedItem) => {\n        setselectChurch(null);\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            church_id: selectedItem.key,\n        });\n        setselectChurch(churchInfo.find(element => element.id === selectedItem.key))\n    };\n\n    const clickAddBtn = () => {\n        setselectChurch(null);\n\n        if(newChurchAdd) {\n            setnewChurchAdd(false)\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                zip_code:\"\", \n                addr1:\"\", \n                addr2:\"\",\n                city:\"\", \n                district:\"\",\n                pastor:\"\",\n                email:\"\",\n                phone: \"\"\n            })\n        }\n        else {\n            setnewChurchAdd(true);\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                zip_code:\"\", \n                addr1:\"\", \n                addr2:\"\", \n                city:\"\", \n                district:\"\",\n                pastor:\"\",\n                email:\"\",\n                phone: \"\",\n                church_id: 0\n            })\n        }\n    }\n\n    const selectPostCode = (data) => {\n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n        setisPostCodeOpen(false);\n    }\n\n    const lectureChange = (e) => {\n        \n        // var data = lectureData.find(element => element.id == e.target.value);\n        var data = null;\n        for(var i=0 ; i<lectureData.length ; i++) {\n            if(lectureData[i].id == e.target.value) {\n                console.log(\"걸림\");\n                data = lectureData[i];\n            }\n        }\n        console.log(e.target.value, lectureData);\n        console.log(\"data!!!!!!!\",data);\n        if(data.date === \"\") {\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                lecture_id: e.target.value,\n                lecture_date_id: 0\n            })\n        } else {\n            setaddApplicationInfo({\n                ...addApplicationInfo,\n                lecture_id: e.target.value\n            })\n        }\n        setselectedLecture(data);\n    }\n\n    const addApplication = async () => {\n\n        var timezone = \"\";\n        if(morning)\n            timezone += \"오전 \";\n        if(afternoon)\n            timezone += \"오후 \";\n        if(dinner)\n            timezone += \"저녁 \";\n\n        if(timezone === \"\" || addApplicationInfo.addr1 === \"\" || addApplicationInfo.addr2 === \"\" || addApplicationInfo.admin_name === \"\" || addApplicationInfo.admin_phone === \"\" || addApplicationInfo.attendee_number === \"\" || addApplicationInfo.attendee_target === \"\" || addApplicationInfo.church_id === \"\" || addApplicationInfo.lecture_date_id === \"\" || addApplicationInfo.zip_code === \"\" || addApplicationInfo.lecture_id === \"\") {\n            alert(\"신청서 정보를 모두 입력해주세요!\")\n            return;\n        }\n\n        if(newChurchAdd) {\n            if(addApplicationInfo.pastor === \"\" || addApplicationInfo.email === \"\" || addApplicationInfo.phone === \"\") {\n                alert(\"새로운 교회와 관련된 정보를 모두 입력해주세요!\");\n                return;\n            }\n        }\n\n        var attendee_target = [];\n        if(addApplicationInfo.attendeeTarget[0]===1) attendee_target.push(\"유아\");\n        if(addApplicationInfo.attendeeTarget[1]===1) attendee_target.push(\"초등학생\");\n        if(addApplicationInfo.attendeeTarget[2]===1) attendee_target.push(\"중학생\");\n        if(addApplicationInfo.attendeeTarget[3]===1) attendee_target.push(\"고등학생\");\n        if(addApplicationInfo.attendeeTarget[4]===1) attendee_target.push(\"청년\");\n        if(addApplicationInfo.attendeeTarget[5]===1) attendee_target.push(\"중년\");\n        if(addApplicationInfo.attendeeTarget[6]===1) attendee_target.push(\"장년\");\n        if(addApplicationInfo.attendeeTarget[7]===1) attendee_target.push(\"노년\");\n        attendee_target = attendee_target.join(',');\n\n        var date = \"추후협의\";\n        if(addApplicationInfo.lecture_date_id !== 0)\n            date = lectureDates.find(element => parseInt(element.id) === parseInt(applicationInfo.lecture_date_id)).date;\n        \n        if(!isAgree) {\n            alert(\"개인정보 활용에 동의해주세요!\");\n            return ;\n        }\n        console.log(selectedLecture);\n        console.log(addApplicationInfo);\n        console.log(lectureDates);\n\n        var params = new URLSearchParams();\n        params.append('user_id', window.sessionStorage.getItem('id'));\n        params.append('church_id', addApplicationInfo.church_id);\n        params.append('zip_code', addApplicationInfo.zip_code);\n        params.append('addr1', addApplicationInfo.addr1);\n        params.append('addr2', addApplicationInfo.addr2);\n        params.append('pastor', addApplicationInfo.pastor);\n        params.append('email', addApplicationInfo.email);\n        params.append('phone', addApplicationInfo.phone);\n        params.append('lecture_id', addApplicationInfo.lecture_id);\n        params.append('lecture_date_id', addApplicationInfo.lecture_date_id);\n        params.append('memo', addApplicationInfo.memo);\n        params.append('admin_phone', addApplicationInfo.admin_phone);\n        params.append('admin_name', addApplicationInfo.admin_name);\n        params.append('admin_email', addApplicationInfo.admin_email);\n        params.append('attendee_number', addApplicationInfo.attendee_number);\n        params.append('attendee_target', attendee_target);\n        params.append('timezone', timezone);\n        params.append('inst_email', addApplicationInfo.email);\n        params.append('date', date);\n        params.append('lecture_name', selectedLecture.name);\n        params.append('church_name', addApplicationInfo.church);\n        params.append('link', process.env.REACT_APP_HOMEPAGE);\n        params.append('church', addApplicationInfo.church);\n        params.append('city', addApplicationInfo.city);\n        params.append('district', addApplicationInfo.district);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"강의를 신청하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'application',\n            params,\n            ).then(function(res) {\n                alert(\"신청서가 등록되었습니다.\");\n                readApplicationForms();\n                setisOpen(false);\n                setisAgree(false);\n                setmorning(false);\n                setafternoon(false);\n                setdinner(false);\n                setnewChurchAdd(false);\n                setselectChurch(null);\n                setaddApplicationInfo({zip_code:\"\", city:\"\", district:\"\", admin_email:\"\", addr1:\"\", addr2:\"\", memo:\"\", phone:\"\", email:\"\", pastor:\"\", lecture_id: lectureData[0].id, lecture_date_id:0, attendee_number:\"50\", attendee_target:\"유아\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n                setselectedLecture(lectureData[0]);  \n            });\n        }\n    }\n\n    const clickTarget = (index) => {\n        var tempTarget = addApplicationInfo.attendeeTarget;\n        if(tempTarget[index] === 0){\n            tempTarget[index] = 1;\n        } else {\n            tempTarget[index] = 0;\n        }            \n        setaddApplicationInfo({\n            ...addApplicationInfo,\n            attendeeTarget: tempTarget\n        })\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">컨택 내역 목록</p>\n            <div id=\"contact-wrapper\" className=\"admin-content-wrapper\">\n                <div>\n                    <div className=\"table-wrapper mt0\">\n                        <p className=\"adcontact-table-name\">\n                            컨택 내역 목록\n                            <GreyButton class=\"right\" name=\"컨택 추가하기\" click={() => {setisOpen(true)}}/>\n                            <GreyButton class=\"right mr15\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                        </p>\n                        <CommonModal open={isOpen} close={closeModal} func={addApplication} header=\"컨택 내역 추가하기\" footer=\"추가하기\"> \n                            <div>\n                                <div className=\"form-wrapper\">\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">신청할 강의 선택</span>\n                                        <select defaultValue={addApplicationInfo.lecture_id} name=\"lecture_id\" className=\"p48\" onChange={lectureChange}>\n                                            {lectureData !== null &&\n                                            lectureData.map((lectureData, index) =>\n                                                <option key={lectureData.id} value={lectureData.id}>{lectureData.name}</option>\n                                            )\n                                            }\n                                        </select>\n                                    </div>\n                                    {/* <div className=\"mb15\">\n                                        <span className=\"form-title\">강의명</span>\n                                        <span>{selectedLecture !== null ? selectedLecture.name : \"강의를 선택해주세요\"}</span>\n                                    </div> */}\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">강사명</span>\n                                        <span>{ selectedLecture !== null ? selectedLecture.instructor_name : \"강의를 선택해주세요\"}</span>\n                                    </div>\n                                    <hr className=\"mb30\"/>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">교회명</span>\n                                        {newChurchAdd ?\n                                        <input className=\"form-input\" type=\"text\" placeholder=\"추가할 교회명\" name=\"church\" onChange={onAdd}/>\n                                        :\n                                        churchData !== null ?\n                                        <DataListInput\n                                        style={{width:\"100px\"}}\n                                        placeholder=\"교회를 선택하세요.\"\n                                        items={churchData}\n                                        onSelect={handleChange}\n                                        />\n                                        :\n                                        null\n                                        }\n                                        {newChurchAdd ?\n                                        <BlueButton class=\"blue-btn\" name=\"교회 목록 보기\" click={clickAddBtn}/>\n                                        :\n                                        <BlueButton class=\"blue-btn\" name=\"새로운 교회 추가\" click={clickAddBtn}/>\n                                        }\n\n                                    </div>\n                                    {/* <CommonModal open={isModal} close={closeModal} header=\"주소 찾기\" footer=\"닫기\"> \n                                        <Postcode\n                                            style={{ width: 320, height: 320 }}\n                                            jsOptions={{ animated: true, hideMapBtn: true }}\n                                            onSelected={data => {\n                                                selectPostCode(data);\n                                                setModal(false);\n                                            }}\n                                        />\n                                    </CommonModal> */}\n\n                                    \n                                    <div className=\"mb15\" style={{position: 'relative'}}>\n                                        <span className=\"form-title\">주소 검색</span>\n                                        <input readOnly placeholder=\"우편번호\" className=\"form-addr mr10\" value={addApplicationInfo.zip_code} name=\"zip_code\" onChange={onAdd}/> \n                                        {isPostCodeOpen ? \n                                        <BlueButton click={() => setisPostCodeOpen(false)} name=\"주소창닫기\" class=\"blue-btn\"/>:\n                                        <BlueButton click={() => setisPostCodeOpen(true)} name=\"주소찾기\" class=\"blue-btn\"/>\n                                        }\n                                        {isPostCodeOpen &&\n                                        <Postcode\n                                            style={{ width: 320, height: 320, position:'absolute', left:'170px' }}\n                                            jsOptions={{ animated: true }}\n                                            onSelected={data => selectPostCode(data)}\n                                        />\n                                        }\n                                    </div>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\"></span>\n                                        <input readOnly placeholder=\"주소\" className=\"form-addr\" value={addApplicationInfo.addr1} name=\"addr1\" onChange={onAdd}/>\n                                    </div>\n                                    <div className=\"mb35\">\n                                        <span className=\"form-title\"></span>\n                                        <input className=\"form-addr\" name=\"addr2\" onChange={onAdd} placeholder=\"상세 주소 입력\" value={addApplicationInfo.addr2}/>\n                                    </div>\n                                    {newChurchAdd &&\n                                    <span>\n                                        <div className=\"mb15\">\n                                            <span className=\"form-title\">담임 목사</span>\n                                            <input className=\"form-input\" name=\"pastor\" placeholder=\"담임 목사 이름\" value={addApplicationInfo.pastor} onChange={onAdd}/>\n                                        </div>\n                                        <div className=\"mb15\">\n                                            <span className=\"form-title\">대표 연락처</span>\n                                            <input className=\"form-input\" name=\"phone\" placeholder=\"교회 대표 연락처\" value={addApplicationInfo.phone} onChange={onAdd}/>\n                                        </div>\n                                        <div className=\"mb30\">\n                                            <span className=\"form-title\">대표 이메일</span>\n                                            <input className=\"form-input\" name=\"email\" placeholder=\"교회 대표 이메일\" value={addApplicationInfo.email} onChange={onAdd}/>\n                                        </div>\n                                    </span>\n                                    }\n                                    <hr className=\"m30 mb30\"/>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">담당자 이름</span>\n                                        <input className=\"form-input\" name=\"admin_name\" onChange={onAdd}/>\n                                    </div>\n                                    <div className=\"mb15\">\n                                        <span className=\"form-title\">담당자 휴대전화</span>\n                                        <input className=\"form-input\" name=\"admin_phone\" onChange={onAdd}/>\n                                    </div>\n                                    <div className=\"mb30\">\n                                        <span className=\"form-title\">담당자 이메일(선택)</span>\n                                        <input className=\"form-input\" name=\"admin_email\" onChange={onAdd}/>\n                                    </div>\n                                    {/* <div className=\"mb30\">\n                                        <span className=\"form-title\">담당자 이메일</span>\n                                        <input className=\"form-input\" name=\"email\" onChange={onAdd}/>\n                                    </div> */}\n                                    <hr className=\"m30\"/>\n                                    <div className=\"select-wrapper\">\n                                        <div style={{gridColumn:'1 / span 2'}}>\n                                            <span className=\"form-title\">강의 대상</span>\n                                            {addApplicationInfo !== null &&\n                                                <span>\n                                                    <span className={addApplicationInfo.attendeeTarget[0]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(0)}>유아</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[1]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(1)}>초등학생</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[2]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(2)}>중학생</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[3]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(3)}>고등학생</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[4]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(4)}>청년</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[5]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(5)}>중년</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[6]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(6)}>장년</span>\n                                                    <span className={addApplicationInfo.attendeeTarget[7]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(7)}>노년</span>\n                                                </span>\n                                            }\n                                        </div>\n                                        <div>\n                                            <span className=\"form-title\">청강자 수</span>\n                                            <select className=\"form-input\" name=\"attendee_number\" defaultValue={addApplicationInfo.attendee_number} onChange={onAdd}>\n                                                <option>50</option>\n                                                <option>100</option>\n                                                <option>200</option>\n                                                <option>500</option>\n                                                <option>1000</option>\n                                                <option>1000</option>\n                                            </select>\n                                        </div>\n                                        <div>\n                                            <span className=\"form-title\">강의 희망날짜</span>\n                                            <select className=\"form-input\" name=\"lecture_date_id\" defaultValue={addApplicationInfo.lecture_date_id} onChange={onAdd}>\n                                            {lectureDates !== null && lectureDates.length > 0 ?\n                                            lectureDates.map((date, i) => <option key={i} value={date.id}>{date.date}</option>)\n                                            : <option value=\"0\">추후 협의</option>\n                                            }\n                                            </select>\n                                        </div>\n                                        <div style={{display:\"flex\"}}>\n                                            <span className=\"form-title\">원하는 시간대</span>\n                                            <WhiteButton class={morning ? \"application-time application-time-select\" : \"application-time\"} name=\"오전\" click={setMorning}/>\n                                            <WhiteButton class={afternoon ? \"application-time application-time-select\" : \"application-time\"} name=\"오후\" click={setAfternoon}/>\n                                            <WhiteButton class={dinner ? \"application-time application-time-select\" : \"application-time\"} name=\"저녁\" click={setDinner}/>\n                                        </div>\n\n                                    </div>\n\n                                    <textarea className=\"form-textarea\" placeholder=\"요청 사항 / 컨택 포인트 작성란\" name=\"memo\" onChange={onAdd}></textarea>\n\n                                    <ul className=\"agree-ul mb40\">\n                                        <li className=\"mb10\">이단 및 사이비 단체는 작성글을 게시할 수 없으며 적발 시 예배 및 설교 방해죄 (형법 제 158조), 퇴거불응죄(형법 제 319조 2항), 업무방해죄(형법 제314조), 개인정보보호법 위반 등으로 처벌받을 수 있습니다.</li>\n                                        <li>개인 정보 수집 동의 - 이용자가 제공한 모든 정보는 다음의 목적을 위해 활용하며, 하기 목적 이외의 용도로는 사용하지 않습니다.</li>\n                                    </ul>\n                                    <div className=\"mb40\">\n                                        <input className=\"agree-check mr10\" type=\"checkbox\" onClick={setIsAgree}/>\n                                        <span className=\"fs14\">개인정보 수집 및 이용에 대해 동의합니다.</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </CommonModal>\n\n                        <div className=\"mb20\">\n                            <select defaultValue = {statusSelect} className=\"inst-group mr15 p48\" onChange={(e) => {setStatusSelect(e.target.value)}}>\n                                <option value=\"-2\">전체</option>\n                                <option value=\"0\">신규(미확인)</option>\n                                <option value=\"1\">진행중</option>\n                                <option value=\"2\">일정확정됨</option>\n                                <option value=\"-1\">취소됨</option>\n                            </select>\n                            <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"강사명, 강의명, 교회명, 담당자명, 담당자 핸드폰 번호로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                            <GreyButton name=\"검색\" click={readApplicationForms}/>\n                        </div>\n                        <div className=\"table-row-adcontact\">\n                            <span className=\"th\">강사명</span>\n                            <span className=\"th\">강의명</span>\n                            <span className=\"th\">교회명</span>\n                            <span className=\"th\">희망 날짜</span>\n                            <span className=\"th\">컨택 상황</span>\n                        </div>\n                        { applicationInfo !== null && applicationInfo.length > 0 ?\n                            currentPosts(applicationInfo).map((data, index) => \n                                <div key={data.id} className={clickedContact !== null && clickedContact.id === data.id ? \"click-inst-row table-row-adcontact\" : \"table-row-adcontact\"} onClick = {() => {clickContact(data)}}>\n                                    <span className=\"td\">{data.inst_name}</span>\n                                    <span className=\"td\">{data.lecture_name}</span>\n                                    <span className=\"td\">{data.church_name}</span>\n                                    <span className=\"td\">{data.date}({data.timezone})</span>\n                                    {data.status === 0 ?\n                                        <span className=\"td\"><span className=\"contact-ing\" style={{color:'#ff0000b8', border:'1px solid #ff0000b8'}}>신규(미확인)</span></span>\n                                        : data.status === 1 ?\n                                        <span className=\"td\"><span className=\"contact-ing\">진행중</span></span>\n                                        : data.isVisiting > 0 ?\n                                        <div className=\"td contact-ok\">강의완료</div>\n                                        : data.status === 2 ?\n                                        <div className=\"td contact-ok\">일정확정됨</div>:\n                                        <div className=\"td contact-cancel\">취소됨</div>\n                                    }\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">신청서가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />\n                </div>\n                <div className=\"relative\">\n                {clickedContact ? \n                isEdit ?\n                <div\n                    className=\"show-lecture-detail\"\n                >\n                    <h2 className=\"mb20\">{clickedContact.lecture_name}</h2>\n                    <hr className=\"bold-hr mb25\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">신청자명</span>\n                        <span>{clickedContact.admin_name}</span>\n                    </div>\n                    <div>\n                        <span className=\"form-title\">연락처</span>\n                        <span>{clickedContact.admin_phone}</span>\n                    </div>\n                    <hr className=\"m20\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회명</span>\n                        <span>{clickedContact.church_name}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">주소</span>\n                        <span>{clickedContact.addr1} {clickedContact.addr2}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회 연락처</span>\n                        <span>{clickedContact.phone}</span>\n                    </div>\n                    <div>\n                        <span className=\"form-title\">교회 이메일</span>\n                        <span>{clickedContact.email}</span>\n                    </div>\n                    <hr className=\"m20\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">강의 대상</span>\n                        <span>{clickedContact.attendee_target}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">청강자 수</span>\n                        <span>{clickedContact.attendee_number}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">원하는 날짜</span>\n                        <input className=\"form-input\" type=\"date\" value={contactDate} onChange={(e)=>setContactDate(e.target.value)}/>\n                    </div>\n                    <div className=\"mb35\">\n                        <span className=\"form-title\">원하는 시간대</span>\n                        <input className=\"form-input\" type=\"time\" value={contactStartDate} onChange={(e)=>setContactStartDate(e.target.value)}/> ~ <input className=\"form-input\" type=\"time\" value={contactEndDate} onChange={(e)=>setContactEndDate(e.target.value)}/>\n                    </div>\n                    <div className=\"mb25 form-grid\">\n                        <span className=\"form-title\">요청사항</span>\n                        <textarea className=\"form-textarea\" type=\"date\" value={contactMemo.replaceAll(\"<br/>\",\"\\n\")} onChange={(e)=>setContactMemo(e.target.value)}/>\n                    </div>\n                    <hr className=\"bold-hr mb35\"/>\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn mr15\" onClick={finishContact}>날짜 수정 완료</button>\n                        <button className=\"form-btn\" onClick={clickBackBtn}>뒤로가기</button>\n                    </div>\n                </div>\n                :\n                <div\n                    className=\"show-lecture-detail\"\n                >\n                    <h2 className=\"mb20\">{clickedContact.lecture_name}</h2>\n                    <hr className=\"bold-hr mb25\"/>\n                    {clickedContact.status !== 0 && \n                    <span>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">신청자명</span>\n                            <span>{clickedContact.admin_name}</span>\n                        </div>\n                        <div>\n                            <span className=\"form-title\">연락처</span>\n                            <span>{clickedContact.admin_phone}</span>\n                        </div>\n                        <hr className=\"m20\"/>\n                    </span>\n                    }\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회명</span>\n                        <span>{clickedContact.church_name}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">주소</span>\n                        <span>{clickedContact.addr1} {clickedContact.addr2}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">교회 연락처</span>\n                        <span>{clickedContact.phone}</span>\n                    </div>\n                    <div>\n                        <span className=\"form-title\">교회 이메일</span>\n                        <span>{clickedContact.email}</span>\n                    </div>\n                    <hr className=\"m20\"/>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">강의 대상</span>\n                        <span>{clickedContact.attendee_target}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">청강자 수</span>\n                        <span>{clickedContact.attendee_number}</span>\n                    </div>\n                    <div className=\"mb8\">\n                        <span className=\"form-title\">원하는 날짜</span>\n                        <span>{clickedContact.date}</span>\n                    </div>\n                    <div className=\"mb35\">\n                        <span className=\"form-title\">원하는 시간대</span>\n                        {clickedContact.status === 2 ?\n                        <span>{clickedContact.contact_start_date} ~ {clickedContact.contact_end_date}</span>:\n                        <span>{clickedContact.timezone}</span>}\n                    </div>\n                    <div className=\"mb25 form-grid\">\n                        <span className=\"form-title\">요청사항</span>\n                        <span>{clickedContact.memo.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}</span>\n                    </div>\n                    <hr className=\"bold-hr mb35\"/>\n                    {clickedContact.status === 0 ?\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn mr15\" onClick={contactStart}>연락처 확인하기</button>\n                        {/* <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button> */}\n                    </div>\n                    : clickedContact.status === 1 ?\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn mr15\" onClick={clickEditBtn}>날짜 확정하기</button>\n                        <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                    </div>\n                    : clickedContact.status === 2 ?\n                    <div className=\"form-btn-wrapper\">\n                        <button className=\"form-btn\" onClick={clickEditBtn}>날짜 수정하기</button>\n                        <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                    </div>\n                    :null\n                    }\n                </div>\n                :\n                <div className=\"select-inst\">\n                    컨택 내역을 선택하세요.\n                </div>\n                }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminContact;","import React, { useCallback, useRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport TUICalendar from \"@toast-ui/react-calendar\";\n\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport '../../../assets/css/calendar.css';\nimport \"tui-time-picker/dist/tui-time-picker.css\";\nimport WhiteButton from '../../modules/button/white_button';\n\n// const start = new Date();\n// const end = new Date(new Date().setMinutes(start.getMinutes() + 30));\nconst calendarColor = [\"#ef6f87\",\"#e49d5a\", \"#e4ce5a\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n// const calendarInstructor = [\"#ef6f87\",\"#e49d5a\", \"#2196f3\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n\n\nfunction CommonCalendar(props) {\n    const cal = useRef(null);\n    const [schedules, setschedules] = useState([])\n    const [calendars, setcalendars] = useState([])\n    const [year, setyear] = useState(\"\")\n    const [month, setmonth] = useState(\"\")\n\n    useEffect(() => {\n        if(props.calendarData !== null) {\n            const data = props.calendarData;\n            \n            // var index = 0;\n            var tempSchedule = [];\n            \n            if(props.path !== null && props.path ===\"/admin/academy_date\") {\n                for(var i=0 ; i<data.length ; i++) {\n                    tempSchedule.push({\n                        calendarId: data[i].category_id,\n                        category: \"time\",\n                        isAllDay: true,\n                        isVisible: true,\n                        title: data[i].name,\n                        id: data[i].id,\n                        start: data[i].date,\n                        end: data[i].date\n                    })\n                }\n\n                setschedules(tempSchedule);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.calendarData])\n\n    useEffect(() => {\n        if(props.categoryData !== null) {\n            var data = props.categoryData;\n            var tempCalendar = [];\n            var index = 0;\n\n            for(var i=0 ; i<data.length ; i++) {\n                tempCalendar.push({\n                    id: data[i].id,\n                    name: data[i].name,\n                    color: calendarColor[index],\n                    bgColor: calendarColor[index]+\"40\",\n                    dragBgColor: calendarColor[index]+\"40\",\n                    borderColor: calendarColor[index]\n                })\n                index++;\n                if(index === calendarColor.length)\n                        index=0;\n            }\n            setcalendars(tempCalendar);\n        }\n        \n    }, [props.categoryData])\n\n\n    useEffect(() => {\n        let today = new Date();   \n        let year = today.getFullYear(); // 년도\n        let month = today.getMonth() + 1;  // 월\n        // let date = today.getDate();  // 날짜\n        // let day = today.getDay();  // 요일\n\n        if(month < 10)\n            month = \"0\"+month;\n        setyear(year)\n        setmonth(month)\n    }, [])\n\n    const onClickSchedule = useCallback((e) => {\n        const { calendarId, id } = e.schedule;\n        cal.current.calendarInst.getElement(id, calendarId);\n\n    }, []);\n\n    const createAcademy = async(data) => {\n        var date = data.start._date\n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        var academy_date = year+\"-\"+month+\"-\"+day\n        \n        var params = new URLSearchParams();\n        params.append('name', data.title);\n        params.append('date', academy_date);\n        params.append('category_id', data.calendarId);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        const response = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'academyDate',\n        params,\n        ).then(function(res) {\n            props.readAcademy();\n        });\n    }\n\n    const updateAcademy = async(e) => {\n        const { schedule, changes } = e;\n\n\n        var date = schedule.start._date\n        var changeCategoryId = schedule.calendarId;\n        var changeTitle = schedule.title;\n\n\n        if(changes.hasOwnProperty('start'))\n            date = changes.start._date;\n        if(changes.hasOwnProperty('calendarId'))\n            changeCategoryId = changes.calendarId\n        if(changes.hasOwnProperty('title'))\n            changeTitle = changes.title;\n      \n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        var changeDate = year+\"-\"+month+\"-\"+day\n\n        \n        var updateAcademy = {\n            id: schedule.id,\n            name: changeTitle,\n            date: changeDate,\n            category_id: changeCategoryId,\n            token: window.sessionStorage.getItem('token'),\n            manageID: window.sessionStorage.getItem('id')\n        }\n        axios(\n            {\n                url: process.env.REACT_APP_RESTAPI_HOST+'academyDate',\n                method: 'put',\n                data: updateAcademy\n            }\n        ).then(function(res) {\n            props.readAcademy()\n        })\n    }\n\n    const deleteAcademy = async(id) => {\n        if(window.confirm(\"학사일정을 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'academyDate',\n                    method: 'delete',\n                    data: {\n                        id: id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                props.readAcademy()\n            })\n        }\n    }\n\n    const onBeforeCreateSchedule = useCallback((scheduleData) => {\n        if(window.confirm(\"학사 일정을 추가하시겠습니까?\")) {\n            createAcademy(scheduleData)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onBeforeDeleteSchedule = useCallback((res) => {\n        // eslint-disable-next-line no-unused-vars\n        const { id, calendarId } = res.schedule;\n        deleteAcademy(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onBeforeUpdateSchedule = useCallback((e) => {\n        if(window.confirm(\"일정을 수정하시겠습니까?\")) {\n            updateAcademy(e)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function _getFormattedTime(time) {\n        const date = new Date(time);\n        const h = date.getHours();\n        const m = date.getMinutes();\n\n        return `${h}:${m}`;\n    }\n\n    function _getTimeTemplate(schedule, isAllDay) {\n        var html = [];\n\n        if (!isAllDay) {\n            html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n        }\n        if (schedule.isPrivate) {\n            html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n            html.push(\" Private\");\n        } else {\n            if (schedule.isReadOnly) {\n                html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n            } else if (schedule.recurrenceRule) {\n                html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n            } else if (schedule.attendees.length) {\n                html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n            } else if (schedule.location) {\n                html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n            }\n            html.push(\" \" + schedule.title);\n        }\n\n        return html.join(\"\");\n    }\n\n    const templates = {\n        time: function (schedule) {\n            return _getTimeTemplate(schedule, false);\n        }\n    };\n\n    const NextButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.next();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n        }\n    }, []);\n\n    const PrevButton = useCallback((e) => {\n\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.prev();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            // var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            // props.readMainCalendar(date)\n        }\n\n        \n    }, []);\n\n    const TodayButton = useCallback((e) => {\n        if (cal !== null) {\n        const calendarInstance = cal.current.getInstance();\n        calendarInstance.today();\n        var m = calendarInstance.getDate().getMonth() + 1;\n        var y = calendarInstance.getDate().getFullYear();\n        if(m < 10)\n            m = \"0\"+m;\n        // var date = y+\"-\"+m;\n\n        setmonth(m);\n        setyear(y)\n        }\n    }, []);\n\n    return (\n        <div>\n        <h2 className=\"calendar-title\">{year}년 {month}월의 학사일정</h2>\n            <div className=\"mb15\">\n                <WhiteButton class=\"mr15\" name=\"오늘날짜\" click={TodayButton}/>\n                <WhiteButton class=\"mr15\" name=\"<\" click={PrevButton}/>\n                <WhiteButton name=\">\" click={NextButton}/>\n            </div>\n\n            <div style={{textAlign:\"right\", marginBottom:\"15px\"}}>\n                {props.categoryData !== null ? \n                props.categoryData.map((category, index) => {\n                    return <span key={category.id} className=\"mr15\">\n                                <span className=\"color-circle\" style={{background:calendarColor[index]}}></span>\n                                <span>{category.name}</span>\n                            </span>\n                }):\n                null\n                }\n            </div>\n            \n            <TUICalendar\n                ref={cal}\n                height=\"100%\"\n                view=\"month\"\n                useCreationPopup={true}\n                useDetailPopup={true}\n                template={templates}\n                calendars={calendars}\n                schedules={schedules}\n                onClickSchedule={onClickSchedule}\n                onBeforeCreateSchedule={onBeforeCreateSchedule}\n                onBeforeDeleteSchedule={onBeforeDeleteSchedule}\n                onBeforeUpdateSchedule={onBeforeUpdateSchedule}\n            />\n        </div>\n    );\n}\n\nexport default CommonCalendar;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\n\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport WhiteButton from '../../modules/button/white_button';\nimport CommonModal from '../../modules/modal/common';\nimport Calendar from '../../modules/calendar/crud_calendar';\n\nimport '../../../assets/css/academyDate.css'\n\nfunction AdminAcademyDate(props) {\n    const [ modalOpen, setModalOpen ] = useState(false);\n    const [academyInfo, setacademyInfo] = useState(null);\n    const [categoryInfo, setcategoryInfo] = useState(null);\n    const [selectCategory, setselectCategory] = useState([]);\n    const [addName, setaddName] = useState(\"\");\n    const [isAdd, setisAdd] = useState(false);\n    const [previousAcademyInfo, setpreviousAcademyInfo] = useState(null)\n    var array = null;\n \n    // excel upload\n    const [excelJSONData, setExcelJSONData] = useState(null);\n    const [errorCount, seterrorCount] = useState(0);\n    const excelFormat = {name:\"일정명 (필수)\", date:\"날짜(2021-00-00 형식으로) (필수)\", category:\"분류(비전, 교육, 책임, 심리, 육아, 상담, 성경, 관계 중) -> 여러개 입력 시 , 로 연결해주세요 (육아,상담,성경 의 형식으로) (필수)\" };\n\n    useEffect(() => {\n        readAcademy();\n        readCategory();\n        previousYearAcademy();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(excelJSONData !== null) {\n            var count = 0;\n            excelJSONData.forEach(data => {\n                if(data.isValid === false)\n                    count++;\n            });\n            seterrorCount(count);\n        }\n    }, [excelJSONData])\n\n\n    const openModal = () => {\n        // document.getElementById('upload').click()\n\n        setModalOpen(true);\n    }\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n\n    const clickCategory = (category) => {\n        array = selectCategory;\n        var check = 0;\n        for(var i=0 ; i<array.length ; i++) {\n            if(array[i] === category.id) {\n                const idx = array.findIndex(function(item) {return item === category.id})\n                if (idx > -1) array.splice(idx, 1)\n                check=1;\n                break;\n            }\n        }\n        if(check===0) {\n            array.push(category.id)\n        }\n\n        readAcademy(array)\n        setselectCategory(array)\n        \n    }\n\n    const readAcademy = async(ids) => {\n        ids=\"\";\n        \n        for(var i=0 ; i<selectCategory.length ; i++) {\n            ids += selectCategory[i];\n            if(i<selectCategory.length-1)\n                ids += \",\";\n        }\n        if(selectCategory.length === 0)\n            ids = null;\n            \n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate', {\n                params:{\n                    category: ids,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setacademyInfo(response.data)  \n    }\n\n    const previousYearAcademy = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate/previous', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setpreviousAcademyInfo(response.data);\n    }\n\n    function readExcel(event) {\n        seterrorCount(0);\n        let input = event.target;\n        let reader = new FileReader();\n        reader.onload = function () {\n            let data = reader.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n            workBook.SheetNames.forEach(function (sheetName) {\n                let rows = XLSX.utils.sheet_to_json(workBook.Sheets[sheetName]);\n                var changedData = [];\n                rows.forEach(data => {\n                    var temp = data;\n                    \n                    if(!temp.hasOwnProperty('date') || !temp.hasOwnProperty('name') || !temp.hasOwnProperty('category_name')) {\n                        temp.isValid = false;\n                    } else {\n                        temp.isValid = true;\n                    }\n                    changedData.push(temp);\n                });\n                setExcelJSONData(changedData);\n            })\n        };\n        if(input.files[0] !== undefined) {\n            reader.readAsBinaryString(input.files[0]);\n            openModal();\n            event.target.value = null;\n        }\n    }\n\n    const uploadExcelFile = async () => {\n        // console.log(excelJSONData);\n        var params = new URLSearchParams();\n        params.append('data', JSON.stringify(excelJSONData));\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"학사일정을 업로드하시겠습니까?\")) {\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate/excel',\n            params,\n            ).then(function(res) {\n                alert(\"엑셀 업로드가 완료되었습니다!\");\n                setModalOpen(false);\n                readAcademy();\n                setExcelJSONData(null);\n            });\n        }\n    }\n\n    const readCategory = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate/category', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcategoryInfo(response.data);\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"academy_date\";\n        const ws = XLSX.utils.json_to_sheet(academyInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const exportExcelForamt = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"academy_date_format\";\n        const ws = XLSX.utils.json_to_sheet(excelFormat);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    const exportToCSVPreviousYear = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"previous_academy_date\";\n        const ws = XLSX.utils.json_to_sheet(previousAcademyInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const clickAddBtn = () => {\n        setaddName(\"\");\n        if(isAdd)\n            setisAdd(false);\n        else\n            setisAdd(true);\n    }\n\n    const addCategory = async () => {\n        var params = new URLSearchParams();\n        params.append('name', addName);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"카테고리를 추가하시겠습니까?\")) {\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate/category', \n            params,\n            ).then(function(res) {\n                alert(\"카테고리가 추가되었습니다.\");\n                readCategory();\n                setisAdd(false);\n                setaddName(\"\");\n            });\n        }\n    }\n\n    const deleteCategory = (id) => {\n        if(window.confirm(\"카테고리와 연관된 모든 일정이 함께 삭제됩니다. 카테고리를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'academyDate/category',\n                    method: 'delete',\n                    data: {\n                        id: id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"삭제가 완료되었습니다.\")\n                readCategory();\n                readAcademy();\n            })\n        }\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">학사일정 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <p className=\"table-name mb40\">\n                    학사일정 관리\n                    <GreyButton class=\"none-buttoon right\" name=\"학사 일정 다운로드\" click={exportToCSV}/>\n                    <GreyButton class=\"none-buttoon right mr10\" name=\"업로드 포맷 다운\" click={exportExcelForamt}/>\n                    <GreyButton class=\"none-buttoon right mr10\" name=\"전년도 학사 일정 가져오기\" click={exportToCSVPreviousYear}/>\n                    <input\n                        type='file'\n                        accept='.xlsx'\n                        onChange={readExcel}\n                        id='uploadExcel'\n                        name='uploadExcel'\n                        style={{ display: 'none' }}\n                    />\n                    <label htmlFor='uploadExcel' className=\"grey-btn\">\n                        일정 파일 업로드\n                    </label>\n                </p>\n                <CommonModal open={modalOpen} close={closeModal} func={uploadExcelFile} header=\"일정 업로드 목록\" footer=\"데이터 저장\">\n                    <p className=\"mb20\">\n                        빨간 색으로 표시된 것은 업로드 할 수 없는 데이터입니다. 빼고 업로드를 진행할까요?<br/>\n                        현재 잘못된 데이터는 {errorCount}개 입니다.\n                    </p>\n                    \n                    <div className=\"table-wrapper mt0 relative modal-table\">\n                        <div className=\"table-row-academy\" >\n                            <span className=\"th\">일정 이름</span>\n                            <span className=\"th\">날짜</span>\n                            <span className=\"th\">카테고리</span>\n                        </div>\n                        {excelJSONData !== null ?\n                        excelJSONData.map((data, i) =>\n                        <div key={i} className={data.isValid ? \"table-row-academy\" : \"table-row-academy modal-error\"}>\n                            <span className=\"td\">{data.name}</span>\n                            <span className=\"td\">{data.date}</span>\n                            <span className=\"td\">{data.category_name}</span>\n                        </div>\n                        )\n                        :\n                        <div>엑셀 데이터가 없습니다.</div>\n                        }\n                        \n                    </div>\n                </CommonModal>\n                <div className=\"academy-wrapper\">\n                    <div style={{padding:\"15px\"}}>\n                        <Calendar readAcademy={readAcademy} calendarData = {academyInfo} categoryData={categoryInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}/>\n                    </div>\n                    <div className=\"academy-category\">\n                        <div className=\"academy-category-title\">\n                            카테고리별로 보기 (중복 선택 가능)\n                        </div>\n                        <div className=\"academy-category-content\">                            \n                            { categoryInfo !== null ?\n                                categoryInfo.map((category, index) => \n                                <span key={category.id} className=\"academyDate-category\" style={{position:'relative', padding:'9px 5px'}}>\n                                    <WhiteButton \n                                    name={category.name}\n                                    class={selectCategory.find(element => element === category.id) ? \"clicked-category mb10\" : \"mb10\"} \n                                    click={() => clickCategory(category)}/>\n                                    <span className=\"delete-category-btn\" onClick={() => deleteCategory(category.id)}>X</span>\n                                </span>\n                                )\n                                :\n                                <div>카테고리가 없습니다.</div>\n                            }\n                            <WhiteButton name=\"카테고리 추가\" class={isAdd ? \"clicked-category\" : \"\"} click={() => clickAddBtn()}/>\n                        </div>\n                        {isAdd?\n                        <div style={{padding:\"8px\"}}>\n                            <input className=\"categoryAddInput\" defaultValue={addName} onChange={(e)=>setaddName(e.target.value)}/>\n                            <GreyButton class=\"categoryAddBtn\" name=\"추가\" click={addCategory}/>\n                        </div>\n                        :\n                        null\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport default AdminAcademyDate;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_category.css';\nimport WhiteButton from '../../modules/button/white_button';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\n\nfunction AdminCategory() {\n    const [keyword, setKeyword] = useState(null);\n    const [categoryInfo, setcategoryInfo] = useState(null)\n    const [editCategory, seteditCategory] = useState(null)\n    const [isDisable, setisDisable] = useState(false)\n    const [addDisable, setaddDisable] = useState(false)\n    const [addCategory, setaddCategory] = useState({name:\"\", status:\"\", disable:\"0\", priority:\"0\"})\n    const [isAdd, setisAdd] = useState(false)\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n    const [statusSelect, setStatusSelect] = useState(-2);\n\n    useEffect(() => {\n        readCategory();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        readCategory();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [statusSelect])\n    \n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const readCategory = async() => {\n        if(keyword !== null && keyword !== ''){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'topic',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        statusSelect: statusSelect,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setcategoryInfo(response.data)\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'topic',\n                {\n                    params: {\n                        statusSelect: statusSelect,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setcategoryInfo(response.data)\n        }\n        setKeyword('');\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    const clickEditFinish = async() => {\n        editCategory.token = window.sessionStorage.getItem('token');\n        editCategory.manageID = window.sessionStorage.getItem('id');\n        if(window.confirm(\"카테고리를 수정하시겠습니까?\")) {\n            axios(\n                {\n                url: process.env.REACT_APP_RESTAPI_HOST+'topic',\n                method: 'put',\n                data: editCategory,\n                }\n            ).then(function(res) {\n                alert(\"수정이 완료되었습니다.\");\n                readCategory()  \n                seteditCategory(null)\n            })\n        }\n    }\n\n    const createCategory = async() => {\n        var params = new URLSearchParams();\n        params.append('name', addCategory.name);\n        params.append('disable', addCategory.disable);\n        params.append('priority', addCategory.priority);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"카테고리를 추가하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'topic',\n            params,\n            ).then(function(res) {\n                alert(res.data);\n                readCategory()\n                setisAdd(false);\n                setaddDisable(false);\n                setaddCategory({name:\"\", status:\"\", disable:\"0\", priority:\"0\"})\n            });\n        }\n    }\n\n    const confirmCategory = async(category) => {\n        if(window.confirm(\"카테고리를 수락하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'topic/status',\n                    method: 'put',\n                    data: {\n                        status: 1,\n                        id: category.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"수락되었습니다.\");\n                readCategory()\n            })\n        }\n    }\n\n    const rejectCategory = async(category) => {\n        if(window.confirm(\"카테고리를 거절하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'topic/status',\n                    method: 'put',\n                    data: {\n                        status: -1,\n                        id: category.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"거절되었습니다.\");\n                readCategory()\n            })\n        }\n    }\n\n    const clickEditBtn = (category) => {\n        seteditCategory(category);\n        if(category.disable === 1)\n            setisDisable(true)\n        else\n            setisDisable(false)\n    }\n\n    const onEdit = (e) => {\n        const {value, name} = e.target;\n        seteditCategory({\n            ...editCategory,\n            [name]:value\n        })\n    }\n\n    const onAdd = (e) => {\n        const {value, name} = e.target;\n        setaddCategory({\n            ...addCategory,\n            [name]:value\n        })\n    }\n\n    const clickCancelBtn = () => {\n        seteditCategory(null);\n    }\n\n    const addCancelBtn = () => {\n        setisAdd(false)\n        setaddDisable(false);\n        setaddCategory({name:\"\", status:\"\", disable:\"0\", priority:\"0\"})\n    }\n\n    const clickAddDisableBtn = () => {\n        if(addDisable) {\n            setaddDisable(false)\n            setaddCategory({\n                ...addCategory,\n                disable: 0\n            })\n        }\n        else {\n            setaddDisable(true)\n            setaddCategory({\n                ...addCategory,\n                disable: 1\n            })\n        }\n    } \n\n    const clickDisableBtn = () => {\n        if(isDisable) {\n            setisDisable(false)\n            seteditCategory({\n                ...editCategory,\n                disable: 0\n            })\n        }\n        else {\n            setisDisable(true)\n            seteditCategory({\n                ...editCategory,\n                disable: 1\n            })\n        }\n    }\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = categoryInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"category\";\n        const ws = XLSX.utils.json_to_sheet(categoryInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">주제 카테고리 관리</p>\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 relative\">\n                    \n                    <p className=\"table-name mb40\">\n                        주제 카테고리 관리\n                        <GreyButton class=\"right\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                    </p>\n                    \n                    <div className=\"mb35\">\n                        <select defaultValue={statusSelect} className=\"mr15 p48 user-search\" onChange={(e) => {setStatusSelect(e.target.value)}}>\n                            <option value=\"-2\">전체</option>\n                            <option value=\"0\">일반</option>\n                            <option value=\"1\">숨겨진 카테고리</option>\n                        </select>\n                        <input className=\"p48 search-lecture-input\" type=\"text\" placeholder=\"카테고리명으로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                        <GreyButton name=\"검색\" click={readCategory}/>\n                    </div>\n                    \n                    \n                    <div className=\"mt50 table-row-category\">\n                        <span className=\"th category-index\"></span>\n                        <span className=\"th\">카테고리명</span>\n                        <span className=\"th\">우선순위</span>\n                        <span className=\"th\">숨김여부</span>\n                        <span className=\"th category-btn-col\"></span>\n                    </div>\n                    { categoryInfo !== null && categoryInfo.length !== 0 ?\n                        currentPosts(categoryInfo).map((category, index) => \n                            <div key={category.id} className={category.status === 0 ? \"table-row-category new-category\": \"table-row-category\"}>\n                                <span className=\"td category-index\">{(index+1)+((page-1)*postsPerPage)}</span>\n                                {editCategory && category.id === editCategory.id ? <span className=\"td input-row\"><input value={editCategory.name} name=\"name\" onChange={onEdit}/></span>:<span className=\"td\">{category.name}</span>}\n                                {editCategory && category.id === editCategory.id ? <span className=\"td input-row\"><input value={editCategory.priority} type=\"number\" name=\"priority\" onChange={onEdit}/></span>:<span className=\"td\">{category.priority}</span>}\n                                {editCategory && category.id === editCategory.id ? <span className=\"td input-row\"><input style={{width:\"auto\", margin:\"6px 5px\"}} type=\"radio\" id=\"disable\" checked={isDisable} onClick={clickDisableBtn} onChange={clickDisableBtn}/></span>:<span className=\"td\">{category.disable === 1 ? \"O\" : \"X\"}</span>}\n                                {editCategory && category.id === editCategory.id ?\n                                <span className=\"td category-btn-col\">\n                                    <WhiteButton class=\"mr15\" name=\"완료\" click={clickEditFinish}/>\n                                    <WhiteButton name=\"취소\" click={clickCancelBtn}/>\n                                </span>\n                                :category.status === 0 ?\n                                <span className=\"td category-btn-col\">\n                                    <WhiteButton class=\"mr15\" name=\"수락\" click={() => {confirmCategory(category)}}/>\n                                    <WhiteButton name=\"거절\" click={() => {rejectCategory(category)}}/>\n                                </span>\n                                :category.status === 1 ?\n                                <span className=\"td category-btn-col\">\n                                    <WhiteButton class=\"mr15\" name=\"수정\" click={() => {clickEditBtn(category)}}/>\n                                    {/* <WhiteButton name=\"숨기기\"/> */}\n                                </span>\n                                :<span className=\"td category-btn-col reject-category\">\n                                    거절됨\n                                </span>\n                                }\n                                \n                            </div>\n                        )\n                        :\n                        <div className=\"no-content\">등록된 카테고리가 없습니다.</div>\n                    }\n\n                    {isAdd ?\n                    <div className=\"table-row-category\">\n                        <span className=\"td category-index\"></span>\n                        <span className=\"td input-row\"><input value={addCategory.name} name=\"name\" onChange={onAdd}/></span>\n                        <span className=\"td input-row\"><input value={addCategory.priority} type=\"number\" name=\"priority\" onChange={onAdd}/></span>\n                        <span className=\"td input-row\"><input style={{width:\"auto\", margin:\"6px 5px\"}} type=\"radio\" checked={addDisable} onClick={clickAddDisableBtn} onChange={clickAddDisableBtn}/></span>\n                        <span className=\"td category-btn-col\">\n                            <WhiteButton class=\"mr15\" name=\"추가\" click={() => {createCategory()}}/>\n                            <WhiteButton name=\"취소\" click={addCancelBtn}/>\n                        </span>\n                    </div>\n                    :\n                    null\n                    }\n                </div>\n                <Pagination \n                    activePage={page} \n                    itemsCountPerPage={postsPerPage} \n                    totalItemsCount={categoryInfo !== null ? categoryInfo.length : 0} \n                    pageRangeDisplayed={5} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} \n                />\n                <div style={{textAlign:'right'}}>\n                    <WhiteButton class=\"mt20\" name=\"카테고리 추가\" click={() => {setisAdd(true)}}/>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminCategory;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\nimport { RMIUploader } from \"react-multiple-image-uploader\";\nimport Pagination from \"react-js-pagination\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_feedback.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\n\nfunction AdminVisitDiary() {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [feedbackFileData, setFeedbackFileData] = useState(null);\n    const [keyword, setKeyword] = useState(null);\n    const [addButton, setAddButton] = useState(false);\n    const [visitingLogContent, setVisitingLogContent] = useState(null)\n    const [visible, setVisible] = useState(false);\n    var visitingLogFile = [];\n    const [page, setPage] = useState(1);\n    const postsPerPage = 10;\n\n    useEffect(() => {\n        readApplicationForms();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    const readApplicationForms = async() => {\n        if(keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/visiting_log',\n                {\n                    params: {\n                        keyword: encodeURI(keyword),\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setapplicationInfo(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/visiting_log', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setapplicationInfo(response.data);\n        }\n        setKeyword(null);\n        setSelectedLecture(null);\n    }\n\n    const selectButton = async(data) => {\n        if(selectedLecture === null || selectedLecture !== data) {\n            if(data.visit_reg_date !== null){\n                const response = await axios.get(\n                    process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/file/'+data.feedback_id, {\n                        params: {\n                            token: window.sessionStorage.getItem('token'),\n                            manageID: window.sessionStorage.getItem('id')\n                        }\n                    }\n                );\n                setFeedbackFileData(response.data);\n            }\n            setSelectedLecture(data);\n        } else {\n            setSelectedLecture(null);\n        }\n        \n    }\n\n    const deleteButton = async(data) => {\n        var value = window.confirm(\"강사가 작성한 내용입니다. 삭제할까요?\");\n        if(value !== false){\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'visiting_log',\n                    method: 'delete',\n                    data: {\n                        id: selectedLecture.feedback_id,\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"삭제가 완료되었습니다.\")\n                readApplicationForms();\n                setSelectedLecture(null);\n            })\n        }\n    }\n    const searchKeywordChanged = e => {\n        setKeyword(e.target.value);\n    }\n\n    const hideModal = () => {\n        setVisible(false);\n    };\n    const onUpload = (data) => {\n        visitingLogFile = data;\n    };\n    const insertVisitingLog = async() => {\n        document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n        //document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n        //const blob = await fetch(base64).then(res => res.blob());\n\n        const params = new FormData();\n        const headers = {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n          }\n        //var params = new URLSearchParams();\n        params.append('content', visitingLogContent);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        for(var i=0; i<visitingLogFile.length; i++){\n            params.append('file', visitingLogFile[i].file);\n        }\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/application_form/'+selectedLecture.id, //[loginID]로그인 후 변경\n        params,{headers});\n        readApplicationForms();\n        setSelectedLecture(null);\n\n    };\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"visitDiary\";\n        const ws = XLSX.utils.json_to_sheet(applicationInfo);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">기타</p>\n            <div className=\"admin-content-wrapper\">\n                <p className=\"table-name mb40\">\n                    방문일지 관리\n                    <GreyButton class=\"right\" name=\"엑셀 파일 다운로드\" click={exportToCSV}/>\n                </p>\n                <div id=\"feedback-flex-wrapper\">\n                    <div id=\"feedback-table\">\n                        <div className=\"feedback-search\">\n                            <input className=\"p48\" type=\"text\" placeholder=\"관리자명, 강사명, 강의명, 교회명, 주소, 사용자 이메일로 키워드 검색\" value={keyword || \"\"} onChange={searchKeywordChanged}/>\n                            <GreyButton name=\"검색\" click={readApplicationForms}/>\n                        </div>\n                        <div className=\"table-wrapper\">\n                            <div>\n                                <div className=\"mt50 table-row-feedback\">\n                                    <span className=\"th feedback-category\">NO</span>\n                                    <span className=\"th\">강의명</span>\n                                    <span className=\"th feedback-date\">강연날짜</span>\n                                    <span className=\"th\">강사명</span>\n                                    <span className=\"th feedback-yn\">작성여부</span>\n                                </div>\n                            { applicationInfo !== null ?\n                                currentPosts(applicationInfo).map((data, index) => \n                                    <div key={index} className={selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-feedback\" : \"table-row-feedback\"} onClick = {() => {selectButton(data)}}>\n                                        <span className=\"td\">{(index+1)+((page-1)*postsPerPage)}</span>\n                                        <span className=\"td\">{data.lecture_name}</span>\n                                        <span className=\"td feedback-date\">{data.date}</span>\n                                        <span className=\"td\">{data.inst_name}</span>\n                                        {data.visit_reg_date !== null?\n                                            <span className=\"td\">완료</span>\n                                            : <span className=\"td\">미완료</span>\n                                        }\n                                    </div>\n                                )\n                                :\n                                <div id=\"no-feedback-detail\"><span>방문일지가 없습니다.</span></div>\n                            }\n                        </div>\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />  \n\n                    </div>\n                    {    selectedLecture !== null && selectedLecture.visit_reg_date !== null?\n                        <div className=\"show-lecture-detail\">\n                        <p className=\"regular\"><span className=\"bold\">{selectedLecture.lecture_name}</span>를 강연하셨습니다.</p>\n                        <p className=\"feedback-detail-content\">{selectedLecture.visit_log.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</p>\n                        <div className=\"feedback-image-swiper-wrapper\">\n                        <Swiper \n                            spaceBetween={30} \n                            effect={'fade'}\n                            centeredSlides={true} \n                            loop={true} loopFillGroupWithBlank={true}\n                            pagination={{\n                                \"clickable\": true\n                            }} \n                            navigation={true}\n                            className=\"feedback-swiper\">\n                                {feedbackFileData !== null ?\n                            feedbackFileData.map((data, index) => (\n                                <SwiperSlide key = {index}>\n                                    <div className=\"feedback-image-wrapper\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+data} alt=\"uploadFile\"/></div>\n                                </SwiperSlide>\n                            ))\n                            : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                        }\n                            </Swiper></div>\n                        <button className=\"feedback-submit\" onClick={deleteButton}>삭제하기</button>\n                    </div>: selectedLecture !== null && addButton === true?\n                        <div className=\"show-lecture-detail\">\n                            <p className=\"regular\"><span className=\"bold\">{selectedLecture.lecture_name}</span>를 강연하셨습니다.</p>\n                            <textarea className=\"feedback-textarea\" placeholder=\"글 남기기\" onChange={(e) => {setVisitingLogContent(e.target.value); }}></textarea>\n                            <RMIUploader\n                                isOpen={visible}\n                                hideModal={hideModal}\n                                // onSelect={onSelect}\n                                onUpload={onUpload}\n                                // onRemove={onRemove}\n                                dataSources={[]}\n                            />\n                            <button className=\"feedback-submit\" onClick={() => insertVisitingLog()}>작성 완료하기</button>\n                        </div>\n                    :selectedLecture !== null ?\n                     <div className=\"show-lecture-detail\">\n                        <h2 className=\"mb20\">{selectedLecture.lecture_name}</h2>\n                        <hr className=\"bold-hr mb25\"/>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">신청자명</span>\n                            <span>{selectedLecture.admin_name}</span>\n                        </div>\n                        <div>\n                            <span className=\"form-title\">연락처</span>\n                            <span>{selectedLecture.admin_phone}</span>\n                        </div>\n                        <hr className=\"m20\"/>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">교회명</span>\n                            <span>{selectedLecture.church_name}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">주소</span>\n                            <span>{selectedLecture.addr1} {selectedLecture.addr2}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">교회 연락처</span>\n                            <span>{selectedLecture.phone}</span>\n                        </div>\n                        <div>\n                            <span className=\"form-title\">교회 이메일</span>\n                            <span>{selectedLecture.email}</span>\n                        </div>\n                        <hr className=\"m20\"/>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">강의 대상</span>\n                            <span>{selectedLecture.attendee_target}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">청강자 수</span>\n                            <span>{selectedLecture.attendee_number}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">원하는 날짜</span>\n                            <span>{selectedLecture.date}</span>\n                        </div>\n                        <div className=\"mb35\">\n                            <span className=\"form-title\">원하는 시간대</span>\n                            {selectedLecture.status === 2 ?\n                            <span>{selectedLecture.contact_start_date} ~ {selectedLecture.contact_end_date}</span>:\n                            <span>{selectedLecture.timezone}</span>}\n                        </div>\n                        <div className=\"mb25 form-grid\">\n                            <span className=\"form-title\">요청사항</span>\n                            <span>{selectedLecture.memo.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}</span>\n                        </div>\n                        <hr className=\"bold-hr mb35\"/>\n                        <button className=\"feedback-submit\" onClick={() => {setAddButton(true)}}>방문일지 등록하기</button>\n                    </div>:<div id=\"no-feedback-detail\"><span>방문일지를 선택해주세요.</span></div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminVisitDiary;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/admin_category.css';\nimport '../../../assets/css/admin_staticstics.css';\nimport WhiteButton from '../../modules/button/white_button';\n\n\nfunction AdminStatistics() {\n    const [lecturePeriod, setlecturePeriod] = useState(0);\n    const [statInstPosition, setstatInstPosition] = useState(null);\n    const [statLecture, setstatLecture] = useState(null);\n    const [positionPeriod, setpositionPeriod] = useState(0);\n\n    const [statAllData, setstatAllData] = useState(null);\n\n    const [statInstructor, setStatInstructor] = useState(null);\n    const [statRegion, setStatRegion] = useState(null);\n    const [statDenomination, setStatDenomination] = useState(null);\n\n    const [denominationPeriod, setDenominationPeriod] = useState(null);\n    const [regionPeriod, setRegionPeriod] = useState(null);\n    const [instructorPeriod, setInstructorPeriod] = useState(null);\n    \n    useEffect(() => {\n        readStatLecture();\n        readStatInstByPosition();\n\n        readStatAllData();\n        readStatDenomination(null);\n        readStatInstructor(null);\n        readStatRegion(null);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        readStatLecture();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lecturePeriod])\n\n    useEffect(() => {\n        readStatInstByPosition();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [positionPeriod])\n\n    const readStatLecture = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/stat/'+lecturePeriod, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setstatLecture(response.data);\n    }\n\n    const readStatInstByPosition = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/stat/position/'+positionPeriod, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setstatInstPosition(response.data);\n    }\n\n\n    const readStatAllData = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application/stat/all', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setstatAllData(response.data);\n    }\n\n    const exportToCSV = () => {\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        const fileExtension = \".xlsx\";\n        const fileName = \"statAllData\";\n        const ws = XLSX.utils.json_to_sheet(statAllData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const readStatInstructor = async(period) => {\n        if(period === null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/statistics/instructor', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setStatInstructor(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/statistics/instructor',\n                {\n                    params: {\n                        period: period,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    },\n                }\n            );\n            setStatInstructor(response.data);\n        }\n        setInstructorPeriod(period);\n\n    }\n\n    const readStatRegion = async(period) => {\n        if(period === null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/statistics/region', {\n                    params: {\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setStatRegion(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/statistics/region',\n                {\n                    params: {\n                        period: period,\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    },\n                }\n            );\n            setStatRegion(response.data);\n        }\n        setRegionPeriod(period);\n    }\n\n    const readStatDenomination = async(period) => {\n        if(period === null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/statistics/religious-body', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setStatDenomination(response.data);\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'application/statistics/religious-body',\n                {\n                    params: {\n                        period: period,\n                        token:  window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    },\n                }\n            );\n            setStatDenomination(response.data);\n        }\n        setDenominationPeriod(period);\n    }\n\n    return (\n        <div>\n            <p className=\"admin-title-header\">통계</p>\n\n            <div className=\"admin-content-wrapper\">\n                <div className=\"table-wrapper mt0 mb50\" style={{width:'500px'}}>\n                    <p className=\"table-name mb20\">\n                        강의 기준\n                    </p>\n                    <div className=\"mb10\">\n                        <span className={lecturePeriod === 0 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setlecturePeriod(0)}>전체</span>\n                        <span className={lecturePeriod === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setlecturePeriod(1)}>1달</span>\n                        <span className={lecturePeriod === 3 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setlecturePeriod(3)}>3달</span>\n                        <span className={lecturePeriod === 12 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setlecturePeriod(12)}>1년</span>\n                    </div>\n                    <div className=\"table-row-stat-lecture\">\n                        <span className=\"th\">신청강의</span>\n                        <span className=\"th\">완료강의</span>\n                        <span className=\"th\">미완료강의</span>\n                        <span className=\"th\">참여 강의자수</span>\n                        <span className=\"th\">참여 교회수</span>\n                    </div>\n                    {statLecture !== null ?\n                    <div className=\"table-row-stat-lecture\">\n                        <span className=\"td\">{statLecture.all_lecture}</span>\n                        <span className=\"td\">{statLecture.finish_lecture}</span>\n                        <span className=\"td\">{statLecture.not_finish_lecture}</span>\n                        <span className=\"td\">{statLecture.inst_count}</span>\n                        <span className=\"td\">{statLecture.church_count}</span>\n                    </div>\n                    :\n                    <div className=\"no-content\">통계가 없습니다.</div>\n                    }\n                </div>\n                \n                <div className=\"table-wrapper mt0 mb50\" style={{width:'500px'}}>\n                    <p className=\"table-name mb20\">\n                        강사 구분 기준\n                    </p>\n                    <div className=\"mb10\">\n                        <span className={positionPeriod === 0 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setpositionPeriod(0)}>전체</span>\n                        <span className={positionPeriod === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setpositionPeriod(1)}>1달</span>\n                        <span className={positionPeriod === 3 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setpositionPeriod(3)}>3달</span>\n                        <span className={positionPeriod === 12 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => setpositionPeriod(12)}>1년</span>\n                    </div>\n                    <div className=\"table-row-stat-inst\">\n                        <span className=\"th\">구분</span>\n                        <span className=\"th\">강사수</span>\n                    </div>\n                    {statInstPosition !== null && statInstPosition.length > 0 ?\n                    statInstPosition.map((data, index) =>\n                    <div key={index} className=\"table-row-stat-inst\">\n                        <span className=\"td\">{data.position_name}</span>\n                        <span className=\"td\">{data.position_count}</span>\n                    </div>)\n                    :\n                    <div className=\"no-content\">통계 정보가 없습니다.</div>\n                    }\n                </div>\n\n                <div className=\"table-wrapper mt0 mb50\" style={{width:'500px'}}>\n                    <p className=\"table-name mb20\">\n                        교단 기준\n                    </p>\n                    <div className=\"mb10\">\n                        <span className={denominationPeriod === null ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatDenomination(null)}>전체</span>\n                        <span className={denominationPeriod === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatDenomination(1)}>1달</span>\n                        <span className={denominationPeriod === 3 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatDenomination(3)}>3달</span>\n                        <span className={denominationPeriod === 12 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatDenomination(12)}>1년</span>\n                    </div>\n                    <div className=\"table-statistics-1\">\n                        <span className=\"th\">교단명</span>\n                        <span className=\"th\">신청강의수</span>\n                    </div>\n                    {statDenomination !== null && statDenomination.length > 0 ?\n                        statDenomination.map((data, index) =>\n                        <div key={index} className=\"table-statistics-1\">\n                            <span className=\"td\">{data.name}</span>\n                            <span className=\"td\">{data.count}</span>\n                        </div>)\n                        :\n                        <div className=\"no-content\">통계 정보가 없습니다.</div>\n                    }\n                </div>\n\n                <div className=\"table-wrapper mt0 mb50\" style={{width:'500px'}}>\n                    <p className=\"table-name mb20\">\n                        지역 기준\n                    </p>\n                    <div className=\"mb10\">\n                        <span className={regionPeriod === null ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatRegion(null)}>전체</span>\n                        <span className={regionPeriod === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatRegion(1)}>1달</span>\n                        <span className={regionPeriod === 3 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatRegion(3)}>3달</span>\n                        <span className={regionPeriod === 12 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatRegion(12)}>1년</span>\n                    </div>\n                    <div className=\"table-statistics-1\">\n                        <span className=\"th\">지역구분</span>\n                        <span className=\"th\">신청강의수</span>\n                    </div>\n                    {statRegion !== null && statRegion.length > 0 ?\n                        statRegion.map((data, index) =>\n                        <div key={index} className=\"table-statistics-1\">\n                            <span className=\"td\">{data.name? data.name: \"기타\"+index}</span>\n                            <span className=\"td\">{data.count}</span>\n                        </div>)\n                        :\n                        <div className=\"no-content\">통계 정보가 없습니다.</div>\n                    }\n                </div>\n\n                <div className=\"table-wrapper mt0 mb50\" style={{width:'500px'}}>\n                    <p className=\"table-name mb20\">\n                        강사별 기준\n                    </p>\n                    <div className=\"mb10\">\n                        <span className={instructorPeriod === null ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatInstructor(null)}>전체</span>\n                        <span className={instructorPeriod === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatInstructor(1)}>1달</span>\n                        <span className={instructorPeriod === 3 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatInstructor(3)}>3달</span>\n                        <span className={instructorPeriod === 12 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => readStatInstructor(12)}>1년</span>\n                    </div>\n                    <div className=\"table-statistics-2\">\n                        <span className=\"th\">연번</span>\n                        <span className=\"th\">구분</span>\n                        <span className=\"th\">강사명</span>\n                        <span className=\"th\">참여완료 강의수</span>\n                    </div>\n                    {statInstructor !== null && statInstructor.length > 0 ?\n                        statInstructor.map((data, index) =>\n                        <div key={index} className=\"table-statistics-2\">\n                            <span className=\"td\">{index+1}</span>\n                            <span className=\"td\">{data.position}</span>\n                            <span className=\"td\">{data.name}</span>\n                            <span className=\"td\">{data.count}</span>\n                        </div>)\n                        :\n                        <div className=\"no-content\">통계 정보가 없습니다.</div>\n                    }\n                </div>\n\n                <div className=\"mt0 mb50\">\n                    <p className=\"table-name mb20\">\n                        전체 신청서 정보 다운로드\n                    </p>\n                    <WhiteButton name=\"다운로드\" click={exportToCSV}/>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AdminStatistics;\n","import React from \"react\";\nimport { Route, Switch, Redirect} from \"react-router-dom\";\n\nimport AdminMenu from \"../modules/menu/admin\";\nimport Footer from \"../modules/footer/footer\";\nimport AdminLecture from \"../pages/admin/lecture\";\nimport AdminMain from \"../pages/admin/main\";\nimport AdminChurch from \"../pages/admin/church\";\nimport AdminChurchTemp from \"../pages/admin/churchTemp\";\nimport AdminInstructor from \"../pages/admin/instructor\";\nimport AdminUsers from \"../pages/admin/users\";\nimport AdminFeedback from '../pages/admin/feedback';\nimport AdminAdministrator from '../pages/admin/administrator';\nimport AdminPhrase from '../pages/admin/phrase';\nimport AdminContact from \"../pages/admin/contact\";\nimport AdminAcademyDate from \"../pages/admin/academyDate\";\nimport AdminCategory from \"../pages/admin/category\";\nimport AdminVisitDiary from \"../pages/admin/visitDiary\";\nimport AdminStatistics from \"../pages/admin/statistics\";\n\nclass AdminLayout extends React.Component {\n\n  render() {\n    return (\n        <div>\n            <AdminMenu {...this.props}/>\n            <div id=\"right-content\">\n                <Switch>\n                  <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/administrator\"} component= {AdminAdministrator} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/lecture\"} component= {AdminLecture} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/church_temp\"} component= {AdminChurchTemp} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/church\"} component= {AdminChurch} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/instructor\"} component= {AdminInstructor} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/main\"} component= {AdminMain} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/users\"} component= {AdminUsers} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/feedback\"} component= {AdminFeedback} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/visit_diary\"} component= {AdminVisitDiary} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/phrase\"} component= {AdminPhrase} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/contact\"} component= {AdminContact} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/academy_date\"} component= {AdminAcademyDate} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/category\"} component= {AdminCategory} />\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/statistics\"} component= {AdminStatistics} />\n                    <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n                </Switch>\n            </div>\n            <Footer/>\n            \n        </div>\n    );\n  }\n}\n\nexport default AdminLayout;","import React from \"react\";\nimport '../../../assets/css/footer.css';\n\nclass MainFooter extends React.Component {\n\n  render() {\n    return (\n        <div id=\"footer\">\n            <div id=\"footer-content\" className=\"footer-content-2\">\n                <div className=\"footer-blank\"></div>\n                <img className=\"mr30\" src=\"/image/grey_logo.png\" alt=\"footer logo\" />\n                <div className=\"footer-content1\">\n                    <p>경북 포항시 북구 흥해읍 한동로 558 한동대학교 37554</p>\n                    <p><a href=\"https://www.handong.edu/sinfo/persnal/\">개인정보처리방침</a></p>\n                    <p>copyright&copy; 2021 Handong Global Univ, all rights reserved.</p>\n                </div>\n                <div className=\"footer-content2\">\n                    <p>한동대학교 입학사정관팀</p>\n                    <p>054) 260-1083~6</p>\n                </div>\n            </div>\n            \n        </div>\n    );\n  }\n}\n\nexport default MainFooter;","import React, {useState, useEffect} from \"react\";\nimport { GoogleLogin,GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport '../../../assets/css/header.css';\nimport { Link } from 'react-router-dom';\n\nfunction MainMenu(props) {\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [submenuOpen, setSubmenuOpen] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const today = new Date();\n\n    useEffect(()=>{\n        setDrawerOpen(false);\n        setSubmenuOpen(null);\n    },[props.history.location.pathname])\n\n    function switchDrawer() {\n        setDrawerOpen(!drawerOpen);\n    }\n\n    const responseGoogle = async (response) => {\n        setLoading(true);\n        const params = new URLSearchParams()\n        params.append('token', response.tokenObj.id_token);\n        params.append('email', response.profileObj.email);\n        params.append('expire', response.tokenObj.expires_at);\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        const res = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'user/login', params\n        );\n        if(res.data !== \"fail\"){\n        window.sessionStorage.setItem('email', response.profileObj.email);\n        window.sessionStorage.setItem('name', response.profileObj.name);\n        window.sessionStorage.setItem('token', response.tokenObj.id_token);\n        window.sessionStorage.setItem('expires_at', response.tokenObj.expires_at);\n        window.sessionStorage.setItem('status', res.data.status);\n        window.sessionStorage.setItem('id', res.data.id);\n        \n        window.location.reload();\n        }else{\n        alert(\"로그인 할 수 없습니다. 관리자에게 문의해주세요.\");\n        }\n        setLoading(false);\n    }\n\n    const logout = async () => {\n        setLoading(true);\n        const params = new URLSearchParams()\n        params.append('email', window.sessionStorage.getItem('email'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n        \n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'user/logout', params\n        );\n\n        const auth2 = window.gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function() {\n        window.sessionStorage.removeItem('email');\n        window.sessionStorage.removeItem('name');\n        window.sessionStorage.removeItem('token');\n        window.sessionStorage.removeItem('expires_at');\n\n        setLoading(false);\n        window.location.reload();\n        });\n    }\n    const failLogin = async () => {\n        alert(\"로그인에 실패했습니다.\");\n    }\n    return (\n    <div>\n        <div id=\"main-navbar\">\n            <div className=\"nav-logo\">\n                <img width=\"110px\" alt=\"logo\" src={process.env.REACT_APP_DEFAULT_URL+\"image/logo.png\"} />\n            </div>\n            <div className=\"nav-title-wrapper\">\n                {props.menu !== null ?\n                    props.menu.map((data, index) => (\n                        <Link key={index} to={process.env.REACT_APP_DEFAULT_URL+data.url} className=\"nav-title\">{data.name}</Link>\n                    ))\n                    : null\n                }\n                {/* <Link to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"} className=\"nav-title\">강의보기</Link> */}\n                {loading ? null:\n                    window.sessionStorage.getItem(\"token\") !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()?    \n                    <GoogleLogout\n                    clientId={process.env.REACT_APP_GOOGLE_LOGIN}\n                    buttonText=\"Logout\"\n                    render={renderProps => (<button className=\"nav-title\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그아웃</button>)}\n                    onLogoutSuccess={logout}\n                    >\n                    </GoogleLogout>: <GoogleLogin\n                    clientId= {process.env.REACT_APP_GOOGLE_LOGIN}\n                    render={renderProps => (<button className=\"nav-title\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그인</button>\n                    )}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={failLogin}\n                    cookiePolicy={'single_host_origin'}\n                    />\n                }\n            </div>\n        </div>\n        <div id=\"main-navbar-mobile\">\n            <div onClick = {() => {switchDrawer()}}> <img alt=\"logo\" className=\"drawer-toggle\" src={process.env.REACT_APP_DEFAULT_URL+\"image/mobile_drawer.png\"}/></div>\n            <img alt=\"logo\" width=\"110px\" src={process.env.REACT_APP_DEFAULT_URL+\"image/logo_black.png\"}/>\n            <div></div>\n        </div>\n        {\n            drawerOpen !== false?\n            <div className=\"drawer-wrapper\">\n                <div className=\"drawer-content\">\n                    <div className=\"drawer-left\">\n                        <ul>\n                        <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL}>홈</Link></li>\n                            {props.menu !== null ?\n                                props.menu.map((data, index) => \n                                    data.url === \"lecture/subject\"?\n                                    <li className={submenuOpen === \"lecture\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"lecture\")}}>강의 보기</li>:\n                                    data.url === \"mypage/profile\"?\n                                    <li className={submenuOpen === \"mypage/profile\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"mypage\")}}>마이 페이지</li>:\n                                    <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+data.url? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+data.url}>{data.name}</Link></li>\n                                ):null\n                            }\n                        </ul>\n                        {loading ? null:\n                            window.sessionStorage.getItem(\"token\") !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()?    \n                            <ul>\n                                <li className=\"login-name\">{window.sessionStorage.getItem('email').split(\"@\")[0]} 님</li>\n                                <li>\n                                <GoogleLogout\n                                className=\"nav-title\"\n                                clientId={process.env.REACT_APP_GOOGLE_LOGIN}\n                                buttonText=\"Logout\"\n                                render={renderProps => (<button className=\"drawer-link active\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그아웃</button>\n                                    )}\n                                onLogoutSuccess={logout}\n                                >\n                                </GoogleLogout>\n                            </li></ul>: \n                            <ul>\n                                <li> <GoogleLogin\n                                clientId= {process.env.REACT_APP_GOOGLE_LOGIN}\n                                render={renderProps => (<button className=\"drawer-link active\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Google로 로그인</button>\n                                )}\n                                buttonText=\"Login\"\n                                onSuccess={responseGoogle}\n                                onFailure={responseGoogle}\n                                cookiePolicy={'single_host_origin'}\n                                /></li>\n                            </ul>\n                        }\n                        \n                    </div>\n                    <div className=\"drawer-right\">\n                        {submenuOpen === \"lecture\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>날짜별</Link></li>\n                        </ul>:\n                        submenuOpen === \"mypage\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage\"}>사용자-마이페이지</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"}>강사-프로필</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"}>강사-내 강의</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"}>강사-컨택일지</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"}>강사-방문일지</Link></li>\n                        </ul>:\n                        <ul></ul>\n                        }\n                    </div>\n                </div>\n            </div>:\n            <div></div>\n        }\n    </div>        \n    );\n}\n\nexport default MainMenu;\n\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../assets/css/home.css';\nimport { Link } from 'react-router-dom';\nimport ReactPageScroller from \"react-page-scroller\";\nimport CommonCalendar from '../modules/calendar/read_calendar';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, {\n    EffectFade, Autoplay, Navigation, Pagination\n} from 'swiper/core';\n\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/effect-fade/effect-fade.min.css\"\nimport \"swiper/components/navigation/navigation.min.css\"\nimport \"swiper/components/pagination/pagination.min.css\"\n\n  // install Swiper modules\n  SwiperCore.use([EffectFade,Autoplay,Pagination,Navigation]);\n\nconst Home = (prop) => {\n    const [currentPage, setCurrentPage] = useState(null);\n    const [settingInfo, setsettingInfo] = useState(null);\n    const [section1Image, setsection1Image] = useState(null)\n    const [section5Image, setsection5Image] = useState(null)\n    const [calendarInfo, setcalendarInfo] = useState(null)\n\n\n    useEffect(() => {\n        let today = new Date();   \n\n        let year = today.getFullYear(); // 년도\n        let month = today.getMonth() + 1;  // 월\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        readSettingInfo();\n        readMainCalendar(date);\n    }, [])\n\n    const readImage = async() => {\n        var images = [];\n        if(settingInfo.find(element => element.key === \"section1_img1\").value !== null && settingInfo.find(element => element.key === \"section1_img1\").value !== \"null\"&& settingInfo.find(element => element.key === \"section1_img1\").value !== \"\"){\n            await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img1\").value, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            )\n            .then(reponse => {\n                images.push(process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img1\").value);\n            })\n            .catch(function (error) {\n                images.push(process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg');\n            });\n        }\n        if(settingInfo.find(element => element.key === \"section1_img2\").value !== null && settingInfo.find(element => element.key === \"section1_img2\").value !== \"null\"&& settingInfo.find(element => element.key === \"section1_img2\").value !== \"\"){\n            await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img2\").value, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            )\n            .then(reponse => {\n                images.push(process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img2\").value);\n            })\n            .catch(function (error) {\n                images.push(process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg');\n            });\n        }\n        if(settingInfo.find(element => element.key === \"section1_img3\").value !== null && settingInfo.find(element => element.key === \"section1_img3\").value !== \"null\"&& settingInfo.find(element => element.key === \"section1_img3\").value !== \"\"){\n            await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img3\").value, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            )\n            .then(reponse => {\n                images.push(process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img3\").value);\n            })\n            .catch(function (error) {\n                images.push(process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg');\n            });\n        }\n        if(settingInfo.find(element => element.key === \"section1_img4\").value !== null && settingInfo.find(element => element.key === \"section1_img4\").value !== \"null\"&& settingInfo.find(element => element.key === \"section1_img4\").value !== \"\"){\n            await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img4\").value, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            )\n            .then(reponse => {\n                images.push(process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_img4\").value);\n            })\n            .catch(function (error) {\n                images.push(process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg');\n            });\n        }\n        setsection1Image(images);\n    }\n    useEffect(() => {\n        if(settingInfo !== null) {\n            readImage();\n\n            var images2 = [];\n            for(var i=1; i<=8; i++){\n                // eslint-disable-next-line no-loop-func\n                if(settingInfo.find(element => element.key === \"section5_img\"+i).value !== null && settingInfo.find(element => element.key === \"section5_img\"+i).value !== \"null\"&& settingInfo.find(element => element.key === \"section5_img\"+i).value !== \"\"){\n                    // eslint-disable-next-line no-loop-func\n                    if(parseInt(settingInfo.find(element => element.key === \"section5_id\"+i).value) === -1){\n                        // eslint-disable-next-line no-loop-func\n                        images2.push({name: \"\"});\n                    }else {\n                        // eslint-disable-next-line no-loop-func\n                        images2.push({name: settingInfo.find(element => element.key === \"section5_img\"+i).value});\n                    }\n                }\n            }\n            setsection5Image(images2);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [settingInfo])\n\n\n    const readMainCalendar = async(date) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/main',{\n                params:{\n                    date: date,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n    }\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)        \n    }\n\n    const handlePageChange = number => {\n        setCurrentPage(number);\n    };\n\n    const lectures = [\n        {\n            'id': 1,\n            'title': 'lecture1'\n        },\n        {\n            'id': 2,\n            'title': 'lecture2'\n        },\n        {\n            'id': 3,\n            'title': 'lecture3'\n        },\n        {\n            'id': 4,\n            'title': 'lecture4'\n        },\n        {\n            'id': 5,\n            'title': 'lecture5'\n        },\n        {\n            'id': 6,\n            'title': 'lecture6'\n        },\n        {\n            'id': 7,\n            'title': 'lecture7'\n        },\n        {\n            'id': 8,\n            'title': 'lecture8'\n        },\n    ];\n\n    return (\n    <div>\n        <div className=\"main-page-scroller\">\n            <ReactPageScroller\n                pageOnChange={handlePageChange}\n                customPageNumber={currentPage}\n            >\n                {/* section1 start */}\n                <section className=\"section1\">\n                <Swiper \n                spaceBetween={30} \n                effect={'fade'}\n                centeredSlides={true} \n                loop={true} loopFillGroupWithBlank={true}\n                autoplay= {\n                    settingInfo !== null ?\n                    {\n                    \"delay\": settingInfo.find(element => element.key === \"section1_delay\").value,\n                    \"disableOnInteraction\": false\n                    }:\n                    {\n                    \"delay\": 3000,\n                    \"disableOnInteraction\": false\n                    }\n                }\n                pagination={{\n                    \"clickable\": true\n                }} \n                navigation={true} \n                className=\"mySwiper\">\n                    {\n                        section1Image !== null ?\n                        section1Image.map( (item, i) => \n                        <SwiperSlide key={i}><img className=\"main-slide-img\" src={item} alt=\"main_img\"/>\n                        </SwiperSlide>)\n                        : <div>로딩중...</div>\n                    }\n                </Swiper>\n                <img className=\"home-logo\" src={settingInfo !== null ? process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_title\").value : \"\"} alt=\"logo\"\n                onError={(e) => {\n                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                }}/>\n                <Link className=\"main-section1-btn\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n\n                {/* section2 start */}\n                <section \n                    className=\"section2\" \n                    style={settingInfo !== null ? \n                    {background:\"url(\"+process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section2_img\").value+\") no-repeat\"}:\n                    {background:\"none\"}}\n                >\n                    <div className=\"info-wrapper\">\n                        <h2 className=\"title\">행사 조직 안내글</h2>\n                        <p className=\"contents\">\n                            {settingInfo !== null ?\n                            settingInfo.find(element => element.key === \"section2_text\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                            \"로딩중...\"\n                            }\n                        </p>\n                        <Link className=\"lecture-btn\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                    </div>\n                </section>\n\n                {/* section3 start */}\n                {settingInfo !== null ?\n                <section className=\"section3\">\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img1\").value} alt=\"lecture1\" \n                    onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img2\").value} alt=\"lecture2\"\n                    onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img3\").value} alt=\"lecture3\"\n                    onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img4\").value} alt=\"lecture4\"\n                    onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <Link className=\"lecture-btn2\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n                :\n                <div>로딩중...</div>\n                }\n\n                {/* section5 start */}\n                <section className=\"section5\">\n                    <h2 className=\"lecture-title\">대표 강좌</h2>\n                    <div className=\"lecture-wrapper\">\n                        {lectures.map((lecture, index) => {\n                            return <div key={index} className=\"lecture\"></div>;\n                        })}\n                    </div>\n                    <div id=\"slideshow\" className=\"lecture-wrapper-mobile\">\n                        <div className=\"entire-content\">\n                            <div className=\"content-carrousel\">\n                                {section5Image !== null ?\n                                section5Image.map((image, index) => {\n                                    return  <figure key={index} className=\"shadow\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+image.name} alt=\"section5\"\n                                    onError={(e) => {\n                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                                    }}/></figure>;\n                                })\n                                : <div>로딩중...</div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"lecture-btn3\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n            </ReactPageScroller>\n        </div>\n        {/* 일반 */}\n        <div className=\"main-page-nonscroll\">\n                {/* section1 start */}\n                \n                <section className=\"section1\">\n                <Swiper \n                spaceBetween={30} \n                effect={'fade'}\n                centeredSlides={true} \n                loop={true} loopFillGroupWithBlank={true}\n                autoplay= {\n                    settingInfo !== null ?\n                    {\n                    \"delay\": settingInfo.find(element => element.key === \"section1_delay\").value,\n                    \"disableOnInteraction\": false\n                    }:\n                    {\n                    \"delay\": 3000,\n                    \"disableOnInteraction\": false\n                    }\n                }\n                pagination={{\n                    \"clickable\": true\n                }} \n                navigation={true} \n                className=\"mySwiper\">\n                    {\n                        section1Image !== null ?\n                        section1Image.map( (item, i) => <SwiperSlide key={i}><img className=\"main-slide-img\" src={item} alt=\"main\" /></SwiperSlide>)\n                        : <div>로딩중...</div>\n                    }\n                </Swiper>\n                <img className=\"home-logo\" src={settingInfo !== null ? process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section1_title\").value : \"\"} alt=\"logo\"\n                onError={(e) => {\n                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                }}/>\n                <Link className=\"main-section1-btn\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n\n                {/* section2 start */}\n                <section \n                    className=\"section2\" \n                    style={settingInfo !== null ? \n                    {background:\"url(\"+process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section2_img\").value+\") no-repeat\"}:\n                    {background:\"none\"}}\n                >\n                    <div className=\"info-wrapper\">\n                        <h2 className=\"title\">행사 조직 안내글</h2>\n                        <p className=\"contents\">\n                            {settingInfo !== null ?\n                            settingInfo.find(element => element.key === \"section2_text\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                            \"로딩중...\"\n                            }\n                        </p>\n                        <Link className=\"lecture-btn\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                    </div>\n                </section>\n\n                {/* section3 start */}\n                {settingInfo !== null ?\n                <section className=\"section3\">\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img1\").value} alt=\"lecture1\"\n                        onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img2\").value} alt=\"lecture2\"\n                        onError={(e) => {\n                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img3\").value} alt=\"lecture3\"\n                        onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+settingInfo.find(element => element.key === \"section3_img4\").value} alt=\"lecture4\"\n                        onError={(e) => {\n                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                    }}></img>\n                    <Link className=\"lecture-btn2\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n                :\n                <div>로딩중...</div>\n                }\n                \n\n                {/* section4 start */}\n                <section className=\"section4\">\n                    <div className=\"main-calendar\">\n                        <CommonCalendar readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}/>\n                    </div>\n                    <Link className=\"lecture-btn3\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n\n                {/* section5 start */}\n                <section className=\"section5\">\n                    <h2 className=\"lecture-title\">대표 강좌</h2>\n                    <div className=\"lecture-wrapper\">\n                        {/* {lectures.map((lecture, index) => {\n                            return <div key={index} className=\"lecture\"></div>;\n                        })} */}\n                        {section5Image !== null ?\n                        section5Image.map((image, index) => {\n                            return  <div key={index} className=\"lecture\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+image.name} alt=\"section5\"\n                            onError={(e) => {\n                                e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                            }}/></div>;\n                        })\n                        : <div>로딩중...</div>\n                        }\n                    </div>\n                    <div id=\"slideshow\" className=\"lecture-wrapper-mobile\">\n                        <div className=\"entire-content\">\n                            <div className=\"content-carrousel\">\n                                {section5Image !== null ?\n                                section5Image.map((image, index) => {\n                                    return  <figure key={index} className=\"shadow\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+image.name} alt=\"section5\"\n                                    onError={(e) => {\n                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                                    }}\n                                    /></figure>;\n                                })\n                                : <div>로딩중...</div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"lecture-btn3\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>강의 보러 가기</Link>\n                </section>\n        </div>\n    </div>\n    )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Switch, Redirect} from \"react-router-dom\";\nimport MainFooter from '../modules/footer/main_footer';\n\nimport MainMenu from \"../modules/menu/main\";\nimport Home from \"../pages/home\";\n\nclass MainLayout extends React.Component {\n\n  render() {\n    return (\n        <div>\n            <MainMenu menu = {this.props.menu} {...this.props}/>\n            <Switch>\n                    <Route exact path={process.env.REACT_APP_DEFAULT_URL} component= {Home} />\n                    <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n            </Switch>\n            <MainFooter/>\n        </div>\n    );\n  }\n}\n\nexport default MainLayout;","import React, {useState, useEffect} from \"react\";\nimport { GoogleLogin,GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport '../../../assets/css/header.css';\nimport { Link } from 'react-router-dom';\n\nfunction CommonMenu(props) {\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [submenuOpen, setSubmenuOpen] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const today = new Date();\n\n    useEffect(()=>{\n        setDrawerOpen(false);\n        setSubmenuOpen(null);\n    },[props.history.location.pathname])\n    function switchDrawer() {\n        setDrawerOpen(!drawerOpen);\n    }\n\n    const responseGoogle = async (response) => {\n        setLoading(true);\n        const params = new URLSearchParams()\n        params.append('token', response.tokenObj.id_token);\n        params.append('email', response.profileObj.email);\n        params.append('expire', response.tokenObj.expires_at);\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        const res = await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'user/login', params\n        );\n        if(parseInt(res.data.status) !== -1){\n        window.sessionStorage.setItem('email', response.profileObj.email);\n        window.sessionStorage.setItem('name', response.profileObj.name);\n        window.sessionStorage.setItem('token', response.tokenObj.id_token);\n        window.sessionStorage.setItem('expires_at', response.tokenObj.expires_at);\n        window.sessionStorage.setItem('status', res.data.status);\n        window.sessionStorage.setItem('id', res.data.id);\n\n        //window.location.href ='';\n        }else{\n        alert(\"로그인 할 수 없습니다. 관리자에게 문의해주세요.\");\n        }\n        setLoading(false);\n        window.location.reload();\n    }\n\n    const logout = async () => {\n        setLoading(true);\n        const params = new URLSearchParams()\n        params.append('email', window.sessionStorage.getItem('email'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'user/logout', params\n        );\n\n        const auth2 = window.gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function() {\n        window.sessionStorage.removeItem('email');\n        window.sessionStorage.removeItem('name');\n        window.sessionStorage.removeItem('token');\n        window.sessionStorage.removeItem('expires_at');\n        window.sessionStorage.removeItem('id')\n        setLoading(false);\n        window.location.reload();\n        });\n    }\n\n    const failLogin = async () => {\n        alert(\"로그인에 실패했습니다.\");\n    }\n    return (\n    <div>\n        <div id=\"common-navbar\">\n            <div className=\"nav-logo\">\n                <Link to={process.env.REACT_APP_DEFAULT_URL}><img width=\"110px\" alt=\"logo\" src={process.env.REACT_APP_DEFAULT_URL+\"image/black_logo.png\"}/></Link>\n            </div>\n            <div className=\"nav-title-wrapper\">\n                {props.menu !== null ?\n                    props.menu.map((data, index) => (\n                        <Link key={index} to={process.env.REACT_APP_DEFAULT_URL+data.url} className=\"nav-title\">{data.name}</Link>\n                    ))\n                    : null\n                }\n                {loading ? null:\n                    window.sessionStorage.getItem('email') !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()?    \n                    <GoogleLogout\n                    clientId={process.env.REACT_APP_GOOGLE_LOGIN}\n                    buttonText=\"Logout\"\n                    render={renderProps => (<button className=\"nav-title\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그아웃</button>)}\n                    onLogoutSuccess={logout}\n                    >\n                    </GoogleLogout>: <GoogleLogin\n                    clientId= {process.env.REACT_APP_GOOGLE_LOGIN}\n                    render={renderProps => (<button className=\"nav-title\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그인</button>\n                    )}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={failLogin}\n                    cookiePolicy={'single_host_origin'}\n                    />\n                }\n            </div>\n        </div>\n        <div id=\"common-navbar-mobile\">\n            <div onClick = {() => {switchDrawer()}}><img alt=\"logo\" className=\"drawer-toggle-common\" src={process.env.REACT_APP_DEFAULT_URL+\"image/mobile_drawer.png\"}/></div>\n            <img alt=\"logo\" width=\"110px\" src={process.env.REACT_APP_DEFAULT_URL+\"image/logo_black.png\"}/>\n            <div></div>\n        </div>\n        {\n            drawerOpen !== false?\n            <div className=\"drawer-wrapper\">\n                <div className=\"drawer-content\">\n                    <div className=\"drawer-left\">\n                        <ul>\n                        {props.menu !== null ?\n                            props.menu.map((data, index) => \n                                \n                                    data.url === \"lecture/subject\"?\n                                    <li className={submenuOpen === \"lecture\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"lecture\")}}>강의 보기</li>:\n                                    data.url === \"mypage/profile\"?\n                                    <li className={submenuOpen === \"mypage/profile\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"mypage\")}}>마이 페이지</li>:\n                                    <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+data.url? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+data.url}>{data.name}</Link></li>\n\n                            ):null\n                        }\n\n                            {/* <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL}>홈</Link></li>\n                            <li className={submenuOpen === \"lecture\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"lecture\")}}>강의 보기</li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"admin/main\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"admin/main\"}>관리 페이지 보기</Link></li>\n                            <li className={submenuOpen === \"mypage\"? \"active\":\"\"} onClick = {() => {setSubmenuOpen(\"mypage\")}}>마이 페이지</li> */}\n                        </ul> \n                        <ul>\n                            {\n                                window.sessionStorage.getItem('email') !== null?\n                                <li className=\"login-name\">{window.sessionStorage.getItem('email').split(\"@\")[0]} 님</li>:\n                                <li className=\"login-name\">로그인이 필요합니다.</li>\n                            }\n                            {loading ? null:\n                                window.sessionStorage.getItem('email') !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()?    \n                                <GoogleLogout\n                                clientId={process.env.REACT_APP_GOOGLE_LOGIN}\n                                buttonText=\"Logout\"\n                                render={renderProps => (<li className=\"nav-title pointer\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그아웃</li>)}\n                                onLogoutSuccess={logout}\n                                >\n                                </GoogleLogout>: <GoogleLogin\n                                clientId= {process.env.REACT_APP_GOOGLE_LOGIN}\n                                render={renderProps => (<li className=\"nav-title pointer\" onClick={renderProps.onClick} disabled={renderProps.disabled}>로그인</li>\n                                )}\n                                buttonText=\"Login\"\n                                onSuccess={responseGoogle}\n                                onFailure={failLogin}\n                                cookiePolicy={'single_host_origin'}\n                                />\n                            }\n                        </ul>\n                    </div>\n                    <div className=\"drawer-right\">\n                        {submenuOpen === \"lecture\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>날짜별</Link></li>\n                        </ul>:\n                        submenuOpen === \"mypage\"? \n                        <ul>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"}>프로필</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"}>내 강의</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"}>컨택일지</Link></li>\n                            <li className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"? \"active\":\"\"}><Link className=\"drawer-link\" to={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"}>방문일지</Link></li>\n                        </ul>:\n                        <ul></ul>\n                        }\n                    </div>\n                </div>\n            </div>:\n            <div></div>\n        }\n        {/* <div className=\"main-image\">\n            <img className=\"page-background\" src={backgroundUrl} alt=\"lecture page\" />\n            <div className=\"page-info\">\n                <h2>신청서 작성하기</h2>\n                <p>신청을 통해 듣고 싶은 강의를 우리 교회에서!</p>\n            </div>\n        </div> */}\n        {/* <div className=\"content-wrapper\">\n            <div className=\"left-navbar\">\n                <span className=\"left-active\">\n                    내용1\n                </span>\n                <span>\n                    내용2\n                </span>\n                <span>\n                    내용3\n                </span>\n                <span>\n                    내용4\n                </span>\n            </div>\n            <div className=\"right-content\">\n                right content 입니다\n            </div>\n\n        </div>\n        */}\n    </div>        \n    );\n}\n\nexport default CommonMenu;\n\n","import React, { useState, useEffect} from 'react';\nimport ContentPagination from \"react-js-pagination\";\nimport Calendar from '../../modules/calendar/read_calendar';\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport axios from 'axios';\nimport ReactLoading from \"react-loading\";\n// import SwiperCore, {\n//     EffectFade, Autoplay, Navigation, Pagination\n//   } from 'swiper/core';\n\n  import \"swiper/swiper.min.css\";\n  import \"swiper/components/effect-fade/effect-fade.min.css\"\n  import \"swiper/components/navigation/navigation.min.css\"\n  import \"swiper/components/pagination/pagination.min.css\"\n\nimport \"../../../assets/css/layout.css\";\nimport \"../../../assets/css/lecture.css\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/feedback.css';\n\nfunction LectureSubject(props) {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [selectedFeedback, setSelectedFeedback] = useState(null);\n    const [categoryData, setCategoryData] = useState(null);\n    const [selectedCategoryData, setSelectedCategoryData] = useState([]);\n    const [categoryLoading, setCategoryLoading] = useState(null);\n    const [lectureLoading, setLectureLoading] = useState(null);\n    const [lectureData, setLectureData] = useState(null);\n    const [lectureDetail, setLectureDetail] = useState(null);\n    // eslint-disable-next-line no-unused-vars\n    const [lectureDetailLoading, setLectureDetailLoading] = useState(null);\n    const [calendarInfo, setcalendarInfo] = useState(null)\n    const [clickedLecture, setclickedLecture] = useState(null)\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    // eslint-disable-next-line no-unused-vars\n    const [feedbackPage, setfeedbackPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [feedbackPostsPerPage, setfeedbackPostsPerPage] = useState(10);\n    const [feedbackInfo, setfeedbackInfo] = useState(null);\n    // eslint-disable-next-line no-unused-vars\n    const [avgLectureStar, setavgLectureStar] = useState(0);\n    // eslint-disable-next-line no-unused-vars\n    const [avgInstructorStar, setavgInstructorStar] = useState(0);\n    const [feedbackFile, setFeedbackFile] = useState(null);\n    const [feedbackFileLoading, setFeedbackFileLoading] = useState(false);\n    // const [academyDates, setacademyDates] = useState(null);\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    const today = new Date();\n\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)\n\n    }\n\n    function feedbackClick(fb) {\n        if(selectedFeedback === null)\n            setSelectedFeedback(fb)\n        else\n            setSelectedFeedback(null)\n    }\n\n    function lectureClick(id, lecture) {\n        setclickedLecture(lecture);\n        setcalendarInfo(null)\n        readLectureDetail(lecture.id);\n\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = today.getMonth() + 1;\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        if (selectedLecture === id) {\n            readFeedback();\n            setSelectedLecture(null);\n        }\n        else{\n            setSelectedLecture(id);\n            readFeedbackByLecture(lecture.id);\n            readMainCalendar(date, lecture.id)\n        }\n    }\n\n    const readFeedback = async () => {\n        var subject = \"\";\n        var isSubjectNull = false;\n        for(var i=0; i< selectedCategoryData.length; i++){\n            if(selectedCategoryData[i] === true){\n                subject += categoryData[parseInt(i/8)][i-(8*parseInt(i/8))].id;\n                subject += \",\";\n                isSubjectNull = true;\n            }\n        }\n        if(isSubjectNull) {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/topic', {\n                    params: {\n                        topic: subject,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setfeedbackInfo(response.data);\n        } else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/topic', {\n                    params: {\n                        token: window.sessionStorage.getItem('token') ,\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setfeedbackInfo(response.data);\n        }\n    }\n\n    const readFeedbackFile = async () => {\n        setFeedbackFileLoading(true);\n\n        var subject = \"\";\n        var isSubjectNull = false;\n        for(var i=0; i< selectedCategoryData.length; i++){\n            if(selectedCategoryData[i] === true){\n                subject += categoryData[parseInt(i/8)][i-(8*parseInt(i/8))].id;\n                subject += \",\";\n                isSubjectNull = true;\n            }\n        }\n        var feedbackImage = [];\n        var dataUnit = [];\n        if(isSubjectNull) {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/topic', {\n                    params: {\n                        topic: subject,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n\n            // eslint-disable-next-line no-redeclare\n            for(let i=0; i < response.data.length; i+= 4){\n                dataUnit = [];\n                for(var j=i; j<i+4 && j< response.data.length; j++){\n                    dataUnit.push(response.data[j]);\n                }\n                feedbackImage.push(dataUnit);\n            }\n        } else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/topic', {\n                    params: {\n                        token: window.sessionStorage.getItem('token') ,\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n\n            for(let i=0; i < response.data.length; i+= 4){\n                dataUnit = [];\n                // eslint-disable-next-line no-redeclare\n                for(var j=i; j<i+4 && j< response.data.length; j++){\n                    dataUnit.push(response.data[j]);\n                }\n                feedbackImage.push(dataUnit);\n            }\n        }\n\n        setFeedbackFile(feedbackImage);\n            setFeedbackFileLoading(false);\n    }\n\n\n    const readFeedbackByLecture = async (lecture_id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/lecture', {\n                params: {\n                    lecture_id: lecture_id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setfeedbackInfo(response.data);\n        var lecture_star = 0;\n        var instructor_star = 0;\n        if(response.data.length > 0) {\n            response.data.forEach(data => {\n                lecture_star += data.lecture_star;\n                instructor_star += data.instructor_star;\n            });\n            lecture_star /= response.data.length;\n            instructor_star /= response.data.length;\n        }\n        setavgLectureStar(Math.round(lecture_star * 100) / 100);\n        setavgInstructorStar(Math.round(instructor_star * 100) / 100);\n    }\n\n    const readLectureDetail = async (id) => {\n        setLectureDetailLoading(true);\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/detail/' + id, {\n                params: {\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setLectureDetail(response.data);\n        setLectureDetailLoading(false);\n    }\n\n    const readCategory = async () => {\n        setCategoryLoading(true);\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/category', {\n                params: {\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        var categoryData = [];\n\n        for(var i=0; i < response.data.length; i+= 8){\n            var dataUnit = [];\n            for(var j=i; j<i+8 && j< response.data.length; j++){\n                dataUnit.push(response.data[j]);\n            }\n            categoryData.push(dataUnit);\n        }\n        setSelectedCategoryData(Array(response.data.length).fill(false));\n        setCategoryData(categoryData);\n\n        setCategoryLoading(false);\n    }\n\n    function selectCategory (topic) {\n        let newArr = selectedCategoryData.map((item, index) => {\n            if (topic === index) {\n                return !item;\n            } else {\n                return item;\n            }\n        });\n        setSelectedCategoryData(newArr);\n    }\n\n    const readMainCalendar = async(date, id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/lecture', {\n                params: {\n                    date: date,\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n    }\n\n    const readLecture = async () => {\n        setLectureLoading(true);\n        setSelectedLecture(null);\n        var subject = \"\";\n        var isSubjectNull = false;\n        for(var i=0; i< selectedCategoryData.length; i++){\n            if(selectedCategoryData[i] === true){\n                subject += categoryData[parseInt(i/8)][i-(8*parseInt(i/8))].id;\n                subject += \",\";\n                isSubjectNull = true;\n            }\n        }\n        if(isSubjectNull) {\n\n            subject = subject.slice(0, -1);\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/subject',\n                {\n                    params: {\n                        subject: subject,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setLectureData(response.data);\n\n            setLectureLoading(false);\n        }else{\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/subject', {\n                    params: {\n                        token: window.sessionStorage.getItem('token') ,\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setLectureData(response.data);\n\n            setLectureLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        readCategory();\n        readLecture();\n        readFeedback();\n        readFeedbackFile();\n        readSettingInfo();\n        document.getElementsByClassName(\"swiper-button-next\")[0].click();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        readLecture();\n        readFeedback();\n        readFeedbackFile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedCategoryData]);\n\n    useEffect(() => {\n        setSelectedLecture(null);\n    }, [page])\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = lectureData.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    function feedbackCurrentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = feedbackInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    function applicationCheck () {\n        if(window.sessionStorage.getItem('token') !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()){\n            alert(\"사용자 권한으로만 사용할 수 있는 기능입니다.\");\n        }else{\n            alert(\"로그인 후 사용하실 수 있는 기능입니다. 상단에 로그인 버튼을 눌러주세요.\");\n        }\n    }\n\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/lecture_page_subject.jpg'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2 className=\"white_color\">강의 둘러보기</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"lecture_page_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className=\"sub-title active\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>일자별</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <div className=\"subject-carousel\">\n                    <Swiper\n                    spaceBetween={30}\n                    effect={'fade'}\n                    centeredSlides={true}\n                    loop={true} loopFillGroupWithBlank={true}\n                    pagination={{\n                        \"clickable\": true\n                    }}\n                    navigation={true}\n                    className=\"mySwiper\">\n                        {categoryLoading === false ?\n                    categoryData.map((data, index) => (\n                        <SwiperSlide key = {index}>\n                            <div className=\"subject-wrapper\">\n                                {data.map((dataUnit, index2) => (\n                                    <div key={index2} className={selectedCategoryData[(index*8)+index2] === false? \"subject \": \"subject selected-subject\"} onClick = {() => {selectCategory((index*8)+index2)}}>{dataUnit.name}</div>\n                                ))}\n                            </div>\n                        </SwiperSlide>\n                    ))\n                    : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                }\n                    </Swiper>\n                    </div>\n                    <div className=\"table-wrapper\">\n                        <div className=\"subject-table-row\">\n                            <div className=\"th\">강사명</div>\n                            <div className=\"th\">강의명</div>\n                            <div className=\"th date\">기간</div>\n                            <div className=\"th location\">강의 지역</div>\n                        </div>\n                        {lectureLoading === false && lectureData !== null && lectureData.length > 0 ?\n                        currentPosts(lectureData).map((data, index) => (\n                            <div key={index} className={selectedLecture === index+(page-1)*postsPerPage ? \"subject-table-row selected-subject\": \"subject-table-row\"} onClick = {() => {lectureClick(index+(page-1)*postsPerPage, data)}}>\n                                <div className=\"td\">{data.instructor_name}</div>\n                                <div className=\"td\">{data.name}</div>\n                                <div className=\"td date\">{data.date !== null && data.date.length !== 0? data.date: \"추후협의\"}</div>\n                                <div className=\"td location\">{data.region}</div>\n                            </div>\n                        )):\n                        lectureLoading === true?\n                        <div className=\"lecture-loading\"><ReactLoading type=\"spin\" color=\"rgb(5 88 156 / 47%)\" className=\"lecture-loading-data\" width=\"50px\"/></div>:\n                        <div className=\"lecture-no-data\">선택하신 주제에 해당하는 강의가 없습니다.</div>\n                        }\n                    </div>\n                    <ContentPagination\n                        activePage={page}\n                        itemsCountPerPage={postsPerPage}\n                        totalItemsCount={lectureData !== null ? lectureData.length : 0}\n                        pageRangeDisplayed={5}\n                        prevPageText={\"‹\"}\n                        nextPageText={\"›\"}\n                        onChange={handlePageChange}\n                    />\n                    {/* 강의별 상세 내용 박스 */}\n                    {selectedLecture !== null?\n                    <div className=\"show-lecture-detail\">\n                        <div className=\"detail-title\">\n                            <h2>{lectureData[selectedLecture].name}</h2>\n                            <span>{lectureData[selectedLecture].instructor_name} </span>\n                            <span className=\"lecture-detail-date\">강의가능기간: {lectureData[selectedLecture].date !== null && lectureData[selectedLecture].date.length !== 0? lectureData[selectedLecture].date : \"추후협의\"}</span>\n                        </div>\n                        <div className=\"detail-content\">\n                            <div className=\"detail-sub-info\">\n                                <span>강의 가능 지역</span>\n                                <span>: {lectureData[selectedLecture].region} </span>\n                                <span>강의 주제</span>\n                                <span>: {lectureDetail !== null ? lectureDetail[0].topic : \"\"}</span>\n                                {lectureData[selectedLecture].sample_url !== null && lectureData[selectedLecture].sample_url !== \"null\" && lectureData[selectedLecture].sample_url !== \"\" ? <span>샘플강의보기</span>:null}\n                                {lectureData[selectedLecture].sample_url !== null && lectureData[selectedLecture].sample_url !== \"null\" && lectureData[selectedLecture].sample_url !== \"\" ? <span>: <a href={lectureData[selectedLecture].sample_url !== null ? lectureData[selectedLecture].sample_url : \"\"}>{lectureData[selectedLecture].sample_url}</a></span>:null}\n                            </div>\n                            <p>\n                                {lectureData[selectedLecture].intro !== null && lectureData[selectedLecture].intro !== \"null\" && lectureData[selectedLecture].intro !== \"\"? lectureData[selectedLecture].intro.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>):\"\"}\n                            </p>\n\n                            <div className=\"detail-instructor\">\n                                <img className=\"detail-inst-image\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+lectureData[selectedLecture].instructor_image} alt=\"lecture page\" />\n                                <div className=\"detail-inst-info\">\n                                    {/* <h3 className=\"mb15\">{lectureData[selectedLecture].instructor_name.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)} {lectureData[selectedLecture].instructor_position}</h3> */}\n                                    <h3 className=\"mb15\">{lectureData[selectedLecture].instructor_name} {lectureData[selectedLecture].instructor_position}</h3>\n                                    <p className=\"mb15 fs13\">\n                                    {lectureData[selectedLecture].instructor_intro.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}\n                                    </p>\n                                    <p className=\"fs13\">\n                                    {lectureData[selectedLecture].instructor_memo.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}\n                                    </p>\n                                </div>\n                            </div>\n                            {\n                                lectureData[selectedLecture].date !== null && lectureData[selectedLecture].date.length !== 0?\n                                <Calendar readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} clickedLecture={clickedLecture}/>:\n                                null\n                            }\n                            {\n                                window.sessionStorage.getItem('token') !== null && parseInt(window.sessionStorage.getItem(\"status\")) === 0 && window.sessionStorage.getItem('expires_at') >= today.getTime()?\n                                <Link\n                                to={{\n                                    pathname: process.env.REACT_APP_DEFAULT_URL+\"lecture/application\",\n                                    state: {\n                                        lecture: lectureData[selectedLecture]\n                                    }\n                                }}\n                                className=\"mt20 go-form\"\n                                >신청 하러 가기</Link>:\n                                <Link onClick={applicationCheck} className=\"mt20 go-form\">신청 하러 가기</Link>\n                            }\n                        </div>\n\n                    </div>:null\n                    }\n\n                    <div className=\"feedback-wrapper\">\n                        <h2 className=\"main-title mb30\">강의 후기({feedbackInfo !== null ? feedbackInfo.length : 0})</h2>\n                        <Swiper\n                            spaceBetween={30}\n                            effect={'fade'}\n                            centeredSlides={true}\n                            loop={true} loopFillGroupWithBlank={true}\n                            pagination={{\n                                \"clickable\": true\n                            }}\n                            navigation={true}\n                            className=\"mySwiper\">\n                                {feedbackFileLoading === false && feedbackFile !== null?\n                                    feedbackFile.map((data, index) => (\n                                        <SwiperSlide key = {index} slot= {index === 0? \"container-start\": \"\"}>\n                                            <div className=\"feedback-gallery\">\n                                                {data.map((dataUnit, index2) => (\n                                                    <img key={index2} className=\"\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+dataUnit} alt=\"lecture page\"\n                                                    onError={(e) => {\n                                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                                    }}/>\n                                                ))}\n                                            </div>\n                                        </SwiperSlide>\n                                    ))\n                                    : feedbackFileLoading === false?\n                                    null:\n                                    <ReactLoading type=\"spin\" color=\"#05589c\" />\n                                }\n                        </Swiper>\n                        <div className=\"feedback-table\">\n                            { feedbackInfo !== null && feedbackInfo.length !== 0?\n                            feedbackCurrentPosts(feedbackInfo).map((feedback, index) =>\n                            <div key={feedback.id} className=\"feedback-row\" onClick = {() => {feedbackClick(feedback.id)}}>\n                                <span className=\"feedback-title feedback-info\">{feedback.lecture_name} _ {feedback.instructor_name} {feedback.position_name}</span>\n                                <span className=\"feedback-info\">작성자명: {feedback.church_name}</span>\n                                <div className=\"mb10\">\n                                    <span className=\"mr15\">강사\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) =>\n                                            <img key={index} style={{marginBottom:0, marginTop:'-3px'}} className=\"rating_star\" src={data <= feedback.lecture_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                        )\n                                    }\n                                    </span>\n                                    <span>강의\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) =>\n                                            <img key={index} style={{marginBottom:0, marginTop:'-3px'}} className=\"rating_star\" src={data <= feedback.instructor_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                        )\n                                    }\n                                    </span>\n                                </div>\n                                <p className={selectedFeedback === feedback.id ? \"feedback-full-content\" : \"feedback-content\"}>{feedback.content.value}</p>\n                            </div>\n                            )\n                            :\n                            <div className=\"no-content\">피드백이 없습니다.</div>\n                        }\n                        </div>\n                        <ContentPagination\n                            activePage={feedbackPage}\n                            itemsCountPerPage={feedbackPostsPerPage}\n                            totalItemsCount={feedbackInfo !== null ? feedbackInfo.length : 0}\n                            pageRangeDisplayed={5}\n                            prevPageText={\"‹\"}\n                            nextPageText={\"›\"}\n                            onChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LectureSubject;\n","\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from '../../modules/calendar/read_calendar';\nimport ContentPagination from \"react-js-pagination\";\n\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\n// import SwiperCore, {\n//     EffectFade, Autoplay, Navigation, Pagination\n//   } from 'swiper/core';\n\nimport \"../../../assets/css/layout.css\";\nimport \"../../../assets/css/lecture.css\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/feedback.css';\n\n\nfunction LectureInstructor(props) {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [selectedInst, setSelectedInst] = useState(null);\n    const [selectedFeedback, setSelectedFeedback] = useState(null);\n    // const [selectedLectureInfo, setselectedLectureInfo] = useState(null)\n\n    const [calendarInfo, setcalendarInfo] = useState(null);\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    // eslint-disable-next-line no-unused-vars\n    const [feedbackPage, setfeedbackPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [feedbackPostsPerPage, setfeedbackPostsPerPage] = useState(10);\n\n    const [instructorData, setInstructorData] = useState(null);\n    const [instructorLoading, setInstructorLoading] = useState(null);\n    const [lectureLoading, setLectureLoading] = useState(false);\n    const [lectureData, setLectureData] = useState(null);\n    const [feedbackInfo, setfeedbackInfo] = useState(null);\n    // eslint-disable-next-line no-unused-vars\n    const [avgLectureStar, setavgLectureStar] = useState(0);\n    // eslint-disable-next-line no-unused-vars\n    const [avgInstructorStar, setavgInstructorStar] = useState(0);\n    const [instructorDetail, setinstructorDetail] = useState(null);\n\n    const [feedbackFile, setFeedbackFile] = useState(null);\n    const [feedbackFileLoading, setFeedbackFileLoading] = useState(false);\n\n    const [settingInfo, setsettingInfo] = useState(null);\n    const today = new Date();\n\n    useEffect(() => {\n        readInstructor();\n        readLecture(null);\n        readFeedback();\n        readFeedbackFile();\n        readSettingInfo();\n        document.getElementsByClassName(\"swiper-button-next\")[0].click();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    useEffect(() => {\n        setSelectedLecture(null);\n    }, [page])\n\n    function feedbackClick(fb) {\n        if(selectedFeedback === null)\n            setSelectedFeedback(fb)\n        else\n            setSelectedFeedback(null)\n    }\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)\n    }\n\n    const readInstructor = async () => {\n        setInstructorLoading(true);\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/all', {\n                params: {\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        var instructorData = [];\n\n        for(var i=0; i < response.data.length; i+= 8){\n            var dataUnit = [];\n            for(var j=i; j<i+8 && j< response.data.length; j++){\n                dataUnit.push(response.data[j]);\n            }\n            instructorData.push(dataUnit);\n        }\n        setInstructorData(instructorData);\n        setInstructorLoading(false);\n    }\n\n    const readFeedback = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/instructor', {\n                params: {\n                    instructor_id: selectedInst,\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setfeedbackInfo(response.data);\n    }\n\n\n    const readFeedbackByLecture = async (lecture_id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/lecture', {\n                params: {\n                    lecture_id: lecture_id,\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setfeedbackInfo(response.data);\n        var lecture_star = 0;\n        var instructor_star = 0;\n        if(response.data.length > 0) {\n            response.data.forEach(data => {\n                lecture_star += data.lecture_star;\n                instructor_star += data.instructor_star;\n            });\n            lecture_star /= response.data.length;\n            instructor_star /= response.data.length;\n        }\n        setavgLectureStar(Math.round(lecture_star * 100) / 100);\n        setavgInstructorStar(Math.round(instructor_star * 100) / 100);\n    }\n\n\n    function selectInstructor (id) {\n        if(selectedInst === id){\n            setSelectedInst(null);\n            setinstructorDetail(null);\n            readLecture(null);\n        }else{\n            setSelectedInst(id);\n            readLecture(id);\n            readInstructorInfo(id);\n        }\n    }\n\n    const readLecture = async (id) => {\n        setLectureLoading(true);\n        setSelectedLecture(null);\n\n        if(id !== null) {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/instructor/'+id, {\n                    params: {\n                        token: window.sessionStorage.getItem('token') ,\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setLectureData(response.data);\n\n            setLectureLoading(false);\n        }else{\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture', {\n                    params: {\n                        token: window.sessionStorage.getItem('token') ,\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setLectureData(response.data);\n\n            setLectureLoading(false);\n        }\n    }\n\n    function lectureClick(id) {\n\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = today.getMonth() + 1;\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        if (selectedLecture === id) {\n            setSelectedLecture(null);\n            readFeedback();\n            readFeedbackFile();\n        }\n        else{\n            setSelectedLecture(id);\n            readFeedbackByLecture(lectureData[id].id);\n            readFeedbackFileByLecture(lectureData[id].id);\n            readMainCalendar(date, lectureData[id].id);\n        }\n    }\n\n    const readMainCalendar = async(date, id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/lecture', {\n                params: {\n                    date: date,\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n    }\n\n    const readInstructorInfo = async(instructor_id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/instructorId/'+instructor_id, {\n                params: {\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setinstructorDetail(response.data)\n\n    }\n    \n    const readFeedbackFile = async () => {\n        setFeedbackFileLoading(true);\n\n        var categoryData = [];\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/instructor', {\n                params: {\n                    instructor_id: selectedInst,\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n\n        for(var i=0; i < response.data.length; i+= 4){\n            var dataUnit = [];\n            for(var j=i; j<i+4 && j< response.data.length; j++){\n                dataUnit.push(response.data[j]);\n            }\n            categoryData.push(dataUnit);\n        }\n\n        setFeedbackFile(categoryData);\n        setFeedbackFileLoading(false);\n    }\n\n    const readFeedbackFileByLecture = async (id) => {\n        setFeedbackFileLoading(true);\n\n        var categoryData = [];\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/lecture', {\n                params: {\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n\n        for(var i=0; i < response.data.length; i+= 4){\n            var dataUnit = [];\n            for(var j=i; j<i+4 && j< response.data.length; j++){\n                dataUnit.push(response.data[j]);\n            }\n            categoryData.push(dataUnit);\n        }\n\n        setFeedbackFile(categoryData);\n        setFeedbackFileLoading(false);\n    }\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = lectureData.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    function feedbackCurrentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = feedbackInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    function applicationCheck () {\n        if(window.sessionStorage.getItem('token') !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()){\n            alert(\"사용자 권한으로만 사용할 수 있는 기능입니다.\");\n        }else{\n            alert(\"로그인 후 사용하실 수 있는 기능입니다. 상단에 로그인 버튼을 눌러주세요.\");\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+\"image/lecture_page_inst.jpg\"} alt=\"lecture page\" \n                onError={(e) => {\n                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                }}/>\n                <div className=\"page-info\">\n                    <h2 className=\"white_color\">강의 둘러보기</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"lecture_page_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title active\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>일자별</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                <div className=\"subject-carousel\">\n                <Swiper\n                    spaceBetween={30}\n                    effect={'fade'}\n                    centeredSlides={true}\n                    loop={true} loopFillGroupWithBlank={true}\n                    pagination={{\n                        \"clickable\": true\n                    }}\n                    navigation={true}\n                    className=\"mySwiper\">\n                        {instructorLoading === false ?\n                    instructorData.map((data, index) => (\n                        <SwiperSlide key = {index}>\n                            <div className=\"subject-wrapper\" >\n                                {data.map((dataUnit, index2) => (\n                                    <div key={index2} className={selectedInst !== dataUnit.id? \"subject \": \"subject selected-subject\"} onClick = {() => {selectInstructor(dataUnit.id)}}>{dataUnit.inst_name}</div>\n                                ))}\n                            </div>\n                        </SwiperSlide>\n                    ))\n                    : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                }\n                    </Swiper>\n                    </div>\n                    <div className={selectedInst ? \"mb40\" : \"no-detail\"}>\n                    <div className=\"detail-instructor\">\n                        <img className=\"detail-inst-image\" src={instructorDetail !== null ? process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+instructorDetail.image : \"\"} alt=\"lecture page\" \n                        onError={(e) => {\n                            e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                        }}/>\n                        <div className=\"detail-inst-info\">\n                            <h3 className=\"mb15\">{instructorDetail !== null ? instructorDetail.name : \"\"} {instructorDetail !== null? instructorDetail.position_name:\"\"}</h3>\n                            <p className=\"mb15 fs13\">\n                                {instructorDetail !== null ? instructorDetail.intro.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) : \"\"}\n                            </p>\n                            <p className=\"mb15 fs13\">\n                                {instructorDetail !== null ? instructorDetail.memo.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) : \"\"}\n                            </p>\n                        </div>\n                    </div>\n                    </div>\n\n                    <div className=\"table-wrapper\">\n                        <div className=\"subject-table-row\">\n                            <div className=\"th\">주제명</div>\n                            <div className=\"th\">강의명</div>\n                            <div className=\"th date\">기간</div>\n                            <div className=\"th location\">강의 지역</div>\n                        </div>\n                        {lectureLoading === false && lectureData !== null && lectureData.length > 0 ?\n                        currentPosts(lectureData).map((data, index) => (\n                            <div key={index} className={selectedLecture === index+(page-1)*postsPerPage ? \"subject-table-row selected-subject\": \"subject-table-row\"} onClick = {() => {lectureClick(index+(page-1)*postsPerPage)}}>\n                                <div className=\"td\">{data.topic}</div>\n                                <div className=\"td\">{data.name}</div>\n                                <div className=\"td date\">{data.date !== null && data.date.length !== 0? data.date: \"추후협의\"}</div>\n                                <div className=\"td location\">{data.region}</div>\n                            </div>\n                        )):\n                        lectureLoading === true?\n                        <div className=\"lecture-loading\"><ReactLoading type=\"spin\" color=\"rgb(5 88 156 / 47%)\" className=\"lecture-loading-data\" width=\"50px\"/></div>:\n                        <div className=\"lecture-no-data\">선택하신 주제에 해당하는 강의가 없습니다.</div>\n                        }\n                    </div>\n                    <ContentPagination\n                        activePage={page}\n                        itemsCountPerPage={postsPerPage}\n                        totalItemsCount={lectureData !== null ? lectureData.length : 0}\n                        pageRangeDisplayed={5}\n                        prevPageText={\"‹\"}\n                        nextPageText={\"›\"}\n                        onChange={handlePageChange}\n                    />\n                    {/* 강의별 상세 내용 박스 */}\n                    {selectedLecture !== null?\n                    <div className=\"show-lecture-detail\">\n                        <div className=\"detail-title\">\n                            <h2>{lectureData[selectedLecture].name}</h2>\n                            <span>{instructorDetail !== null ? instructorDetail.name : lectureData[selectedLecture].instructor_name}</span>\n                            <span className=\"lecture-detail-date\">강의가능기간: {lectureData[selectedLecture].date != null && lectureData[selectedLecture].date.length !== 0? lectureData[selectedLecture].date: \"추후협의\"}</span>\n                        </div>\n                        <div className=\"detail-content\">\n                            <div className=\"detail-sub-info\">\n                                <span>강의 가능 지역</span>\n                                <span>: {lectureData[selectedLecture].region} </span>\n                                <span>강의 주제 카테고리\u001d</span>\n                                <span>: {lectureData[selectedLecture].topic}</span>\n                                {lectureData[selectedLecture].sample_url !== null && lectureData[selectedLecture].sample_url !== \"null\" && lectureData[selectedLecture].sample_url !== \"\" ? <span>샘플강의보기</span>:null}\n                                {lectureData[selectedLecture].sample_url !== null && lectureData[selectedLecture].sample_url !== \"null\" && lectureData[selectedLecture].sample_url !== \"\" ? <span>: <a href={lectureData[selectedLecture].sample_url}>{lectureData[selectedLecture].sample_url}</a></span>:null}\n                            </div>\n                            <p className=\"mb30\">\n                            {lectureData[selectedLecture].intro !== null && lectureData[selectedLecture].intro !== \"null\" && lectureData[selectedLecture].intro !== \"\"? lectureData[selectedLecture].intro.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>):\"\"}\n                            </p>\n                            {instructorDetail === null &&\n                                <div className=\"detail-instructor mb30\">\n                                    <img className=\"detail-inst-image\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+lectureData[selectedLecture].instructor_image} alt=\"lecture page\" />\n                                    <div className=\"detail-inst-info mb20\">\n                                        <h3 className=\"mb15\">{lectureData[selectedLecture].instructor_name} {lectureData[selectedLecture].instructor_position}</h3>\n                                        <p className=\"mb15 fs13\">\n                                        {lectureData[selectedLecture].instructor_intro !== null ? lectureData[selectedLecture].instructor_intro.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>): \"\"}\n                                        </p>\n                                        <p className=\"fs13\">\n                                        {lectureData[selectedLecture].instructor_memo !== null ? lectureData[selectedLecture].instructor_memo.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>): \"\"}\n                                        </p>\n                                    </div>\n                                </div>\n                            }\n                            <div className=\"lecture-inst-calendar\">\n                                {\n                                    lectureData[selectedLecture].date != null && lectureData[selectedLecture].date.length !== 0?\n                                    <Calendar readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} clickedLecture={lectureData[selectedLecture]}/>:\n                                    null\n                                }\n                            </div>\n                            {\n                                window.sessionStorage.getItem('token') !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()?\n                                <Link \n                                to={{\n                                    pathname: process.env.REACT_APP_DEFAULT_URL+\"lecture/application\",\n                                    state: {\n                                        lecture: lectureData[selectedLecture]\n                                    }\n                                }}\n                                className=\"mt20 go-form\">신청 하러 가기</Link>:\n                                <Link onClick={applicationCheck} className=\"mt20 go-form\">신청 하러 가기</Link>\n                            }\n                            </div>\n                    </div>:null\n                    }\n\n                    <div className=\"feedback-wrapper\">\n                        <h2 className=\"main-title mb30\">강의 후기({feedbackInfo !== null ? feedbackInfo.length : 0})</h2>\n                        <Swiper\n                            spaceBetween={30}\n                            effect={'fade'}\n                            centeredSlides={true}\n                            loop={true} loopFillGroupWithBlank={true}\n                            pagination={{\n                                \"clickable\": true\n                            }}\n                            navigation={true}\n                            className=\"mySwiper\">\n                                {feedbackFileLoading === false && feedbackFile !== null?\n                                    feedbackFile.map((data, index) => (\n                                        <SwiperSlide key = {index}>\n                                            <div className=\"feedback-gallery\">\n                                                {data.map((dataUnit, index2) => (\n                                                    <img key={index2} className=\"\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+dataUnit} alt=\"lecture page\" \n                                                    onError={(e) => {\n                                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                                    }}/>\n                                                ))}\n                                            </div>\n                                        </SwiperSlide>\n                                    ))\n                                    : feedbackFileLoading === false?\n                                    null:\n                                    <ReactLoading type=\"spin\" color=\"#05589c\" />\n                                }\n                        </Swiper>\n                        <div className=\"feedback-table\">\n                        { feedbackInfo !== null && feedbackInfo.length !== 0?\n                            feedbackCurrentPosts(feedbackInfo).map((feedback, index) =>\n                            <div key={feedback.id} className=\"feedback-row\" onClick = {() => {feedbackClick(feedback.id)}}>\n                                <span className=\"feedback-title feedback-info\">{feedback.lecture_name} _ {feedback.instructor_name} {feedback.position_name}</span>\n                                <span className=\"feedback-info\">작성자명: {feedback.church_name}</span>\n                                \n                                <div className=\"mb10\">\n                                    <span className=\"mr15\">강사 \n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) =>\n                                            <img key={index} style={{marginBottom:0, marginTop:'-3px'}} className=\"rating_star\" src={data <= feedback.lecture_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                        )\n                                    }\n                                    </span>\n                                    <span>강의 \n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) =>\n                                            <img key={index} style={{marginBottom:0, marginTop:'-3px'}} className=\"rating_star\" src={data <= feedback.instructor_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                        )\n                                    }\n                                    </span>\n                                </div>\n                                <p className={selectedFeedback === feedback.id ? \"feedback-full-content\" : \"feedback-content\"}>{feedback.content}</p>\n                            </div>\n                            )\n                            :\n                            <div className=\"no-content\">피드백이 없습니다.</div>\n                        }\n                        </div>\n                        <ContentPagination\n                            activePage={feedbackPage}\n                            itemsCountPerPage={feedbackPostsPerPage}\n                            totalItemsCount={feedbackInfo !== null ? feedbackInfo.length : 0}\n                            pageRangeDisplayed={5}\n                            prevPageText={\"‹\"}\n                            nextPageText={\"›\"}\n                            onChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LectureInstructor;\n","import React, { useCallback, useRef, useEffect, useState } from \"react\";\n\nimport TUICalendar from \"@toast-ui/react-calendar\";\n// import { ISchedule, ICalendarInfo } from \"tui-calendar\";\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport '../../../assets/css/calendar.css';\nimport \"tui-time-picker/dist/tui-time-picker.css\";\nimport WhiteButton from '../../modules/button/white_button';\n\nconst allcalendarColor = [\"#ef6f87\",\"#e49d5a\", \"#e4ce5a\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\nconst calendarColor = [\"#fbbc05\", \"#cccccc\", \"#4285f4\", \"#7ddc8b\" ,\"#34A853\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n// const calendarInstructor = [\"#ef6f87\",\"#e49d5a\", \"#2196f3\", \"#7ddc8b\" ,\"#c0afff\",\"#9fcae8\",\"#F23DA0\", \"#3C5FA6\", \"#F28705\", \"#467326\", \"#D99066\", \"#ff5722\"];\n\n\nfunction LectureDailyCalendar(props) {\n    const cal = useRef(null);\n    const [schedules, setschedules] = useState([])\n    const [calendars, setcalendars] = useState([])\n    const [year, setyear] = useState(null)\n    const [month, setmonth] = useState(null)\n    const [clickedDate, setclickedDate] = useState(\"날짜를 선택해주세요.\");\n\n    useEffect(() => {\n        if(props.calendarData !== null) {\n            const data = props.calendarData;\n            \n            var index = 0;\n            var tempSchedule = [];\n            var tempCalendar = [];\n            \n            if(props.path !== null && (props.path ===\"/\" || props.path ===\"/lecture/date\")) {\n\n                for(var i=0 ; i<data.length ; i++) {\n                    tempSchedule.push({\n                        calendarId: data[i].id,\n                        category: \"time\",\n                        isAllDay: true,\n                        isVisible: true,\n                        title: data[i].name,\n                        id: data[i].id,\n                        body: \"[강사명] \"+data[i].inst_name+\"- [주제]\" +data[i].topic_list,\n                        start: data[i].date,\n                        end: data[i].date,\n                        location: data[i].region_list\n                    })\n\n                    // eslint-disable-next-line no-loop-func\n                    if(!tempCalendar.find(element => element.id === data[i].id)) {\n                        tempCalendar.push({\n                            id: data[i].id,\n                            name: data[i].name,\n                            color: allcalendarColor[index],\n                            bgColor: allcalendarColor[index]+\"40\",\n                            dragBgColor: allcalendarColor[index]+\"40\",\n                            borderColor: allcalendarColor[index]\n                        })\n                        index++;\n                    }\n                    \n                    if(index === calendarColor.length)\n                        index=0;\n                }\n            }\n            else if(props.path === \"/mypage/contact\" || props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") {\n                // var tempSchedule = [];\n                // var tempCalendar = [];\n\n                // eslint-disable-next-line no-redeclare\n                for(var i=0 ; i<data.length ; i++) {\n                    var status_id = 0;\n                    var start_time = data[i].date;\n                    var end_time = data[i].date;\n                    var isAllDay = true;\n                    \n                    // 신청자가 있을 때\n                    if(data[i].form_id) {\n                        // status\n                        if(data[i].status === 0)\n                            status_id = 0\n                        else if(data[i].status === 1)\n                            status_id = 1\n                        else if(data[i].status === 2) {\n                            status_id = 2\n                            start_time = data[i].date+\" \"+data[i].contact_start_date\n                            end_time = data[i].date+\" \"+data[i].contact_end_date\n                            isAllDay = false\n                        }\n                        \n                        // 취소된 컨택내역은 안보여줌\n                        if(data[i].status !== -1)\n                            tempSchedule.push({\n                                calendarId: status_id,\n                                category: \"time\",\n                                isAllDay: isAllDay,\n                                isVisible: true,\n                                title: data[i].name,\n                                id: status_id,\n                                body: \"[주제]\" +data[i].topic_list,\n                                start: start_time,\n                                end: end_time,\n                                location: data[i].region_list\n                            })\n                    } else {\n                        tempSchedule.push({\n                            calendarId: 3,\n                            category: \"time\",\n                            isAllDay: true,\n                            isVisible: true,\n                            title: data[i].name,\n                            id: 3,\n                            body: \"[주제]\" +data[i].topic_list,\n                            start: data[i].date,\n                            end: data[i].date,\n                            location: data[i].region_list\n                        })\n                    }\n                }\n\n                tempCalendar.push({\n                    id: 0,\n                    name: \"컨택요청\",\n                    color: calendarColor[0],\n                    bgColor: calendarColor[0]+\"40\",\n                    dragBgColor: calendarColor[0]+\"40\",\n                    borderColor: calendarColor[0]\n                })\n                tempCalendar.push({\n                    id: 1,\n                    name: \"컨택진행중\",\n                    color: calendarColor[1],\n                    bgColor: calendarColor[1]+\"40\",\n                    dragBgColor: calendarColor[1]+\"40\",\n                    borderColor: calendarColor[1]\n                })\n                tempCalendar.push({\n                    id: 2,\n                    name: \"컨택완료\",\n                    color: calendarColor[2],\n                    bgColor: calendarColor[2]+\"40\",\n                    dragBgColor: calendarColor[2]+\"40\",\n                    borderColor: calendarColor[2]\n                })\n                tempCalendar.push({\n                    id: 3,\n                    name: \"컨택취소\",\n                    color: calendarColor[3],\n                    bgColor: calendarColor[3]+\"40\",\n                    dragBgColor: calendarColor[3]+\"40\",\n                    borderColor: calendarColor[3]\n                })\n                tempCalendar.push({\n                    id: 4,\n                    name: \"신청자없음\",\n                    color: calendarColor[4],\n                    bgColor: calendarColor[4]+\"40\",\n                    dragBgColor: calendarColor[4]+\"40\",\n                    borderColor: calendarColor[4]\n                })\n            }\n\n            setschedules(tempSchedule)\n            setcalendars(tempCalendar)\n\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.calendarData])\n\n\n    useEffect(() => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.today();\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y);\n\n            if(props.clickedLecture !== null && (props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\"))\n                props.readMainCalendar(date, props.clickedLecture.id);\n            else\n                props.readMainCalendar(date)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        const calendarInstance = cal.current.getInstance();\n        calendarInstance.today();\n        var m = calendarInstance.getDate().getMonth() + 1;\n        var y = calendarInstance.getDate().getFullYear();\n        if(m < 10)\n            m = \"0\"+m;\n        // var date = y+\"-\"+m;\n\n        setmonth(m);\n        setyear(y);\n    }, [props.clickedLecture])\n\n\n    const onClickSchedule = useCallback((e) => {\n        const { calendarId, id } = e.schedule;\n        cal.current.calendarInst.getElement(id, calendarId);\n\n    }, []);\n\n    const onBeforeCreateSchedule = useCallback((scheduleData) => {\n        scheduleData.guide.clearGuideElement();\n        var date = scheduleData.start._date\n        var year = date.getFullYear(); \n        var month = date.getMonth() + 1; \n        var day = date.getDate();\n        if(month < 10)\n            month = \"0\"+month;\n        if(day < 10)\n            day = \"0\"+day;\n        var click_date = year+\"-\"+month+\"-\"+day;\n        setclickedDate(click_date);\n        props.readLecture(click_date);\n\n        \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    \n\n    function _getFormattedTime(time) {\n        const date = new Date(time);\n        const h = date.getHours();\n        const m = date.getMinutes();\n\n        return `${h}:${m}`;\n    }\n\n    function _getTimeTemplate(schedule, isAllDay) {\n        var html = [];\n\n        if (!isAllDay) {\n            html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n        }\n        if (schedule.isPrivate) {\n            html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n            html.push(\" Private\");\n        } else {\n            if (schedule.isReadOnly) {\n                html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n            } else if (schedule.recurrenceRule) {\n                html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n            } else if (schedule.attendees.length) {\n                html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n            } else if (schedule.location) {\n                html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n            }\n            html.push(\" \" + schedule.title);\n        }\n\n        return html.join(\"\");\n    }\n\n    const templates = {\n        time: function (schedule) {\n            return _getTimeTemplate(schedule, false);\n        }\n    };\n\n\n    const NextButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.next();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y);\n\n            if((props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") && props.clickedLecture !== null)\n                props.readMainCalendar(date, props.clickedLecture.id);\n            else\n                props.readMainCalendar(date)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clickedLecture]);\n\n    const PrevButton = useCallback((e) => {\n        \n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.prev();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            if((props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") && props.clickedLecture !== null) {\n                props.readMainCalendar(date, props.clickedLecture.id);\n            }\n            else\n                props.readMainCalendar(date)\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clickedLecture]);\n\n    const TodayButton = useCallback((e) => {\n        if (cal !== null) {\n            const calendarInstance = cal.current.getInstance();\n            calendarInstance.today();\n\n            var m = calendarInstance.getDate().getMonth() + 1;\n            var y = calendarInstance.getDate().getFullYear();\n            if(m < 10)\n                m = \"0\"+m;\n            var date = y+\"-\"+m;\n\n            setmonth(m);\n            setyear(y)\n\n            if((props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") && props.clickedLecture !== null)\n                props.readMainCalendar(date, props.clickedLecture.id);\n            else\n                props.readMainCalendar(date)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clickedLecture]);\n\n    const clickAllLecture = () => {\n        setclickedDate(\"날짜를 선택해주세요.\");\n        props.readLecture(\"\");\n    }\n\n    return (\n        <div>\n        \n        <h2 className=\"calendar-title\">{year}년 {month}월의 강의</h2>\n            <div className=\"mb15\">\n                <WhiteButton class=\"mr15\" name=\"전체 강의 보기\" click={clickAllLecture}/>\n                <WhiteButton class=\"mr15\" name=\"오늘날짜\" click={TodayButton}/>\n                <WhiteButton class=\"mr15\" name=\"<\" click={PrevButton}/>\n                <WhiteButton name=\">\" click={NextButton}/>\n            </div>\n            <div className=\"mb10\">\n                특정 날짜를 클릭하시면 해당 날짜의 강의들을 볼 수 있습니다.\n            </div>\n            <div className=\"mb10\" style={{fontSize:'17px', fontWeight:'600'}}>\n                선택 날짜: <span className=\"mr10\">{clickedDate}</span>\n            </div>\n            {props.path !== null && (props.path === \"/mypage/contact\" || props.path === \"/lecture/subject\" || props.path === \"/lecture/instructor\" || props.path === \"/admin/lecture\" || props.path === \"/mypage/lecture\") ?\n            <div style={{textAlign:\"right\", marginBottom:\"15px\"}}>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[0]}}></span>\n                    <span>컨택요청</span>\n                </span>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[1]}}></span>\n                    <span>컨택진행중</span>\n                </span>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[2]}}></span>\n                    <span>컨택완료</span>\n                </span>\n                <span className=\"mr15\">\n                    <span className=\"color-circle\" style={{background:calendarColor[3]}}></span>\n                    <span>신청없음</span>\n                </span>\n            </div> :\n            null\n            }\n            \n            <TUICalendar\n                ref={cal}\n                height=\"100%\"\n                view=\"month\"\n                useCreationPopup={false}\n                useDetailPopup={true}\n                template={templates}\n                calendars={calendars}\n                schedules={schedules}\n                onClickSchedule={onClickSchedule}\n                onBeforeCreateSchedule={onBeforeCreateSchedule}\n            />\n        </div>\n    );\n}\n\nexport default LectureDailyCalendar;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from '../../modules/calendar/lecture_daily_calendar';\nimport DetailCalendar from '../../modules/calendar/read_calendar';\nimport ContentPagination from \"react-js-pagination\";\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\n\nimport \"../../../assets/css/layout.css\";\nimport \"../../../assets/css/lecture.css\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/feedback.css';\n\nfunction LectureDate(prop) {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    // eslint-disable-next-line no-unused-vars\n    const [selectedInst, setSelectedInst] = useState(null);\n    const [selectedFeedback, setSelectedFeedback] = useState(null)\n    const [calendarInfo, setcalendarInfo] = useState(null)\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [feedbackPage, setfeedbackPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [feedbackPostsPerPage, setfeedbackPostsPerPage] = useState(10);\n    const [lectureInfo, setlectureInfo] = useState(null);\n    const [lectureLoading, setlectureLoading] = useState(true);\n    const [calendarInfoByLecture, setcalendarInfoByLecture] = useState(null);\n\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    // const [lectureData, setlectureData] = useState(null); // read할때 사용할 변수\n    const [feedbackInfo, setfeedbackInfo] = useState(null);\n\n    const [feedbackFile, setFeedbackFile] = useState(null);\n    const [feedbackFileLoading, setFeedbackFileLoading] = useState(false);\n\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    const today = new Date();\n\n    useEffect(() => {\n        let today = new Date();\n\n        let year = today.getFullYear(); // 년도\n        let month = today.getMonth() + 1;  // 월\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        readMainCalendar(date)\n        readFeedback();\n        readLecture(\"\");\n        readSettingInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    useEffect(() => {\n        setSelectedLecture(null);\n    }, [page])\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)\n\n    }\n\n    const readMainCalendar = async(date) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/main',{\n                params:{\n                    date: date,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n    }\n\n    const readCalendarByLecture = async(date, id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/lecture', {\n                params: {\n                    date: date,\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfoByLecture(response.data)\n    }\n\n    const readLecture = async(date) => {\n        setlectureLoading(true);\n        if(date === \"\") {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/date/empty', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setlectureInfo(response.data);\n            readFeedbackFile(null);\n        } else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'lecture/date/'+date, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setlectureInfo(response.data);\n            readFeedbackFile(date);\n        }\n        setlectureLoading(false);\n    }\n\n    const readFeedback = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/instructor', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setfeedbackInfo(response.data);\n    }\n\n\n    function feedbackClick(fb) {\n        if(selectedFeedback === null)\n            setSelectedFeedback(fb)\n        else\n            setSelectedFeedback(null)\n    }\n\n    function clickLecture(data) {\n        if (selectedLecture === null || selectedLecture !== data) {\n            let today = new Date();\n            let year = today.getFullYear();\n            let month = today.getMonth() + 1;\n            if(month<10)\n                month=\"0\"+month\n            var date = year+\"-\"+month;\n\n            setSelectedLecture(data);\n            readCalendarByLecture(date, data.id);\n            readFeedbackFileByLecture(data.id);\n        }\n        else\n            setSelectedLecture(null);\n    }\n\n    // function clickInstructor(e) {\n    //     if (selectedInst === null || e.target.attributes.getNamedItem('value').value != selectedInst)\n    //         setSelectedInst(e.target.attributes.getNamedItem('value').value);\n    //     else\n    //         setSelectedInst(null);\n    // }\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = lectureInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    function feedbackCurrentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = feedbackInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    function applicationCheck () {\n        if(window.sessionStorage.getItem('token') !== null && window.sessionStorage.getItem('expires_at') >= today.getTime()){\n            alert(\"사용자 권한으로만 사용할 수 있는 기능입니다.\");\n        }else{\n            alert(\"로그인 후 사용하실 수 있는 기능입니다. 상단에 로그인 버튼을 눌러주세요.\");\n        }\n    }\n\n    const readFeedbackFile = async (date) => {\n        setFeedbackFileLoading(true);\n\n        var categoryData = [];\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/date', {\n                params: {\n                    instructor_id: selectedInst,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n\n        for(var i=0; i < response.data.length; i+= 4){\n            var dataUnit = [];\n            for(var j=i; j<i+4 && j< response.data.length; j++){\n                dataUnit.push(response.data[j]);\n            }\n            categoryData.push(dataUnit);\n        }\n\n        setFeedbackFile(categoryData);\n        setFeedbackFileLoading(false);\n    }\n\n    const readFeedbackFileByLecture = async (id) => {\n        setFeedbackFileLoading(true);\n\n        var categoryData = [];\n\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/lecture', {\n                params: {\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n\n        for(var i=0; i < response.data.length; i+= 4){\n            var dataUnit = [];\n            for(var j=i; j<i+4 && j< response.data.length; j++){\n                dataUnit.push(response.data[j]);\n            }\n            categoryData.push(dataUnit);\n        }\n\n        setFeedbackFile(categoryData);\n        setFeedbackFileLoading(false);\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+\"image/lecture_page_daily.jpeg\"} alt=\"lecture page\"\n                onError={(e) => {\n                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                }}/>\n                <div className=\"page-info\">\n                    <h2 className=\"white_color\">강의 둘러보기</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"lecture_page_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n            <div className=\"left-navbar\">\n                <span>\n                    <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link>\n                </span>\n                <span>\n                    <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link>\n                </span>\n                <span>\n                    <Link className=\"sub-title active\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>일자별</Link>\n                </span>\n            </div>\n            <div className=\"right-content\">\n            <div className=\"ml25\">\n                <Calendar readLecture={readLecture} readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}/>\n            </div>\n\n            <div className=\"table-wrapper\">\n                <div className=\"subject-table-row\">\n                    <div className=\"th\">강사명</div>\n                    <div className=\"th\">강의명</div>\n                    <div className=\"th date\">기간</div>\n                    <div className=\"th location\">강의 지역</div>\n                </div>\n                {lectureLoading === false && lectureInfo !== null && lectureInfo.length > 0 ?\n                currentPosts(lectureInfo).map((data, index) => (\n                    <div key={index} className={selectedLecture === data ? \"subject-table-row selected-subject\": \"subject-table-row\"} onClick = {() => {clickLecture(data)}}>\n                        <div className=\"td\">{data.instructor_name}</div>\n                        <div className=\"td\">{data.name}</div>\n                        <div className=\"td date\">{data.date !== null && data.date.length !== 0? data.date: \"추후 협의\"}</div>\n                        <div className=\"td location\">{data.region}</div>\n                    </div>\n                )):\n                lectureLoading === true?\n                <div className=\"lecture-loading\"><ReactLoading type=\"spin\" color=\"rgb(5 88 156 / 47%)\" className=\"lecture-loading-data\" width=\"50px\"/></div>:\n                <div className=\"lecture-no-data\">선택하신 날짜에 강의가 없습니다.</div>\n                }\n            </div>\n            <ContentPagination\n                activePage={page}\n                itemsCountPerPage={postsPerPage}\n                totalItemsCount={lectureInfo !== null ? lectureInfo.length : 0}\n                pageRangeDisplayed={5}\n                prevPageText={\"‹\"}\n                nextPageText={\"›\"}\n                onChange={handlePageChange}\n            />\n\n            {selectedLecture !== null?\n                <div className=\"show-daily-detail\">\n                    <div className=\"detail-title\">\n                        <h2>{selectedLecture.name}</h2>\n                        <span>{selectedLecture.instructor_name}</span>\n                        <span className=\"lecture-detail-date\">강의가능기간: {selectedLecture.date !== null && selectedLecture.date.length !== 0? selectedLecture.date: \"추후 협의\"}</span>\n                    </div>\n                    <div className=\"detail-content\">\n                        <div className=\"detail-sub-info\">\n                            <span>강의 가능 지역</span>\n                            <span>: {selectedLecture.region} </span>\n                            <span>강의 주제 카테고리</span>\n                            <span>: {selectedLecture.topic} </span>\n                            {selectedLecture.sample_url !== null && selectedLecture.sample_url !== \"null\" && selectedLecture.sample_url !== \"\" ?<span>샘플강의보기</span>:null}\n                            {selectedLecture.sample_url !== null && selectedLecture.sample_url !== \"null\" && selectedLecture.sample_url !== \"\" ? <span>: <a href={selectedLecture.sample_url}>{selectedLecture.sample_url}</a></span>:null}\n                        </div>\n                        <p>\n                            {selectedLecture.intro !== null && selectedLecture.intro !== \"null\" && selectedLecture.intro !== \"\"? selectedLecture.intro.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>):\"\"}\n                        </p>\n\n                        <div className=\"detail-instructor\">\n                            <img className=\"detail-inst-image\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+selectedLecture.instructor_image} alt=\"lecture page\" />\n                            <div className=\"detail-inst-info mb30\">\n                                <h3 className=\"mb15\">{selectedLecture.instructor_name} {selectedLecture.instructor_position}</h3>\n                                <p className=\"mb15 fs13\">\n                                {selectedLecture.instructor_intro !== null ? selectedLecture.instructor_intro.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>):\"\"}\n                                </p>\n                                <p className=\"fs13\">\n                                {selectedLecture.instructor_memo !== null ? selectedLecture.instructor_memo.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>):\"\"}\n                                </p>\n                            </div>\n                        </div>\n                        {\n                            selectedLecture.date !== null && selectedLecture.date.length !== 0?\n                                <DetailCalendar readMainCalendar={readCalendarByLecture} calendarData={calendarInfoByLecture} path=\"/lecture/subject\" clickedLecture={selectedLecture}/>\n                                :null\n\n                        }\n                        {\n                            window.sessionStorage.getItem('token') !== null && parseInt(window.sessionStorage.getItem(\"status\")) === 0 && window.sessionStorage.getItem('expires_at') >= today.getTime()?\n                            <Link\n                            to={{\n                                pathname: process.env.REACT_APP_DEFAULT_URL+\"lecture/application\",\n                                state: {\n                                    lecture: selectedLecture\n                                }\n                            }}\n                            className=\"mt20 go-form\"\n                            >신청 하러 가기</Link>:\n                            <Link onClick={applicationCheck} className=\"mt20 go-form\">신청 하러 가기</Link>\n                        }\n                    </div>\n\n                </div>:null\n            }\n\n            <div className=\"feedback-wrapper\">\n                <h2 className=\"main-title mb30\">강의 후기({feedbackInfo !== null ? feedbackInfo.length : 0})</h2>\n                <Swiper\n                            spaceBetween={30}\n                            effect={'fade'}\n                            centeredSlides={true}\n                            loop={true} loopFillGroupWithBlank={true}\n                            pagination={{\n                                \"clickable\": true\n                            }}\n                            navigation={true}\n                            className=\"mySwiper\">\n                                {feedbackFileLoading === false && feedbackFile !== null?\n                                    feedbackFile.map((data, index) => (\n                                        <SwiperSlide key = {index}>\n                                            <div className=\"feedback-gallery\">\n                                                {data.map((dataUnit, index2) => (\n                                                    <img key={index2} className=\"\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+dataUnit} alt=\"lecture page\" \n                                                    onError={(e) => {\n                                                        e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                                    }}/>\n                                                ))}\n                                            </div>\n                                        </SwiperSlide>\n                                    ))\n                                    : feedbackFileLoading === false?\n                                    null:\n                                    <ReactLoading type=\"spin\" color=\"#05589c\" />\n                                }\n                </Swiper>\n                <div className=\"feedback-table\">\n                    { feedbackInfo !== null && feedbackInfo.length !== 0?\n                        feedbackCurrentPosts(feedbackInfo).map((feedback, index) =>\n                        <div key={feedback.id} className=\"feedback-row\" onClick = {() => {feedbackClick(feedback.id)}}>\n                            <span className=\"feedback-title feedback-info mr15\">{feedback.lecture_name} _ {feedback.instructor_name} {feedback.position_name}</span>\n                            <span className=\"feedback-info mr15\">작성자명: {feedback.church_name}</span>\n                            <div className=\"mb10\">\n                                <span className=\"mr15\">강사 \n                                {\n                                    [1, 2, 3, 4, 5].map((data, index) =>\n                                        <img key={index} style={{marginBottom:0, marginTop:'-3px'}} className=\"rating_star\" src={data <= feedback.lecture_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                    )\n                                }\n                                </span>\n\n                                <span>강의 \n                                {\n                                    [1, 2, 3, 4, 5].map((data, index) =>\n                                        <img key={index} style={{marginBottom:0, marginTop:'-3px'}} className=\"rating_star\" src={data <= feedback.instructor_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                    )\n                                }\n                                </span>\n                            </div>\n                            <p className={selectedFeedback === feedback.id ? \"feedback-full-content\" : \"feedback-content\"}>{feedback.content}</p>\n                        </div>\n                        )\n                        :\n                        <div className=\"no-content\">피드백이 없습니다.</div>\n                    }\n                </div>\n                <ContentPagination\n                    activePage={feedbackPage}\n                    itemsCountPerPage={feedbackPostsPerPage}\n                    totalItemsCount={feedbackInfo !== null ? feedbackInfo.length : 0}\n                    pageRangeDisplayed={5}\n                    prevPageText={\"‹\"}\n                    nextPageText={\"›\"}\n                    onChange={handlePageChange}\n                />\n            </div>\n        </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LectureDate;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport DataListInput from \"react-datalist-input\";\nimport Postcode from '@actbase/react-daum-postcode';\nimport { Link } from 'react-router-dom';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/Application.css';\nimport BlueButton from '../../modules/button/blue_button';\nimport WhiteButton from '../../modules/button/white_button';\nimport CommonModal from '../../modules/modal/common';\n\n\nconst LectureApplication = (props) => {\n    // const [category, setCategory] = useState('subject');\n\n    // const [selectedLecture, setSelectedLecture] = useState(null);\n    // const [backgroundUrl, setBackgroundUrl] = useState('/image/application.jpeg');\n    // lecture_id는 props로\n    const [application, setApplication] = useState({ user_id:window.sessionStorage.getItem('id'), lecture_id: \"\", lecture_date_id: \"\", church_id: \"\", memo: \"\", admin_phone:\"\", admin_name:\"\", admin_email:\"\", email:\"\", attendee_number:\"50\", timezone:\"\", city:\"\", district:\"\", zip_code:\"\", addr1:\"\", addr2:\"\", attendeeTarget:[0,0,0,0,0,0,0,0]});\n    const [churchInfo, setchurchInfo] = useState(null)\n    const [lectureDates, setlectureDates] = useState(null)\n    const [churchData, setchurchData] = useState([])\n    const [selectChurch, setselectChurch] = useState(null)\n    // const [selectedDate, setSelectedDate] = useState(new Date());\n    const [morning, setmorning] = useState(false)\n    const [afternoon, setafternoon] = useState(false)\n    const [dinner, setdinner] = useState(false)\n    const [isAgree, setisAgree] = useState(false)\n    const [newChurchAdd, setnewChurchAdd] = useState(false)\n    // eslint-disable-next-line no-unused-vars\n    const [zip_code, setzip_code] = useState(\"\")\n    // eslint-disable-next-line no-unused-vars\n    const [addr1, setaddr1] = useState(\"\")\n    // eslint-disable-next-line no-unused-vars\n    const [addr2, setaddr2] = useState(\"\")\n    const [isModal, setModal] = useState(false);\n    const [settingInfo, setsettingInfo] = useState(null);\n    let submitFlag = false;\n\n    function submitCheck(){\n        if(submitFlag){\n            return submitFlag;\n        }else{\n            submitFlag = true;\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        readChurchInfo();\n        readLectureDate();\n        readSettingInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setApplication({\n            ...application,\n            lecture_id: props.location.state.lecture\n        });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.location.state.lecture])\n\n    useEffect(() => {\n        var churchArray = [];\n        if(churchInfo !== null) {\n            for(var i=0 ; i<churchInfo.length ; i++) {\n                churchArray.push({label:churchInfo[i].name, key:churchInfo[i].id})\n            }\n            setchurchData(churchArray);\n        }\n    }, [churchInfo])\n\n    useEffect(() => {\n        if(selectChurch !== null) {\n            setApplication({\n                ...application,\n                church: selectChurch.name,\n                addr1: selectChurch.addr1,\n                addr2: selectChurch.addr2,\n                city: selectChurch.city,\n                district: selectChurch.district,\n                zip_code: selectChurch.zip_code,\n                pastor: selectChurch.pastor,\n                phone: selectChurch.phone,\n                email: selectChurch.email\n            });\n            setzip_code(selectChurch.zip_code)\n            setaddr1(selectChurch.addr1)\n            setaddr2(selectChurch.addr2)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectChurch])\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)\n        \n    }\n\n    const readChurchInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'church/user', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setchurchInfo(response.data)\n    }\n\n    \n    const readLectureDate = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate', {\n                params: {\n                    lecture_id: props.location.state.lecture.id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        if(response.data.length === 0 ){\n            setlectureDates(null);\n            setApplication({\n                ...application,\n                lecture_date_id: 0\n            });\n        }else{\n            var value = response.data;\n            var week = ['일', '월', '화', '수', '목', '금', '토'];\n            for(var i=0; i<value.length; i++){\n                var dayOfWeek = week[new Date(value[i].date).getDay()];\n                value[i].date = value[i].date + \" (\"+dayOfWeek+\")\";\n            }\n            setApplication({\n                ...application,\n                lecture_date_id: response.data[0].id\n            });\n            setlectureDates(value);\n        }\n    }\n\n    const handleChange = (selectedItem) => {\n        setselectChurch(null);\n        setzip_code(\"\")\n        setaddr1(\"\")\n        setaddr2(\"\")\n\n        setApplication({\n            ...application,\n            church_id: selectedItem.key\n        });\n        setselectChurch(churchInfo.find(element => element.id === selectedItem.key))\n        \n    };\n\n    const closeModal = () => {\n        setModal(false);\n    }\n\n    const setMorning = () => {\n        if(morning)\n            setmorning(false)\n        else\n            setmorning(true)\n    }\n    const setAfternoon = () => {\n        if(afternoon)\n            setafternoon(false)\n        else\n            setafternoon(true)\n    }\n    const setDinner = () => {\n        if(dinner)\n            setdinner(false)\n        else\n            setdinner(true)\n    }\n\n    const setIsAgree = () => {\n        if(isAgree)\n            setisAgree(false)\n        else\n            setisAgree(true)\n    }\n    const clickAddBtn = () => {\n        setselectChurch(null);\n\n        if(newChurchAdd) {\n            setnewChurchAdd(false)\n            setApplication({\n                ...application,\n                church: \"\",\n                addr1: \"\",\n                addr2: \"\",\n                city: \"\",\n                district: \"\",\n                zip_code: \"\",\n                pastor: \"\",\n                phone: \"\",\n                email: \"\",\n                church_id: 0\n            });\n        }\n        else {\n            setnewChurchAdd(true)\n            setApplication({\n                ...application,\n                church: \"\",\n                addr1: \"\",\n                addr2: \"\",\n                city: \"\",\n                district: \"\",\n                zip_code: \"\",\n                pastor: \"\",\n                phone: \"\",\n                email: \"\",\n                church_id: 0\n            });\n        }\n    }\n\n    const onAdd = (e) => {\n        const { value, name } = e.target;\n        if(name === \"zip_code\")\n            setzip_code(value)\n        if(name === \"addr1\")\n            setaddr1(value)\n        if(name === \"addr2\")\n            setaddr2(value)\n\n        setApplication({\n            ...application,\n            [name]: value\n        });\n    };\n\n    const submitApplication = async () => {\n\n        var timezone = \"\";\n        if(morning)\n            timezone += \"오전 \";\n        if(afternoon)\n            timezone += \"오후 \";\n        if(dinner)\n            timezone += \"저녁 \";\n    \n        if(timezone === \"\" || application.addr1 === \"\" || application.addr2 === \"\" || application.admin_name === \"\" || application.admin_phone === \"\" || application.attendee_number === \"\" || application.attendee_target === \"\" || application.church_id === \"\" || application.lecture_date_id === \"\" || application.zip_code === \"\") {\n            alert(\"신청서 정보를 모두 입력해주세요!\")\n            return;\n        }\n\n        if(props.location.state.lecture.date === null && application.memo === \"\") {\n            alert(\"일정과 관련한 요청 사항을 입력해주세요!\");\n            return;\n        }\n\n        if(!isAgree) {\n            alert(\"개인정보 활용에 동의해주세요!\");\n            return ;\n        }\n\n        var attendee_target = [];\n        if(application.attendeeTarget[0]===1) attendee_target.push(\"유아\");\n        if(application.attendeeTarget[1]===1) attendee_target.push(\"초등학생\");\n        if(application.attendeeTarget[2]===1) attendee_target.push(\"중학생\");\n        if(application.attendeeTarget[3]===1) attendee_target.push(\"고등학생\");\n        if(application.attendeeTarget[4]===1) attendee_target.push(\"청년\");\n        if(application.attendeeTarget[5]===1) attendee_target.push(\"중년\");\n        if(application.attendeeTarget[6]===1) attendee_target.push(\"장년\");\n        if(application.attendeeTarget[7]===1) attendee_target.push(\"노년\");\n        attendee_target = attendee_target.join(',');\n\n        if(submitCheck()){\n            alert(\"강의를 신청하는 중입니다.\");\n            return;\n        }\n        \n        var params = new URLSearchParams();\n        params.append('user_id', window.sessionStorage.getItem('id'));\n        params.append('name', application.name);\n        params.append('church_id', application.church_id);\n        params.append('district', application.district);\n        params.append('city', application.city);\n        params.append('zip_code', application.zip_code);\n        params.append('addr1', application.addr1);\n        params.append('addr2', application.addr2);\n        params.append('pastor', application.pastor);\n        params.append('phone', application.phone);\n        params.append('email', application.email);\n        params.append('lecture_id', props.location.state.lecture.id);\n        params.append('lecture_date_id', application.lecture_date_id);\n        params.append('memo', application.memo);\n        params.append('admin_phone', application.admin_phone);\n        params.append('admin_name', application.admin_name);\n        params.append('admin_email', application.admin_email);\n        params.append('attendee_number', application.attendee_number);\n        params.append('attendee_target', attendee_target);\n        params.append('timezone', timezone);\n        params.append('inst_email', props.location.state.lecture.instructor_email);\n        if(application.lecture_date_id === 0)\n            params.append('date', \"추후협의\");\n        else\n            params.append('date', lectureDates.find(element => parseInt(element.id) === parseInt(application.lecture_date_id)).date);\n        params.append('lecture_name', props.location.state.lecture.name);\n        params.append('church_name', application.church);\n        params.append('link', process.env.REACT_APP_HOMEPAGE);\n        params.append('church', application.church);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        if(window.confirm(\"강의를 신청하시겠습니까?\")) {\n            const response = await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'application',\n            params,\n            ).then(function(res) {\n                document.location.href = process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\";\n                alert(\"신청서가 등록되었습니다.\");\n            });\n        }\n    }\n\n    const selectPostCode = (data) => {\n        setApplication({\n            ...application,\n            addr1: data.address,\n            city: data.sido,\n            district: data.sigungu,\n            zip_code: data.zonecode\n        });\n        setzip_code(data.zonecode);\n        setaddr1(data.address);\n    }\n\n    const clickTarget = (index) => {\n        var tempTarget = application.attendeeTarget;\n        if(tempTarget[index] === 0){\n            tempTarget[index] = 1;\n        } else {\n            tempTarget[index] = 0;\n        }            \n        setApplication({\n            ...application,\n            attendeeTarget: tempTarget\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/application.jpeg'} alt=\"lecture page\" \n                onError={(e) => {\n                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage.jpeg';\n                }}/>\n                <div className=\"page-info\">\n                    <h2 className=\"white_color\">신청서 작성하기</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"application_page_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"}>주제별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"}>강사별</Link>\n                    </span>\n                    <span>\n                        <Link className=\"sub-title\" to={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"}>일자별</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <div>\n                        <div className=\"form-wrapper\">\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">강의명</span>\n                                <span>{props.location.state.lecture.name}</span>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">강사명</span>\n                                <span>{props.location.state.lecture.instructor_name}</span>\n                            </div>\n                            <hr className=\"mb30\"/>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">교회명</span>\n                                {newChurchAdd ?\n                                <input className=\"form-input\" type=\"text\" placeholder=\"추가할 교회명\" name=\"church\" onChange={onAdd}/>\n                                :\n                                churchData !== null ?\n                                <DataListInput\n                                style={{width:\"100px\"}}\n                                placeholder=\"교회명을 입력하고 선택하세요.\"\n                                items={churchData}\n                                onSelect={handleChange}\n                                />\n                                :\n                                null\n                                }\n                                {newChurchAdd ?\n                                <BlueButton class=\"blue-btn\" name=\"교회 목록 보기\" click={clickAddBtn}/>\n                                :\n                                <BlueButton class=\"blue-btn\" name=\"새로운 교회 추가\" click={clickAddBtn}/>\n                                }\n\n                            </div>\n                            <CommonModal open={isModal} close={closeModal} header=\"주소 찾기\" footer=\"닫기\"> \n                                <Postcode\n                                    style={{ width: 320, height: 320 }}\n                                    jsOptions={{ animated: true, hideMapBtn: true }}\n                                    onSelected={data => {\n                                        selectPostCode(data);\n                                        setModal(false);\n                                    }}\n                                />\n                            </CommonModal>\n\n                            \n                            <div className=\"mb15\">\n                                <span className=\"form-title\">주소 검색</span>\n                                <input readOnly placeholder=\"우편번호\" className=\"form-addr mr10\" value={application.zip_code} name=\"zip_code\" onChange={onAdd}/> \n                                <BlueButton click={() => setModal(true)} name=\"주소찾기\" class=\"blue-btn\"/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\"></span>\n                                <input readOnly placeholder=\"주소\" className=\"form-addr\" value={application.addr1} name=\"addr1\" onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb35\">\n                                <span className=\"form-title\"></span>\n                                <input placeholder=\"세부주소\" className=\"form-addr\" name=\"addr2\" onChange={onAdd} value={application.addr2}/>\n                            </div>\n\n                            {newChurchAdd &&\n                            <span>\n                                <div className=\"mb15\">\n                                    <span className=\"form-title\">담임 목사</span>\n                                    <input className=\"form-input\" name=\"pastor\" placeholder=\"담임 목사 이름\" value={application.pastor} onChange={onAdd}/>\n                                </div>\n                                <div className=\"mb15\">\n                                    <span className=\"form-title\">대표 연락처</span>\n                                    <input className=\"form-input\" name=\"phone\" placeholder=\"교회 대표 연락처\" value={application.phone} onChange={onAdd}/>\n                                </div>\n                                <div className=\"mb30\">\n                                    <span className=\"form-title\">대표 이메일</span>\n                                    <input className=\"form-input\" name=\"email\" placeholder=\"교회 대표 이메일\" value={application.email} onChange={onAdd}/>\n                                </div>\n                            </span>\n                            }\n                            {/* <div className=\"mb15\">\n                                <span className=\"form-title\">담임 목사</span>\n                                <input className=\"form-input\" name=\"pastor\" placeholder=\"담임 목사 이름\" value={application.pastor} onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">대표 연락처</span>\n                                <input className=\"form-input\" name=\"phone\" placeholder=\"교회 대표 연락처\" value={application.phone} onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb30\">\n                                <span className=\"form-title\">대표 이메일</span>\n                                <input className=\"form-input\" name=\"email\" placeholder=\"교회 대표 이메일\" value={application.email} onChange={onAdd}/>\n                            </div> */}\n                            <hr className=\"m30 mb30\"/>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">담당자 이름</span>\n                                <input className=\"form-input\" name=\"admin_name\" onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb15\">\n                                <span className=\"form-title\">담당자 휴대전화</span>\n                                <input className=\"form-input\" name=\"admin_phone\" onChange={onAdd}/>\n                            </div>\n                            <div className=\"mb30\">\n                                <span className=\"form-title\">담당자 이메일(선택)</span>\n                                <input className=\"form-input\" name=\"admin_email\" onChange={onAdd}/>\n                            </div>\n                            <hr className=\"m30\"/>\n                            <div className=\"select-wrapper\">\n                                <div style={{gridColumn:'1 / span 2'}}>\n                                    <span className=\"form-title\">강의 대상</span>\n                                    <span>\n                                        <span className={application !== null && application.attendeeTarget[0]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(0)}>유아</span>\n                                        <span className={application !== null && application.attendeeTarget[1]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(1)}>초등학생</span>\n                                        <span className={application !== null && application.attendeeTarget[2]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(2)}>중학생</span>\n                                        <span className={application !== null && application.attendeeTarget[3]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(3)}>고등학생</span>\n                                        <span className={application !== null && application.attendeeTarget[4]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(4)}>청년</span>\n                                        <span className={application !== null && application.attendeeTarget[5]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(5)}>중년</span>\n                                        <span className={application !== null && application.attendeeTarget[6]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(6)}>장년</span>\n                                        <span className={application !== null && application.attendeeTarget[7]===1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTarget(7)}>노년</span>\n                                    </span>\n                                </div>\n                                <div>\n                                    <span className=\"form-title\">청강자 수</span>\n                                    <select className=\"form-input\" name=\"attendee_number\" defaultValue={application.attendee_number} onChange={onAdd}>\n                                        <option>50</option>\n                                        <option>100</option>\n                                        <option>200</option>\n                                        <option>500</option>\n                                        <option>1000</option>\n                                        <option>1000</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    <span className=\"form-title\">강의 희망날짜</span>\n                                    <select className=\"form-input\" name=\"lecture_date_id\" defaultValue={application.lecture_date_id} onChange={onAdd}>\n                                    {lectureDates !== null ?\n                                    lectureDates.map((date, i) => <option key={i} value={date.id}>{date.date}</option>)\n                                    : <option>추후 협의</option>\n                                    // : <option style={{width:'240px'}}>아래 요청 사항에 희망 일정을 입력해주세요.</option>\n                                    }\n                                    </select>\n                                </div>\n                                <div style={{display:\"flex\"}}>\n                                    <span className=\"form-title\">원하는 시간대</span>\n                                    <WhiteButton class={morning ? \"application-time application-time-select\" : \"application-time\"} name=\"오전\" click={setMorning}/>\n                                    <WhiteButton class={afternoon ? \"application-time application-time-select\" : \"application-time\"} name=\"오후\" click={setAfternoon}/>\n                                    <WhiteButton class={dinner ? \"application-time application-time-select\" : \"application-time\"} name=\"저녁\" click={setDinner}/>\n                                </div>\n\n                            </div>\n                            <textarea className=\"form-textarea\" placeholder=\"요청 사항 / 컨택 포인트 작성란&#13;&#10;강의 희망 날짜가 추후 협의인 경우, 이 곳에 희망 일정을 입력해주세요.\" name=\"memo\" onChange={onAdd}></textarea>\n\n                            <ul className=\"agree-ul mb40\">\n                                <li className=\"mb10\">\n                                    {settingInfo !== null ?\n                                    settingInfo.find(element => element.key === \"agree_personal_information_1\").value.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) :\n                                    \"\"\n                                    }\n                                </li>\n                                <li>\n                                    {settingInfo !== null ?\n                                    settingInfo.find(element => element.key === \"agree_personal_information_2\").value.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) :\n                                    \"\"\n                                    }\n                                </li>\n                            </ul>\n                            <div className=\"mb40\">\n                                <input className=\"agree-check mr10\" type=\"checkbox\" onClick={setIsAgree}/>\n                                <span className=\"fs14\" style={{display:\"inline-block\"}}>\n                                    {settingInfo !== null ?\n                                    settingInfo.find(element => element.key === \"agree_personal_information_3\").value.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>) :\n                                    \"\"\n                                    }\n                                </span>\n                            </div>\n\n                            </div>\n                        </div>\n                        <div className=\"center mt40\">\n                            <BlueButton name=\"작성 완료\" click={submitApplication}/>\n                        </div>\n                    </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default LectureApplication;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { RMIUploader } from \"react-multiple-image-uploader\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\nimport Pagination from \"react-js-pagination\";\nimport { Link } from 'react-router-dom';\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/mypage.css';\n\nconst MypageUser = (props) => {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [feedbackContent, setFeedbackContent] = useState(null)\n    const [feedbackFileData, setFeedbackFileData] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [lectureRating, setLectureRating] = useState(5);\n    const [instructorRating, setInstructorRating] = useState(5);\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    var feedbackFile = [];\n\n    useEffect(() => {\n        readApplicationForms();\n        readSettingInfo();\n    },[]);\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data);\n    }\n    const readApplicationForms = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application/user/'+window.sessionStorage.getItem('id'), {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setapplicationInfo(response.data);\n    }\n\n    const cancelContact = async() => {\n        if(window.confirm(\"컨택을 취소하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: selectedLecture.id,\n                        status: -1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setSelectedLecture({\n                    ...selectedLecture,\n                    status: -1\n                })\n            })\n        }\n    }\n\n    const insertVisitingLog = async() => {\n        document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n        //document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n        //const blob = await fetch(base64).then(res => res.blob());\n\n        const params = new FormData();\n        const headers = {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n          }\n        //var params = new URLSearchParams();\n        params.append('content', feedbackContent);\n        params.append('lecture_rating', lectureRating);\n        params.append('instructor_rating', instructorRating);\n        params.append('token', window.sessionStorage.getItem('token'));\n        params.append('manageID', window.sessionStorage.getItem('id'));\n\n        for(var i=0; i<feedbackFile.length; i++){\n            params.append('file', feedbackFile[i].file);\n        }\n\n        await axios.post(\n        process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/'+selectedLecture.id, //[loginID]로그인 후 변경\n        params,{headers});\n        readApplicationForms();\n        setSelectedLecture(null);\n\n    };\n\n    const hideModal = () => {\n        setVisible(false);\n    };\n    const onUpload = (data) => {\n        feedbackFile = data;\n    };\n    const onSelect = (data) => {\n    };\n    const onRemove = (id) => {\n    };\n\n    const selectButton = async(data) => {\n        if(selectedLecture === null || selectedLecture !== data) {\n            if(data.visit_reg_date !== null){\n                const response = await axios.get(\n                    process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/'+data.feedback_id, {\n                        params: {\n                            token: window.sessionStorage.getItem('token'),\n                            manageID: window.sessionStorage.getItem('id')\n                        }\n                    }\n                );\n                setFeedbackFileData(response.data);\n            }\n            setSelectedLecture(data);\n        } else {\n            setSelectedLecture(null);\n        }\n    }\n\n    const deleteButton = async(data) => {\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/mypage.jpg'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2 style={{color:'white'}}>마이페이지</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"application_list_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\"}>신청한 강의</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/take\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/take\"}>수강한 강의</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <div className=\"table-wrapper\">\n                    <div className=\"table-row-mypage2\">\n                            <span className=\"th\">강의 날짜</span>\n                            <span className=\"th\">강사명</span>\n                            <span className=\"th\">강의명</span>\n                            <span className=\"th\">진행상황</span>\n                        </div>\n                        { applicationInfo !== null && applicationInfo.length !== 0 ?\n                            currentPosts(applicationInfo).map((data, index) => \n                                <div key={index} className={selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-mypage2\" : \"table-row-mypage2\"} onClick = {() => {selectButton(data)}}>\n                                    <span className=\"td\">{data.date}</span>\n                                    <span className=\"td\">{data.inst_name} {data.position_name}</span>\n                                    <span className=\"td\">{data.lecture_name}</span>\n                                    {data.status === 0 ?\n                                        <span className=\"td\">강사 확인전</span>\n                                        : data.status === 1 ?\n                                        <span className=\"td contact-ing user-ing\">진행중</span>\n                                        : data.status === 2 && data.visit_reg_date !== null?\n                                        <span className=\"td\">피드백 완료</span>\n                                        : data.status === 2?\n                                        <span className=\"td\">피드백 미완료</span>\n                                        :<span className=\"td contact-cancel\">취소됨</span>\n                                    }\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">신청서가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />\n                    {\n                        selectedLecture !== null && selectedLecture.status === 2 && selectedLecture.visit_reg_date !== null?\n                            <div className=\"show-lecture-detail\">\n                                <div className=\"star-wrapper\">\n                                    <span className=\"stars\">강의 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= selectedLecture.lecture_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                        )\n                                    }\n                                    </span>\n                                    <span className=\"gap\"> </span>\n                                    <span className=\"stars\">강사 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= selectedLecture.instructor_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" onClick={() => setInstructorRating(data)}/>\n                                        )\n                                    }\n                                    </span>\n                                </div>\n                                <p className=\"feedback-detail-content\">{selectedLecture.visit_log}</p>\n                                <div className=\"feedback-image-swiper-wrapper\">\n                                <Swiper \n                                    spaceBetween={30} \n                                    effect={'fade'}\n                                    centeredSlides={true} \n                                    loop={true} loopFillGroupWithBlank={true}\n                                    pagination={{\n                                        \"clickable\": true\n                                    }} \n                                    navigation={true}\n                                    className=\"feedback-swiper\">\n                                        {feedbackFileData !== null ?\n                                    feedbackFileData.map((data, index) => (\n                                        <SwiperSlide key = {index}>\n                                            <div className=\"feedback-image-wrapper\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+data} alt=\"uploadFile\"/></div>\n                                        </SwiperSlide>\n                                    ))\n                                    : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                                }\n                                    </Swiper></div>\n                                <button className=\"feedback-submit\" onClick={deleteButton}>삭제하기</button>\n                            </div>\n                        :selectedLecture !== null && selectedLecture.status === 2?\n                            <div className=\"show-lecture-detail\">\n                                <div className=\"star-wrapper\">\n                                    <span className=\"stars\">강의 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= lectureRating? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" onClick={() => setLectureRating(data)}/>\n                                        )\n                                    }\n                                    </span>\n                                    <span className=\"gap\"> </span>\n                                    <span className=\"stars\">강사 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= instructorRating? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" onClick={() => setInstructorRating(data)}/>\n                                        )\n                                    }\n                                    </span>\n                                </div>\n                                <textarea className=\"feedback-textarea\" placeholder=\"글 남기기\" onChange={(e) => {setFeedbackContent(e.target.value); }}></textarea>\n                                <RMIUploader\n                                    isOpen={visible}\n                                    hideModal={hideModal}\n                                    onSelect={onSelect}\n                                    onUpload={onUpload}\n                                    onRemove={onRemove}\n                                    dataSources={[]}\n                                />\n                                <button className=\"feedback-submit\" onClick={() => insertVisitingLog()}>작성 완료하기</button>\n                            </div>\n                        :null\n                    }\n                    {   selectedLecture !== null ?\n                            <div className=\"show-lecture-detail\">\n                            <h2 className=\"mb20\">{selectedLecture.lecture_name}</h2>\n                            <hr className=\"bold-hr mb25\"/>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">교회명</span>\n                                <span>{selectedLecture.church_name}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">주소</span>\n                                <span>{selectedLecture.addr1} {selectedLecture.addr2}</span>\n                            </div>\n                            {/* <div className=\"mb8\">\n                                <span className=\"form-title\">대표 연락처</span>\n                                <span>{selectedLecture.phone}</span>\n                            </div>\n                            <div>\n                                <span className=\"form-title\">대표 이메일</span>\n                                <span>{selectedLecture.email}</span>\n                            </div> */}\n                            <hr className=\"m20\"/>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">담당자 이름</span>\n                                <span>{selectedLecture.admin_name}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">담당자 연락처</span>\n                                <span>{selectedLecture.admin_phone}</span>\n                            </div>\n                            <div>\n                                <span className=\"form-title\">담당자 이메일</span>\n                                <span>{selectedLecture.admin_email}</span>\n                            </div>\n                            <hr className=\"m20\"/>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">강의 대상</span>\n                                <span>{selectedLecture.attendee_target}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">청강자 수</span>\n                                <span>{selectedLecture.attendee_number}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">원하는 날짜</span>\n                                <span>{selectedLecture.date !== null? selectedLecture.date: \"추후협의\"}</span>\n                            </div>\n                            {\n                                selectedLecture.date !== null?\n                                <div className=\"mb35\">\n                                    <span className=\"form-title\">원하는 시간대</span>\n                                    {selectedLecture.status === 2 ?\n                                    <span>{selectedLecture.contact_start_date} ~ {selectedLecture.contact_end_date}</span>:\n                                    <span>{selectedLecture.timezone}</span>}\n                                </div>\n                                :null\n                            }\n                            <hr className=\"bold-hr mb35\"/>\n                            <div className=\"mb25 form-grid\">\n                                <span className=\"form-title\">요청사항</span>\n                                <span>{selectedLecture.memo.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}</span>\n                            </div>\n                            {\n                                selectedLecture.status === 0 || selectedLecture.status === 1?\n                                <div style={{textAlign:'center'}}>\n                                    <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                                </div>\n                                : null\n                            }\n                        </div>\n                        :null\n                    }\n                    {/* <div\n                        className={selectedLecture ? \"show-lecture-detail\" : \"no-detail\"}\n                    >\n                        <div className=\"detail-title\">\n                            <h2>관계에 대하여</h2>\n                            <span>이정호 작성</span>\n                            <span className=\"detail-date\">2021_07_10_토</span>\n                        </div>\n                        <div className=\"detail-content\">\n                            <p>\n                                이번 하계계절학기 영상편집의 이론과 실제는 총 2개의 분반이 진행됩니다. 작년부터 영상편집수업에서 프로그램을 실습하는 날의 강의는 온라인 LMS강의로 진행됩니다.\n                                학생들이 여러번 반복해서 돌려돌수 있기데 그 방식을 더 선호하여 프로그램 학습파트는 LMS 강의로 대체되지만\n                                프로그램 사용이란게 처음해서 미숙할때는 누군가 붙잡고 물어보고 싶은 경우가 많을 겁니다. 분명 영상대로 했는데 왜 안돼~~~~ 이려면 머리뜯을 사람이 꼭 있기에 ᄒᄒ<br />\n                                이번 하계계절학기 영상편집의 이론과 실제는 총 2개의 분반이 진행됩니다. 작년부터 영상편집수업에서 프로그램을 실습하는 날의 강의는 온라인 LMS강의로 진행됩니다.\n                                학생들이 여러번 반복해서 돌려돌수 있기데 그 방식을 더 선호하여 프로그램 학습파트는 LMS 강의로 대체되지만<br />\n                                프로그램 사용이란게 처음해서 미숙할때는 누군가 붙잡고 물어보고 싶은 경우가 많을 겁니다. 분명 영상대로 했는데 왜 안돼~~~~ 이려면 머리뜯을 사람이 꼭 있기에 ᄒᄒ\n                                이번 하계계절학기 영상편집의 이론과 실제는 총 2개의 분반이 진행됩니다. 작년부터 영상편집수업에서 프로그램을 실습하는 날의 강의는 온라인 LMS강의로 진행됩니다.\n                                학생들이 여러번 반복해서 돌려돌수 있기데 그 방식을 더 선호하여 프로그램 학습파트는 LMS 강의로 대체되지만<br />\n                                프로그램 사용이란게 처음해서 미숙할때는 누군가 붙잡고 물어보고 싶은 경우가 많을 겁니다. 분명 영상대로 했는데 왜 안돼~~~~ 이려면 머리뜯을 사람이 꼭 있기에 ᄒᄒ\n                            </p>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default MypageUser;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { RMIUploader } from \"react-multiple-image-uploader\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\nimport Pagination from \"react-js-pagination\";\nimport { Link } from 'react-router-dom';\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/mypage.css';\n\nconst MypageUserContacted = (props) => {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [feedbackContent, setFeedbackContent] = useState(null)\n    const [feedbackFileData, setFeedbackFileData] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [lectureRating, setLectureRating] = useState(5);\n    const [instructorRating, setInstructorRating] = useState(5);\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    var feedbackFile = [];\n\n    useEffect(() => {\n        readApplicationForms();\n        readSettingInfo();\n    },[]);\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)        \n    }\n\n    const readApplicationForms = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application/user/'+window.sessionStorage.getItem('id')+\"/contacted\", {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setapplicationInfo(response.data);\n    }\n\n    const cancelContact = async() => {\n        if(window.confirm(\"컨택을 취소하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: selectedLecture.id,\n                        status: -1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setSelectedLecture({\n                    ...selectedLecture,\n                    status: -1\n                })\n            })\n        }\n    }\n\n    const insertVisitingLog = async() => {\n        if(window.confirm(\"피드백을 저장하시겠습니까?\")) {\n            document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n\n            const params = new FormData();\n            const headers = {\n                'Content-type': 'multipart/form-data; charset=UTF-8',\n                'Accept': '*/*'\n            }\n            //var params = new URLSearchParams();\n            params.append('content', feedbackContent);\n            params.append('lecture_rating', lectureRating);\n            params.append('instructor_rating', instructorRating);\n            params.append('token', window.sessionStorage.getItem('token'))\n            params.append('manageID', window.sessionStorage.getItem('id'));\n\n\n            for(var i=0; i<feedbackFile.length; i++){\n                params.append('file', feedbackFile[i].file);\n            }\n\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/'+selectedLecture.id, //[loginID]로그인 후 변경\n            params,{headers}).then(function(res) {\n                readApplicationForms();\n                setSelectedLecture(null);\n                alert(\"피드백을 저장했습니다.\");\n            });\n        }\n    };\n\n    const hideModal = () => {\n        setVisible(false);\n    };\n    const onUpload = (data) => {\n        feedbackFile = data;\n    };\n    const onSelect = (data) => {\n    };\n    const onRemove = (id) => {\n    };\n\n    const selectButton = async(data) => {\n        if(data.visit_reg_date !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/'+data.feedback_id, {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setFeedbackFileData(response.data);\n        }\n        setSelectedLecture(data);\n    }\n\n    const deleteButton = async() => {\n        var value = window.confirm(\"사용자가 작성한 내용입니다. 삭제할까요?\");\n        if(value !== false){\n            // const response = await axios.get(\n            //     process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/feedback/file/'+data.feedback_id\n            // );\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'visiting_log/feedback',\n                    method: 'delete',\n                    data: {\n                        id: selectedLecture.feedback_id,\n                        token:window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"삭제가 완료되었습니다.\")\n                readApplicationForms();\n                setSelectedLecture(null);\n            })\n        }\n    }\n    \n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/mypage.jpg'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2 style={{color:'white'}}>마이페이지</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"application_list_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\"}>신청한 강의</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/take\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/take\"}>수강한 강의</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <div className=\"table-wrapper\">\n                    <div className=\"table-row-mypage2\">\n                            <span className=\"th\">강의 날짜</span>\n                            <span className=\"th\">강사명</span>\n                            <span className=\"th\">강의명</span>\n                            <span className=\"th\">컨택 상황</span>\n                        </div>\n                        { applicationInfo !== null && applicationInfo.length !== 0 ?\n                            currentPosts(applicationInfo).map((data, index) => \n                                <div key={index} className={selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-mypage2\" : \"table-row-mypage2\"} onClick = {() => {selectButton(data)}}>\n                                    <span className=\"td\">{data.date}</span>\n                                    <span className=\"td\">{data.inst_name}</span>\n                                    <span className=\"td\">{data.lecture_name}</span>\n                                    {data.status === 0 ?\n                                        <span className=\"td\">컨택요청</span>\n                                        : data.status === 1 ?\n                                        <span className=\"td\">컨택중</span>\n                                        : data.status === 2 && data.visit_reg_date !== null?\n                                        <span className=\"td contact-ok\">피드백 완료</span>\n                                        : data.status === 2?\n                                        <span className=\"td\">피드백 미완료\u001c</span>\n                                        :<span className=\"td\">컨택취소</span>\n                                    }\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">신청서가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />\n                    {\n                        selectedLecture !== null && selectedLecture.status === 2 && selectedLecture.visit_reg_date !== null?\n                            <div className=\"show-lecture-detail\">\n                                <div className=\"star-wrapper\">\n                                    <span className=\"stars\">강의 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= selectedLecture.lecture_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\"/>\n                                        )\n                                    }\n                                    </span>\n                                    <span className=\"gap\"> </span>\n                                    <span className=\"stars\">강사 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= selectedLecture.instructor_star? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" onClick={() => setInstructorRating(data)}/>\n                                        )\n                                    }\n                                    </span>\n                                </div>\n                                <p className=\"feedback-detail-content\">{selectedLecture.visit_log.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</p>\n                                <div className=\"feedback-image-swiper-wrapper\">\n                                <Swiper \n                                    spaceBetween={30} \n                                    effect={'fade'}\n                                    centeredSlides={true} \n                                    loop={true} loopFillGroupWithBlank={true}\n                                    pagination={{\n                                        \"clickable\": true\n                                    }} \n                                    navigation={true}\n                                    className=\"feedback-swiper\">\n                                        {feedbackFileData !== null ?\n                                    feedbackFileData.map((data, index) => (\n                                        <SwiperSlide key = {index}>\n                                            <div className=\"feedback-image-wrapper\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+data} alt=\"uploadFile\"/></div>\n                                        </SwiperSlide>\n                                    ))\n                                    : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                                }\n                                    </Swiper></div>\n                                <button className=\"feedback-submit\" onClick={deleteButton}>삭제하기</button>\n                            </div>\n                        :selectedLecture !== null && selectedLecture.status === 2?\n                            <div className=\"show-lecture-detail\">\n                                <div className=\"star-wrapper\">\n                                    <span className=\"stars\">강의 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= lectureRating? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" onClick={() => setLectureRating(data)}/>\n                                        )\n                                    }\n                                    </span>\n                                    <span className=\"gap\"> </span>\n                                    <span className=\"stars\">강사 만족도</span>\n                                    <span>\n                                    {\n                                        [1, 2, 3, 4, 5].map((data, index) => \n                                            <img key={index} className=\"rating_star\" src={data <= instructorRating? process.env.REACT_APP_DEFAULT_URL+'image/yellow_star.png': process.env.REACT_APP_DEFAULT_URL+'image/white_star.png'} alt=\"white_star\" onClick={() => setInstructorRating(data)}/>\n                                        )\n                                    }\n                                    </span>\n                                </div>\n                                <textarea className=\"feedback-textarea\" placeholder=\"글 남기기\" onChange={(e) => {setFeedbackContent(e.target.value); }}></textarea>\n                                <RMIUploader\n                                    isOpen={visible}\n                                    hideModal={hideModal}\n                                    onSelect={onSelect}\n                                    onUpload={onUpload}\n                                    onRemove={onRemove}\n                                    dataSources={[]}\n                                />\n                                <button className=\"feedback-submit\" onClick={() => insertVisitingLog()}>작성 완료하기</button>\n                            </div>\n                        :null\n                    }\n                    {   selectedLecture !== null ?\n                            <div className=\"show-lecture-detail\">\n                            <h2 className=\"mb20\">{selectedLecture.lecture_name}</h2>\n                            <hr className=\"bold-hr mb25\"/>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">신청자명</span>\n                                <span>{selectedLecture.admin_name}</span>\n                            </div>\n                            <div>\n                                <span className=\"form-title\">연락처</span>\n                                <span>{selectedLecture.admin_phone}</span>\n                            </div>\n                            <hr className=\"m20\"/>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">교회명</span>\n                                <span>{selectedLecture.church_name}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">주소</span>\n                                <span>{selectedLecture.addr1} {selectedLecture.addr2}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">교회 연락처</span>\n                                <span>{selectedLecture.phone}</span>\n                            </div>\n                            <div>\n                                <span className=\"form-title\">교회 이메일</span>\n                                <span>{selectedLecture.email}</span>\n                            </div>\n                            <hr className=\"m20\"/>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">강의 대상</span>\n                                <span>{selectedLecture.attendee_target}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">청강자 수</span>\n                                <span>{selectedLecture.attendee_number}</span>\n                            </div>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">원하는 날짜</span>\n                                <span>{selectedLecture.date}</span>\n                            </div>\n                            <div className=\"mb35\">\n                                <span className=\"form-title\">원하는 시간대</span>\n                                {selectedLecture.status === 2 ?\n                                <span>{selectedLecture.contact_start_date} ~ {selectedLecture.contact_end_date}</span>:\n                                <span>{selectedLecture.timezone}</span>}\n                            </div>\n                            <div className=\"mb25 form-grid\">\n                                <span className=\"form-title\">요청사항</span>\n                                <span>{selectedLecture.memo.replaceAll(\"<br/>\", \"\\n\").split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</span>\n                            </div>\n                            <hr className=\"bold-hr mb35\"/>\n                            {\n                                selectedLecture.status === 0 || selectedLecture.status === 1?\n                                <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                                : null\n                            }\n                        </div>\n                        :null\n                    }\n                    {/* <div\n                        className={selectedLecture ? \"show-lecture-detail\" : \"no-detail\"}\n                    >\n                        <div className=\"detail-title\">\n                            <h2>관계에 대하여</h2>\n                            <span>이정호 작성</span>\n                            <span className=\"detail-date\">2021_07_10_토</span>\n                        </div>\n                        <div className=\"detail-content\">\n                            <p>\n                                이번 하계계절학기 영상편집의 이론과 실제는 총 2개의 분반이 진행됩니다. 작년부터 영상편집수업에서 프로그램을 실습하는 날의 강의는 온라인 LMS강의로 진행됩니다.\n                                학생들이 여러번 반복해서 돌려돌수 있기데 그 방식을 더 선호하여 프로그램 학습파트는 LMS 강의로 대체되지만\n                                프로그램 사용이란게 처음해서 미숙할때는 누군가 붙잡고 물어보고 싶은 경우가 많을 겁니다. 분명 영상대로 했는데 왜 안돼~~~~ 이려면 머리뜯을 사람이 꼭 있기에 ᄒᄒ<br />\n                                이번 하계계절학기 영상편집의 이론과 실제는 총 2개의 분반이 진행됩니다. 작년부터 영상편집수업에서 프로그램을 실습하는 날의 강의는 온라인 LMS강의로 진행됩니다.\n                                학생들이 여러번 반복해서 돌려돌수 있기데 그 방식을 더 선호하여 프로그램 학습파트는 LMS 강의로 대체되지만<br />\n                                프로그램 사용이란게 처음해서 미숙할때는 누군가 붙잡고 물어보고 싶은 경우가 많을 겁니다. 분명 영상대로 했는데 왜 안돼~~~~ 이려면 머리뜯을 사람이 꼭 있기에 ᄒᄒ\n                                이번 하계계절학기 영상편집의 이론과 실제는 총 2개의 분반이 진행됩니다. 작년부터 영상편집수업에서 프로그램을 실습하는 날의 강의는 온라인 LMS강의로 진행됩니다.\n                                학생들이 여러번 반복해서 돌려돌수 있기데 그 방식을 더 선호하여 프로그램 학습파트는 LMS 강의로 대체되지만<br />\n                                프로그램 사용이란게 처음해서 미숙할때는 누군가 붙잡고 물어보고 싶은 경우가 많을 겁니다. 분명 영상대로 했는데 왜 안돼~~~~ 이려면 머리뜯을 사람이 꼭 있기에 ᄒᄒ\n                            </p>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default MypageUserContacted;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport \"../../../assets/css/Contact.css\";\nimport \"../../../assets/css/table.css\";\n\nimport { Link } from 'react-router-dom';\nimport CommonCalendar from '../../modules/calendar/read_calendar';\n\nconst Contact = (props) => {\n    const [contactDate, setContactDate] = useState('');\n    const [contactStartDate, setContactStartDate] = useState('');\n    const [contactEndDate, setContactEndDate] = useState('');\n    const [contactMemo, setContactMemo] = useState('');\n\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [selectedContact, setSelectedContact] = useState(null);\n    const [clickComplete, setClickComplete] = useState(null);\n    const [calendarInfo, setcalendarInfo] = useState(null)\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    useEffect(() => {\n        let today = new Date();\n\n        let year = today.getFullYear(); // 년도\n        let month = today.getMonth() + 1;  // 월\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        readApplicationForms();\n        readMainCalendar(date);\n        readSettingInfo();\n        // alert(window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\"));\n    }, []);\n\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)        \n    }\n\n    const readApplicationForms = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application/read', {\n                params: {\n                    user_id: window.sessionStorage.getItem('id'),\n                    token: window.sessionStorage.getItem('token') ,\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n\n        setapplicationInfo(response.data);\n    }\n\n    const finishContact = async() => {\n        if(window.confirm(\"날짜를 확정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/complete',\n                    method: 'put',\n                    data: {\n                        selectDate: contactDate,\n                        contact_start_date: contactStartDate,\n                        contact_end_date: contactEndDate,\n                        contact_memo: contactMemo,\n                        application_form_id: selectedContact.id,\n                        lecture_id: selectedContact.lecture_id,\n                        status: 2,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms()\n                alert(\"컨택이 완료되었습니다.\")\n                setSelectedContact(null)\n                setClickComplete(null)\n            })\n        }\n        \n    }\n\n    const readMainCalendar = async(date) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/main', {\n                params: {\n                    date: date,\n                    user_id: window.sessionStorage.getItem('id'),\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n    }\n\n\n    const contactStart = async (status) => {\n        if(window.confirm(\"신청자와 컨택을 시작하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: selectedContact.id,\n                        status: status,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setSelectedContact({\n                    ...selectedContact,\n                    status: status\n                })\n            })\n        }\n        \n    }\n\n    const completeContact = async()=> {\n        if(!clickComplete)\n            setClickComplete(1);\n        else\n            setClickComplete(null);\n    }\n\n    const cancelContact = async() => {\n        if(window.confirm(\"컨택을 취소하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'application/status',\n                    method: 'put',\n                    data: {\n                        application_form_id: selectedContact.id,\n                        status: -1,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readApplicationForms();\n                setSelectedContact({\n                    ...selectedContact,\n                    status: -1\n                })\n                alert(\"컨택이 취소되었습니다.\")\n            })\n            \n        }\n    }\n\n    // const contactEditDate = () => {\n    //     if(!clickComplete)\n    //         setClickComplete(1);\n    //     else\n    //         setClickComplete(null);\n    // }\n\n\n    function clickContact(application) {\n        if(selectedContact === null || application !== selectedContact) {\n            if(application.date === null)   setContactDate(\"\")\n            else setContactDate(application.date)\n            if(application.contact_start_date === null)   setContactStartDate(\"\")\n            else setContactStartDate(application.contact_start_date)\n            if(application.contact_end_date === null)   setContactEndDate(\"\")\n            else setContactEndDate(application.contact_end_date)\n            if(application.memo === null)   setContactMemo(\"\")\n            else setContactMemo(application.memo)\n              \n            setSelectedContact(application);\n            setClickComplete(null)\n        }\n        else\n            setSelectedContact(null);\n    }\n\n    const backBtnClick = () => {\n        setClickComplete(null)\n        if(selectedContact.date === null)   setContactDate(\"\")\n        else setContactDate(selectedContact.date)\n        if(selectedContact.contact_start_date === null)   setContactStartDate(\"\")\n        else setContactStartDate(selectedContact.contact_start_date)\n        if(selectedContact.contact_end_date === null)   setContactEndDate(\"\")\n        else setContactEndDate(selectedContact.contact_end_date)\n        if(selectedContact.memo === null)   setContactMemo(\"\")\n        else setContactMemo(selectedContact.memo)\n            \n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    return (\n        <div>\n            <div className=\"mypage-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/application.jpeg'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2>마이페이지</h2>\n                    <p style={{color:'black'}}>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"mypage_contact_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"inst-title-header\">\n                <h2 style={{color:'white'}}>마이페이지</h2>\n                <p>\n                    {settingInfo !== null ?\n                    settingInfo.find(element => element.key === \"mypage_contact_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                    \"\"\n                    }\n                </p>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"}>내 프로필</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"}>내 강의함</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"}>컨택 일정</Link>\n                    </span>\n                    <span>\n                    <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"}>방문일지</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <CommonCalendar readMainCalendar={readMainCalendar} calendarData={calendarInfo} path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}/>\n                    <div className=\"mt20 table-wrapper\">\n                        <div className=\"table-row-contact\">\n                            <div className=\"th contact-index\"></div>\n                            <div className=\"th\">교회명</div>\n                            <div className=\"th\">강의명</div>\n                            <div className=\"th contact-date\">희망 날짜</div>\n                            <div className=\"th\">진행 상황</div>\n                        </div>\n                        { applicationInfo !== null && applicationInfo.length > 0 ?\n                            currentPosts(applicationInfo).map((data, index) => \n                                <div key={index} className={selectedContact !== null && selectedContact.id === data.id ? \"click-inst-row table-row-contact\" : \"table-row-contact\"} onClick = {() => {clickContact(data)}}>\n                                    <div className=\"td\">{(index+1)+((page-1)*postsPerPage)}</div>\n                                    <div className=\"td\">{data.church_name}</div>\n                                    <div className=\"td\">{data.lecture_name}</div>\n                                    <div className=\"td location\">{data.date !== null? data.date: \"추후협의\"}</div>\n                                    {data.status === 0 ?\n                                        <div className=\"td\"><span className=\"contact-ing\" style={{color:'#ff0000b8', border:'1px solid #ff0000b8'}}>신규(미확인)</span></div>\n                                        : data.status === 1 ?\n                                        <div className=\"td\"><span className=\"contact-ing\">진행중</span></div>\n                                        : data.isVisiting > 0 ?\n                                        <div className=\"td contact-ok\">강의완료</div>\n                                        : data.status === 2 ?\n                                        <div className=\"td contact-ok\">일정확정됨</div>:\n                                        <div className=\"td contact-cancel\">취소됨</div>\n                                    }\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">신청서가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />\n\n\n                    {selectedContact ?\n                    <div\n                        className={selectedContact ? \"show-lecture-detail\" : \"no-detail\"}\n                    >\n                        <h2 className=\"mb20\">{selectedContact.lecture_name}</h2>\n                        <hr className=\"bold-hr mb25\"/>\n                        {selectedContact.status !== 0 &&\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">신청자 이메일</span>\n                            <span>{selectedContact.user_email}</span>\n                            <hr className=\"m20\"/>\n                        </div>\n                        }\n                        <div className=\"mb8\" style={{fontWeight:'bold'}}>\n                            <span className=\"form-title\">교회명</span>\n                            <span>{selectedContact.church_name}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">주소</span>\n                            <span>{selectedContact.addr1}</span>\n                        </div>\n                        {selectedContact.status !== 0 &&\n                        <span>\n                            <div className=\"mb8\">\n                                <span className=\"form-title\">대표 연락처</span>\n                                <span>{selectedContact.phone}</span>\n                            </div>\n                            <div>\n                                <span className=\"form-title\">대표 이메일</span>\n                                <span>{selectedContact.email}</span>\n                            </div>\n                        </span>\n                        }\n                        <hr className=\"m20\"/>\n                        {selectedContact.status !== 0 &&\n                        <span>\n                            <div className=\"mb8\" style={{fontWeight:'bold'}}>\n                                <span className=\"form-title\">담당자 이름</span>\n                                <span>{selectedContact.admin_name}</span>\n                            </div>\n                            <div style={{fontWeight:'bold'}}>\n                                <span className=\"form-title\" >담당자 연락처</span>\n                                <span>{selectedContact.admin_phone}</span>\n                            </div>\n                            <hr className=\"m20\"/>\n                        </span>\n                        }\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">강의 대상</span>\n                            <span>{selectedContact.attendee_target}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">청강자 수</span>\n                            <span>{selectedContact.attendee_number}</span>\n                        </div>\n                        <div className=\"mb8\">\n                            <span className=\"form-title\">원하는 날짜</span>\n                            {clickComplete ? <input className=\"form-input\" name=\"date\" type=\"date\" value={contactDate} onChange={(e)=>setContactDate(e.target.value)}/> : <span>{selectedContact.date !== null? selectedContact.date:\"추후협의\"}</span>}\n                        </div>\n                        <div className=\"mb35\">\n                            <span className=\"form-title\">원하는 시간대</span>\n                            {clickComplete ?\n                            <span><input className=\"form-input\" type=\"time\" value={contactStartDate} onChange={(e)=>setContactStartDate(e.target.value)}/> ~ <input className=\"form-input\" type=\"time\" value={contactEndDate} onChange={(e)=>setContactEndDate(e.target.value)}/></span> \n                            :selectedContact.status === 2 ?\n                            <span>{selectedContact.contact_start_date} ~ {selectedContact.contact_end_date}</span>    \n                            :selectedContact.date !== null? \n                            <span>{selectedContact.timezone}</span>:\n                            \"추후 협의\"\n                            }\n                        </div>\n                        \n                        {/* {selectedContact.date !== null? \n                            <div className=\"mb35\">\n                            <span className=\"form-title\">원하는 시간대</span>\n                            {clickComplete ? \n                            \n                            :selectedContact.status === 2 ?\n                            <span>{selectedContact.contact_start_date} ~ {selectedContact.contact_end_date}</span>    \n                            :<span>{selectedContact.timezone}</span>}\n                        </div>:null\n                        } */}\n                        <hr className=\"bold-hr mb35\"/>\n                        <div className=\"mb25 form-grid\">\n                            <span className=\"form-title\">요청사항</span>\n                            {clickComplete ? <span><textarea className=\"form-textarea\" type=\"date\" value={contactMemo.replaceAll(\"<br/>\", \"\\n\")} onChange={(e)=>setContactMemo(e.target.value)}/></span> : <span>{selectedContact.memo.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}</span>}\n                        </div>\n                        {/* <Link to=\"/application\" className=\"go-form\">컨택 진행하기</Link> */}\n                        {/* {clickComplete ?\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick={()=>setClickComplete(null)}>뒤로가기</button>\n                            <button className=\"form-btn\" onClick={finishContact}>컨택 내용 저장</button>\n                        </div>\n                        :\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick={cancelContact}>컨택 취소하기</button>\n                            <button className=\"form-btn\" onClick={completeContact}>컨택 수락하기</button>\n                        </div>} */}\n                        {selectedContact.status === 0 ?\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick= {() => {contactStart(1)}}>연락처 확인하기</button>\n                            {/* <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button> */}\n                        </div>\n                        :selectedContact.status === -1 ?\n                        <div></div>\n                        :selectedContact.status === 2 && clickComplete ?\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick= {finishContact}>날짜 수정 완료</button>\n                            <button className=\"form-btn\" onClick= {() => {backBtnClick()}}>뒤로가기</button>\n                        </div>\n                        :selectedContact.status === 2 ?\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick= {completeContact}>날짜 수정하기</button>\n                            <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                        </div>\n                        :selectedContact.status === 1 && clickComplete ?\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick={finishContact}>컨택 내용 저장하기</button>\n                            <button className=\"form-btn\" onClick= {() => {backBtnClick()}}>뒤로가기</button>\n                        </div>\n                        :\n                        <div className=\"form-btn-wrapper\">\n                            <button className=\"form-btn mr15\" onClick={completeContact}>날짜 확정하기</button>\n                            <button className=\"form-btn\" onClick={cancelContact}>컨택 취소하기</button>\n                        </div>\n                        }\n                    </div>\n                    :\n                    null\n                    }\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from 'react';\nimport ReactLoading from \"react-loading\";\nimport Pagination from \"react-js-pagination\";\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/lecture_layout.css';\nimport GreyButton from '../../modules/button/admin_grey_btn';\nimport CommonCalendar from '../../modules/calendar/common';\nimport ReadCalendar from '../../modules/calendar/read_calendar';\nimport LectureCalendar from '../../modules/calendar/lecture_calendar';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport WhiteButton from '../../modules/button/white_button';\nimport CommonModal from '../../modules/modal/common';\n\n\nfunction MypageLecture(props) {\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [lectureLoading, setLectureLoading] = useState(null);\n    const [lectureData, setLectureData] = useState(null);\n    const [calendarInfo, setcalendarInfo] = useState(null)\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    const [isEdit, setisEdit] = useState(false);\n\n    const [isModalOpen, setisModalOpen] = useState(false);\n    const [today, setToday] = useState(new Date());\n    const [categoryData, setCategoryData] = useState(null);\n    const [regionData, setRegionData] = useState(null);\n    const [selectedCategoryData, setSelectedCategoryData] = useState([]);\n    const [selectedRegionData, setSelectedRegionData] = useState([]);\n    const [calendar, setCalendar] = useState(false);\n    const [selectedTimeZoneData, setSelectedTimeZoneData] = useState([]);\n    const [selectedDayWeekData, setSelectedDayWeekData] = useState([]);\n    const [resultDates, setresultDates] = useState(null);\n    const [dateData, setdateData] = useState([]);\n    const [academyDates, setacademyDates] = useState(null);\n    const [editCalendar, setEditCalendar] = useState(true);\n\n    const [addLectureName, setAddLectureName] = useState(null);\n    const [addLectureStartDate, setAddLectureStartDate] = useState(null);\n    const [addLectureEndDate, setAddLectureEndDate] = useState(null);\n    const [addLectureSampleUrl, setAddLectureSampleUrl] = useState(\"\");\n    const [addLectureIntro, setAddLectureIntro] = useState(null);\n\n    const [topicDataByLecture, settopicDataByLecture] = useState(null);\n    const [regionDataByLecture, setregionDataByLecture] = useState(null);\n    // eslint-disable-next-line no-unused-vars\n    const [lectureDateDataByLecture, setlectureDateByLecture] = useState(null)\n    const [detailByLecture, setDetailByLecture] = useState(null);\n    const [editLectureInfo, seteditLectureInfo] = useState(null);\n    const [notUsingCalendar, setnotUsingCalendar] = useState(false);\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    let submitFlag = false;\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)        \n    }\n\n    function submitCheck(){\n        if(submitFlag){\n            return submitFlag;\n        }else{\n            submitFlag = true;\n            return false;\n        }\n    }\n\n\n    function lectureClick(id, data) {\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = today.getMonth() + 1;\n        if(month<10)\n            month=\"0\"+month\n        var date = year+\"-\"+month;\n\n        if (selectedLecture === id)\n            setSelectedLecture(null);\n        else{\n            setSelectedLecture(id);\n            readMainCalendar(date, lectureData[id].id);\n            setisEdit(false);\n        }\n    }\n\n    const readMainCalendar = async(date, id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'calendar/lecture', {\n                params: {\n                    date: date,\n                    lecture_id: id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setcalendarInfo(response.data)\n        setresultDates(response.data);\n    }\n\n    const readAcademyDates = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'academyDate', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setacademyDates(response.data);\n    }\n\n    const openModal = () => {\n        setnotUsingCalendar(false);\n        setToday(new Date());\n        readCategory();\n        readRegion();\n        setisModalOpen(true)\n        setSelectedDayWeekData([]);\n        setSelectedTimeZoneData([]);\n    }\n    const readCategory = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/category', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setCategoryData(response.data);\n        setSelectedCategoryData([]);\n    }\n\n    const selectCategory = (index) => {\n        const result = selectedCategoryData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedCategoryData([...selectedCategoryData,index]);\n        }else{\n            setSelectedCategoryData(selectedCategoryData.filter(id => id !== index));\n        }\n        \n    }\n\n    const readRegion = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/region', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setRegionData(response.data);\n        setSelectedRegionData([]);\n    }\n\n    const selectRegion = (index) => {\n        const result = selectedRegionData.filter(id => id === index || id === 0);\n        if(result.length === 0){\n            var temp;\n            if(index === 0){\n                temp = [...selectedRegionData,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];\n                temp.sort(function(a, b) {\n                    return a - b;\n                })\n                setSelectedRegionData(temp);\n            }else{\n                temp = [...selectedRegionData,index];\n                temp.sort(function(a, b) {\n                    return a - b;\n                })\n                setSelectedRegionData(temp);\n            }\n        }else{\n            if(index === 0){\n                setSelectedRegionData([]);\n            }else{\n                setSelectedRegionData(selectedRegionData.filter(id => id !== index  && id !== 0));\n            }\n        }\n    }\n\n\n    const selectTimeZone = (index) => {\n        const result = selectedTimeZoneData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedTimeZoneData([...selectedTimeZoneData,index]);\n        }else{\n            setSelectedTimeZoneData(selectedTimeZoneData.filter(id => id !== index));\n        }\n    }\n\n    const selectDayWeek = (index) => {\n        const result = selectedDayWeekData.filter(id => id === index);\n        if(result.length === 0){\n            setSelectedDayWeekData([...selectedDayWeekData,index]);\n        }else{\n            setSelectedDayWeekData(selectedDayWeekData.filter(id => id !== index));\n        }\n    }\n\n    const closeModal = () => {\n        setisModalOpen(false)\n        setCalendar(false);\n        setSelectedDayWeekData([]);\n        setAddLectureStartDate(null);\n        setAddLectureEndDate(null);\n        submitFlag = false;\n    }\n\n    useEffect(() => {\n        readLecture();\n        readAcademyDates();\n        readSettingInfo();\n    }, []);\n\n\n    useEffect(() => {\n        if(selectedLecture !== null) {\n            seteditLectureInfo(lectureData[selectedLecture]);\n            readTopicByLectureId();\n            readRegionByLectureId();\n            readLectureDateByLectureId();\n            readDetailByLectureId();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLecture]);\n\n\n    useEffect(() => {\n        if(detailByLecture !== null && lectureData[selectedLecture].date.length !== 0) {\n            setnotUsingCalendar(false);\n            var day_split = detailByLecture.day_week.split(\",\");\n            var default_day_week = [0,0,0,0,0,0,0];\n            day_split.forEach(day => {\n                if(day.trim()  === \"월\")    default_day_week[1] = 1;\n                if(day.trim()  === \"화\")    default_day_week[2] = 1;\n                if(day.trim()  === \"수\")    default_day_week[3] = 1;\n                if(day.trim()  === \"목\")    default_day_week[4] = 1;\n                if(day.trim()  === \"금\")    default_day_week[5] = 1;\n                if(day.trim()  === \"토\")    default_day_week[6] = 1;\n                if(day.trim()  === \"일\")    default_day_week[0] = 1;\n            });\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: detailByLecture.start_date,\n                end_date: detailByLecture.end_date,\n                morning: detailByLecture.morning,\n                afternoon: detailByLecture.afternoon,\n                evening: detailByLecture.evening,\n                day_week_array: default_day_week\n            })\n        } else if(detailByLecture !== null){\n            setnotUsingCalendar(true);\n            seteditLectureInfo({\n                ...editLectureInfo,\n                start_date: detailByLecture.start_date,\n                end_date: detailByLecture.end_date,\n                morning: detailByLecture.morning,\n                afternoon: detailByLecture.afternoon,\n                evening: detailByLecture.evening,\n                day_week_array: [0,0,0,0,0,0,0]\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [detailByLecture])\n\n    useEffect(() => {\n        setSelectedLecture(null);\n    }, [page])\n\n    const readLectureDateByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lectureDate',\n            {\n                params: {\n                    lecture_id: lectureData[selectedLecture].id,\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setlectureDateByLecture(response.data);\n    }\n\n    const readTopicByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/topic/'+lectureData[selectedLecture].id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        settopicDataByLecture(response.data);\n    }\n\n    const readRegionByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/region/'+lectureData[selectedLecture].id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setregionDataByLecture(response.data);\n    }\n\n    const readDetailByLectureId = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/lectureDetail/'+lectureData[selectedLecture].id, {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setDetailByLecture(response.data);\n    }\n\n    useEffect(() => {\n        setCalendar(false);\n    }, [addLectureStartDate]);\n    useEffect(() => {\n        setCalendar(false);\n    }, [addLectureEndDate]);\n    useEffect(() => {\n        setCalendar(false);\n    }, [selectedDayWeekData])\n\n    const createLecture = async() => {\n        if(addLectureName === null || addLectureName === \"\") {\n            alert(\"강의 제목을 입력해주세요.\");\n            return;\n        }\n        if(selectedCategoryData === [] || selectedCategoryData.length === 0) {\n            alert(\"강의 주제를 선택해주세요.\");\n            return;\n        }\n        if(selectedRegionData === [] || selectedRegionData.length === 0) {\n            alert(\"강의 가능 지역을 선택해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && (selectedTimeZoneData === [] || selectedTimeZoneData.length === 0)) {\n            alert(\"강의 가능 시간대를 선택해주세요.\");\n            return;\n        }\n        // if(addLectureSampleUrl === null || addLectureSampleUrl === \"\") {\n        //     alert(\"강의 샘플 주소를 입력해주세요.\");\n        //     return;\n        // }\n        if(addLectureIntro === null || addLectureIntro === \"\") {\n            alert(\"강의 소개를 입력해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && !calendar) {\n            alert(\"캘린더에 일정을 반영해주세요!\");\n            return;\n        }\n        if(submitCheck()){\n            alert(\"데이터 처리 중입니다.\");\n            return;\n        }\n        if(window.confirm(\"강의를 추가하시겠습니까?\")) {\n            var params = new URLSearchParams();\n            params.append('name', addLectureName);\n            params.append('intro', addLectureIntro);\n            params.append('sample_url', addLectureSampleUrl);\n            if(!notUsingCalendar){\n                params.append('start_date', addLectureStartDate);\n                params.append('end_date', addLectureEndDate);\n                params.append('day_week', Array.from(new Set(selectedDayWeekData)).join(', '));\n            }\n\n            params.append('morning', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"morning\").length);\n            params.append('afternoon', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"afternoon\").length);\n            params.append('evening', Array.from(new Set(selectedTimeZoneData)).filter(timezone => timezone === \"evening\").length);\n            params.append('topic', Array.from(new Set(selectedCategoryData)).join(','));\n            if(selectedRegionData.filter(id => id === 0).length >= 1){\n                params.append('region', \"0\");\n            }else{\n                params.append('region', Array.from(new Set(selectedRegionData)).join(','));\n            }\n            params.append('dateData', dateData);\n            params.append('token', window.sessionStorage.getItem('token'));\n            params.append('manageID', window.sessionStorage.getItem('id'));\n\n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/instructor/'+window.sessionStorage.getItem('id'), //[loginID]로그인 후 변경\n            params,\n            );\n\n            setAddLectureName(null);\n            setAddLectureIntro(null);\n            setAddLectureSampleUrl(\"\");\n            setAddLectureStartDate(null);\n            setAddLectureEndDate(null);\n            setSelectedDayWeekData([]);\n            setSelectedTimeZoneData([]);\n            setSelectedCategoryData([]);\n            setSelectedRegionData([]);\n\n            readLecture();\n            alert(\"강의를 추가했습니다.\");\n            submitFlag = false;\n            closeModal();\n        }\n    }\n\n    const openCalendar = () => {\n        if(addLectureStartDate===null || addLectureEndDate===null || selectedDayWeekData.length===0) {\n            alert(\"시작날짜, 끝날짜, 요일을 모두 선택해주세요!\");\n            return;\n        }\n        var allDays = betweenDate();\n        var weekDays = [0,0,0,0,0,0,0]; // 일, 월, 화, 수, 목, 금, 토\n        var resultDates = [];\n\n        selectedDayWeekData.forEach(day => {\n            if(day === \"일\")    weekDays[0] = 1;\n            else if(day === \"월\")    weekDays[1] = 1;\n            else if(day === \"화\")    weekDays[2] = 1;\n            else if(day === \"수\")    weekDays[3] = 1;\n            else if(day === \"목\")    weekDays[4] = 1;\n            else if(day === \"금\")    weekDays[5] = 1;\n            else if(day === \"토\")    weekDays[6] = 1;\n        });\n        allDays.forEach(date => {\n            if(weekDays[new Date(date).getDay()] === 1)\n                resultDates.push(date);\n        });\n        setresultDates(resultDates);\n\n        setCalendar(true)\n    }\n\n    const reCalendar = () => {\n        if(addLectureStartDate===null || addLectureEndDate===null || selectedDayWeekData.length===0) {\n            alert(\"시작날짜, 끝날짜, 요일을 선택해주세요!\");\n            return;\n        }\n        if(window.confirm(\"위에 일정을 다시 캘린더에 반영하면 캘린더에서 편집했던 일정이 모두 사라집니다. 반영하시겠습니까?\")) {\n            var allDays = betweenDate();\n            var weekDays = [0,0,0,0,0,0,0]; // 일, 월, 화, 수, 목, 금, 토\n            var resultDates = [];\n\n            selectedDayWeekData.forEach(day => {\n                if(day === \"일\")    weekDays[0] = 1;\n                else if(day === \"월\")    weekDays[1] = 1;\n                else if(day === \"화\")    weekDays[2] = 1;\n                else if(day === \"수\")    weekDays[3] = 1;\n                else if(day === \"목\")    weekDays[4] = 1;\n                else if(day === \"금\")    weekDays[5] = 1;\n                else if(day === \"토\")    weekDays[6] = 1;\n            });\n            allDays.forEach(date => {\n                if(weekDays[new Date(date).getDay()] === 1)\n                    resultDates.push(date);\n            });\n            setresultDates(resultDates);\n        }\n    }\n\n    const reEditCalendar = () => {\n        setEditCalendar(true);\n        if(editLectureInfo.start_date === null || editLectureInfo.start_date === \"\" || editLectureInfo.end_date === null || editLectureInfo.end_date === \"\" || editLectureInfo.day_week_array.find(element => element === 1) === undefined) {\n            alert(\"시작날짜, 끝날짜, 요일을 모두 선택해주세요!\");\n            return;\n        }\n        if(window.confirm(\"위에 일정을 다시 캘린더에 반영하면 캘린더에서 편집했던 일정이 모두 사라집니다. 반영할까요?\")) {\n            var allDays = betweenEditDate();\n            var tempData;\n            if(resultDates !== null){\n                tempData = resultDates.filter((e)=>(e.form_id !== 0));\n            }else {\n                tempData = [];\n            }\n\n            allDays.forEach(date => {\n                if(editLectureInfo.day_week_array[new Date(date).getDay()] === 1)\n                    tempData.push({\n                        lecture_date_id:0,\n                        date: date,\n                        form_id: 0\n                    });\n            });\n            setresultDates(tempData);\n        }\n    }\n\n\n    function betweenDate() {\n        var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\n        if(!(regex.test(addLectureStartDate) && regex.test(addLectureEndDate))) return \"Not Date Format\";\n        var result = [];\n        var curDate = new Date(addLectureStartDate);\n        while(curDate <= new Date(addLectureEndDate)) {\n            result.push(curDate.toISOString().split(\"T\")[0]);\n            curDate.setDate(curDate.getDate() + 1);\n        }\n        return result;\n    }\n\n    function betweenEditDate() {\n        var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\n        if(!(regex.test(editLectureInfo.start_date) && regex.test(editLectureInfo.end_date))) return \"Not Date Format\";\n        var result = [];\n        var curDate = new Date(editLectureInfo.start_date);\n        while(curDate <= new Date(editLectureInfo.end_date)) {\n            result.push(curDate.toISOString().split(\"T\")[0]);\n            curDate.setDate(curDate.getDate() + 1);\n        }\n        return result;\n    }\n\n    const readLecture = async (id) => {\n        setLectureLoading(true);\n        setSelectedLecture(null);\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'lecture/user/'+window.sessionStorage.getItem('id'), {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setLectureData(response.data);\n\n        setLectureLoading(false);\n    }\n\n    const handlePageChange = (page) => {\n        setPage(page);\n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = lectureData.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    const deleteLecture = () => {\n        if(window.confirm(\"강의를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture/delete',\n                    method: 'put',\n                    data: {\n                        id: lectureData[selectedLecture].id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readLecture();\n                setSelectedLecture(null);\n                alert(\"강의가 삭제되었습니다.\")\n            })\n        }\n    }\n\n    const updateBtnClick = () => {\n        setToday(new Date());\n        setisEdit(true);\n    }\n\n    const cancelBtnClick = () => {\n        setisEdit(false);\n        seteditLectureInfo(lectureData[selectedLecture]);\n        readTopicByLectureId();\n        readRegionByLectureId();\n        readLectureDateByLectureId();\n        readDetailByLectureId();\n    }\n\n    // const updateLecture = () => {\n    //     setisEdit(true);\n    // }\n\n    const onEdit = (e) => {\n        const { value, name } = e.target;\n        if(name === \"start_date\" || name===\"end_date\") {\n            setEditCalendar(false);\n        }\n        seteditLectureInfo({\n            ...editLectureInfo,\n            [name]: value\n        });\n    };\n\n    const clickTopic = (data) => {\n        let newTopic = topicDataByLecture.map((topic, i) => {\n            if(topic.id === data.id) {\n                if(topic.status === 0)\n                    return {...topic, status:1};\n                else\n                    return {...topic, status:0};\n            } else {\n                return topic;\n            }\n        })\n        settopicDataByLecture(newTopic);\n    }\n\n    const clickRegion = (data) => {\n        let newRegion = regionDataByLecture.map((region, i) => {\n            if(region.id === 0){\n                return {...region, status:0};\n            }\n            if(region.id === data.id) {\n                if(region.status === 0)\n                    return {...region, status:1};\n                else\n                    return {...region, status:0};\n            } else {\n                return region;\n            }\n        })\n        setregionDataByLecture(newRegion);\n    }\n\n    const clickTimezone = (time) => {\n        var status=0;\n        if(time===\"morning\") {\n            if(editLectureInfo.morning === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                morning: status\n            })\n        }\n        else if(time===\"afternoon\") {\n            if(editLectureInfo.afternoon === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                afternoon: status\n            })\n        }\n        if(time===\"evening\") {\n            if(editLectureInfo.evening === 0)\n                status=1;\n            seteditLectureInfo({\n                ...editLectureInfo,\n                evening: status\n            })\n        }\n    }\n\n    const updateFinishBtn = () => {\n        if(!notUsingCalendar && !editCalendar) {\n            alert(\"캘린더에 일정을 반영해주세요!\");\n            return;\n        }\n        if(editLectureInfo.name === \"\" || editLectureInfo.name === null) {\n            alert(\"강의 제목을 입력해주세요.\");\n            return;\n        }\n        if(regionDataByLecture.find(element => element.status === 1) === undefined) {\n            alert(\"강의 가능 지역을 선택해주세요.\");\n            return;\n        }\n        if(topicDataByLecture.find(element => element.status === 1) === undefined) {\n            alert(\"강의 주제를 선택해주세요.\");\n            return;\n        }\n        if(!notUsingCalendar && editLectureInfo.morning === 0 && editLectureInfo.afternoon === 0 && editLectureInfo.evening === 0) {\n            alert(\"강의 가능 시간대를 선택해주세요.\");\n            return;\n        }\n        var day_week_string = [];\n        editLectureInfo.day_week_array.forEach((item, index) => {\n            if(index === 0 && item === 1)   day_week_string.push(\"일\");\n            if(index === 1 && item === 1)   day_week_string.push(\"월\");\n            if(index === 2 && item === 1)   day_week_string.push(\"화\");\n            if(index === 3 && item === 1)   day_week_string.push(\"수\");\n            if(index === 4 && item === 1)   day_week_string.push(\"목\");\n            if(index === 5 && item === 1)   day_week_string.push(\"금\");\n            if(index === 6 && item === 1)   day_week_string.push(\"토\");\n        });\n        day_week_string = day_week_string.join(',');\n\n        console.log(editLectureInfo)\n        if(window.confirm(\"강의를 수정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'lecture',\n                    method: 'put',\n                    data: {\n                        ...editLectureInfo,\n                        regionInfo: regionDataByLecture,\n                        topicInfo: topicDataByLecture,\n                        dateInfo: resultDates,\n                        day_week: day_week_string,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                readLecture();\n                setSelectedLecture(null);\n                setisEdit(false);\n                alert(\"강의가 수정되었습니다.\")\n            })\n        }\n    }\n\n    const editDayClick = (index) => {\n        let updateArr = editLectureInfo.day_week_array;\n        updateArr.forEach((item, i) => {\n            if(i === index) {\n                if(item === 0)\n                    updateArr[i] = 1;\n                else\n                    updateArr[i] = 0;\n            }\n        });\n        seteditLectureInfo({\n            ...editLectureInfo,\n            day_week_array: updateArr\n        });\n        setEditCalendar(false);\n    }\n\n    const clickEveryRegion = () => {\n        var isEvery = regionDataByLecture[0].status;\n\n        let newArr = regionDataByLecture.map((item, i) => {\n            if (isEvery) {  // 전국 체크 해제\n                return { ...item, status: 0 };\n            } else {\n                return { ...item, status: 1 };\n            }\n        });\n\n        setregionDataByLecture(newArr);\n\n    }\n\n\n    return (\n        <div>\n            <div className=\"mypage-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/instructor_mypage.png'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2 style={{color:'white'}}>마이페이지</h2>\n                    <p>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"mypage_lecture_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"inst-title-header\">\n                <h2 style={{color:'white'}}>마이페이지</h2>\n                <p>\n                    {settingInfo !== null ?\n                    settingInfo.find(element => element.key === \"mypage_lecture_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                    \"\"\n                    }\n                </p>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"}>내 프로필</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"}>내 강의함</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"}>컨택 일정</Link>\n                    </span>\n                    <span>\n                    <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"}>방문일지</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                <CommonModal open={isModalOpen} close={closeModal} func={createLecture} header=\"강의 추가하기\" footer=\"추가하기\">\n                        <div className=\"lecture-info-wrapper\">\n                            <p className=\"lecture-date\">\n                                <span>작성일 {today.toLocaleString()}</span>\n                                {/* <span className=\"lecture-update\">수정일 2021_07_14_일</span> */}\n                            </p>\n                            <div className=\"p4030\">\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">강의 제목</span>\n                                    <input className=\"lecture-input\" onChange={(e) => { setAddLectureName(e.target.value); }}/>\n                                </div>\n                                <hr className=\"lecture-hr\"/>\n                                <div className=\"category-grid mb20\">\n                                    <span className=\"lecture-info-title\">가능 지역</span>\n                                    <div className=\"category-wrapper\">\n                                        {regionData !== null ?\n                                        regionData.map((dataUnit, index2) => (\n                                            <div key={index2} className={selectedRegionData.filter(id => id === dataUnit.id || id === 0).length !== 0? \"category-btn category-active\": \"category-btn \"} onClick = {() => {selectRegion(dataUnit.id)}}>{dataUnit.name}</div>\n                                        )):null}\n                                    </div>\n                                </div>\n                                <div className=\"category-grid\">\n                                    <span className =\"lecture-info-title\">주제 카테고리</span>\n                                    <div className=\"category-wrapper\">\n                                        {categoryData !== null ?\n                                        categoryData.map((dataUnit, index2) => (\n                                            <div key={index2} className={selectedCategoryData.filter(id => id === dataUnit.id).length !== 0? \"category-btn category-active\":\"category-btn \"} onClick = {() => {selectCategory(dataUnit.id)}}>{dataUnit.name}</div>\n                                        )):null}\n                                    </div>\n                                </div>\n                                <hr className=\"lecture-hr\"/>\n                                {notUsingCalendar ?\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" onChange={(e) => setnotUsingCalendar(!notUsingCalendar)} checked/>\n                                        </div>\n                                    </span>\n                                </div>\n                                :\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <input className=\"lecture-input\" type=\"date\" onChange={(e) => { setAddLectureStartDate(e.target.value); }}/> ~ <input className=\"lecture-input\" type=\"date\"  onChange={(e) => { setAddLectureEndDate(e.target.value); }}/>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" onChange={(e) => setnotUsingCalendar(!notUsingCalendar)}/>\n                                        </div>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 시간대</span>\n                                    <span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"morning\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"morning\")}}>오전</span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"afternoon\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"afternoon\")}}>오후</span>\n                                        <span className={selectedTimeZoneData.filter(id => id === \"evening\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectTimeZone(\"evening\")}}>저녁</span>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 요일</span>\n                                    <span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"월\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"월\")}}>월</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"화\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"화\")}}>화</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"수\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"수\")}}>수</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"목\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"목\")}}>목</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"금\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"금\")}}>금</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"토\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"토\")}}>토</span>\n                                        <span className={selectedDayWeekData.filter(id => id === \"일\").length !== 0? \"day-btn day-active\":\"day-btn\"} onClick = {() => {selectDayWeek(\"일\")}}>일</span>\n                                    </span>\n                                    <span></span>\n                                    <WhiteButton name={calendar === true? \"다시 반영하기\":\"캘린더에서 확인하기\"} click={calendar === true? reCalendar:openCalendar}/>\n                                </div>\n                                }\n                                {calendar === true?\n                                <CommonCalendar academyDates={academyDates} resultDates={resultDates} setdateData={setdateData}/>\n                                :\n                                null\n                                }\n                                <hr className=\"lecture-hr\"/>\n                                <div className=\"lecture-grid-layout2 mb15\">\n                                    <span className=\"lecture-info-title\">강의 URL 주소</span>\n                                    <input className=\"lecture-input mr15\" onChange={(e) => { setAddLectureSampleUrl(e.target.value); }}/>\n                                    <span className=\"lecture-info-title\">강의 내용 설명</span>\n                                    <textarea className=\"lecture-input mr15 h600\"  onChange={(e) => { setAddLectureIntro(e.target.value); }}></textarea>\n                                </div>\n                                {/* <div className=\"button-wrapper\">\n                                    <GreyButton class=\"mr15\" name=\"수정 완료\"/>\n                                    <GreyButton class=\"\" name=\"강의 삭제\"/>\n                                </div> */}\n                            </div>\n                        </div>\n                    </CommonModal>\n                    <div className=\"table-wrapper\">\n                        <div style={{textAlign:\"right\", marginBottom:'30px'}}>\n                        <WhiteButton name=\"강의 추가하기\" click={openModal}/>\n                        </div>\n                        <div className=\"table-row-mylec\">\n                            <div className=\"th\">주제</div>\n                            <div className=\"th\">강의명</div>\n                            <div className=\"th date\">기간</div>\n                            <div className=\"th location\">강의 지역</div>\n                        </div>\n                        {lectureLoading === false && lectureData !== null && lectureData.length > 0 ?\n                        currentPosts(lectureData).map((data, index) => (\n                            <div key={index} className={selectedLecture === index+((page-1)*postsPerPage) ? \"subject-table-row selected-subject\": \"subject-table-row\"} onClick = {() => {lectureClick(index+((page-1)*postsPerPage), data)}}>\n                                <div className=\"td\">{data.topic}</div>\n                                <div className=\"td\">{data.name}</div>\n                                <div className=\"td date\">{data.date === \"\" || data.date.length === 0 ? \"일정 미지정\":data.date}</div>\n                                <div className=\"td location\">{data.region}</div>\n                            </div>\n                        )):\n                        lectureLoading === true?\n                        <div className=\"lecture-loading\"><ReactLoading type=\"spin\" color=\"rgb(5 88 156 / 47%)\" className=\"lecture-loading-data\" width=\"50px\"/></div>:\n                        <div className=\"lecture-no-data\">강의가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination\n                        activePage={page}\n                        itemsCountPerPage={postsPerPage}\n                        totalItemsCount={lectureData !== null ? lectureData.length : 0}\n                        pageRangeDisplayed={5}\n                        prevPageText={\"‹\"}\n                        nextPageText={\"›\"}\n                        onChange={handlePageChange}\n                    />\n                    {/* 강의별 상세 내용 박스 */}\n                    {selectedLecture !== null?\n                    isEdit === true ?\n                    <div className=\"lecture-info-wrapper\">\n                        <p className=\"lecture-date\">\n                            <span>작성일 {editLectureInfo.reg_date}</span>\n                            <span className=\"lecture-update\">수정일 {today.toLocaleString()}</span>\n                        </p>\n                        <div className=\"p4030\">\n                            <div className=\"lecture-grid-layout2 mb15\">\n                                <span className=\"lecture-info-title\">강의 제목</span>\n                                <input className=\"lecture-input\" defaultValue={editLectureInfo.name} name=\"name\" onChange={onEdit}/>\n                            </div>\n                            {/* <div className=\"mb15\">\n                                <span className=\"lecture-info-title\">강사명</span>\n                                <span className=\"l\">강사명</span>\n                            </div> */}\n                            <hr className=\"lecture-hr\"/>\n                            <div className=\"lecture-grid-layout mb15\">\n                                <span className=\"lecture-info-title\">가능 지역</span>\n                                <div className=\"category-wrapper\">\n                                    {regionDataByLecture !== null ?\n                                    regionDataByLecture.map((data, index) => (\n                                        <span\n                                            key={index}\n                                            className={data.status === 1 ? \"category-btn category-active\" : \"category-btn\"}\n                                            onClick={() => {data.id === 0 ? clickEveryRegion() : clickRegion(data)}}>\n                                            {data.name}\n                                        </span>\n                                    ))\n                                    :\n                                    <div>선택 가능한 지역이 없습니다.</div>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"category-grid\">\n                                <span className=\"lecture-info-title\">주제 카테고리</span>\n                                <div className=\"category-wrapper\">\n                                    {topicDataByLecture !== null ?\n                                    topicDataByLecture.map((data, index) => (\n                                        <span key={index} className={data.status === 1 ? \"category-btn category-active\" : \"category-btn\"} onClick={() => clickTopic(data)}>{data.name}</span>\n                                    ))\n                                    :\n                                    <div>선택 가능한 주제가 없습니다.</div>\n                                    }\n                                </div>\n                            </div>\n                            <hr className=\"lecture-hr\"/>\n                            {notUsingCalendar ?\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" value={notUsingCalendar} onChange={(e) => {setresultDates(null); setnotUsingCalendar(!notUsingCalendar); setEditCalendar(false);}} checked/>\n                                        </div>\n                                    </span>\n                                </div>\n                                :\n                                <div className=\"mb40 lecture-grid-layout\">\n                                    <span className=\"lecture-info-title\">가능한 날짜</span>\n                                    <span>\n                                        <input className=\"lecture-input\" name=\"start_date\" defaultValue={editLectureInfo.start_date} onChange={onEdit} type=\"date\"/> ~ <input className=\"lecture-input\" name=\"end_date\" onChange={onEdit} defaultValue={editLectureInfo.end_date} type=\"date\"/>\n                                        <div className=\"mt5\">\n                                            <label className=\"mr10\">일정 미지정</label>\n                                            <input type=\"checkbox\" value={notUsingCalendar} onChange={(e) => {setnotUsingCalendar(!notUsingCalendar)}}/>\n                                        </div>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 시간대</span>\n                                    <span>\n                                        <span className={editLectureInfo.morning ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"morning\")}>아침</span>\n                                        <span className={editLectureInfo.afternoon ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"afternoon\")}>점심</span>\n                                        <span className={editLectureInfo.evening ? \"day-btn day-active\" : \"day-btn\"} onClick={()=>clickTimezone(\"evening\")}>저녁</span>\n                                    </span>\n                                    <span className=\"lecture-info-title\">가능한 요일</span>\n                                    <span>\n                                        <span className={editLectureInfo.day_week_array[1] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(1)}>월</span>\n                                        <span className={editLectureInfo.day_week_array[2] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(2)}>화</span>\n                                        <span className={editLectureInfo.day_week_array[3] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(3)}>수</span>\n                                        <span className={editLectureInfo.day_week_array[4] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(4)}>목</span>\n                                        <span className={editLectureInfo.day_week_array[5] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(5)}>금</span>\n                                        <span className={editLectureInfo.day_week_array[6] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(6)}>토</span>\n                                        <span className={editLectureInfo.day_week_array[0] === 1 ? \"day-btn day-active\": \"day-btn\"} onClick={()=>editDayClick(0)}>일</span>\n                                    </span>\n                                    <WhiteButton name=\"다시 반영하기\" click={reEditCalendar}/>\n                                </div>\n                                }\n                            {notUsingCalendar ?\n                                <div></div>:\n                                <LectureCalendar\n                                        academyDates={academyDates}\n                                        calendarData={resultDates}\n                                        path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")}\n                                        lectureId={selectedLecture.id}\n                                        setResultDates={setresultDates}\n                                />\n                            }\n                            <hr className=\"lecture-hr\"/>\n                            <div className=\"lecture-grid-layout2 mb15\">\n                                <span className=\"lecture-info-title\">강의 URL 주소</span>\n                                <input className=\"lecture-input mr15\" defaultValue={editLectureInfo.sample_url !== null && editLectureInfo.sample_url !== \"null\"? editLectureInfo.sample_url: \"\"} name=\"sample_url\" onChange={onEdit}/>\n                                <span className=\"lecture-info-title\">강의 내용 설명</span>\n                                <textarea className=\"lecture-input mr15 h600\" defaultValue={editLectureInfo.intro !== null && editLectureInfo.intro !== \"null\"? editLectureInfo.intro.replaceAll(\"<br/>\",\"\\n\"):\"\"} name=\"intro\" onChange={onEdit}/>\n                            </div>\n                            <div className=\"button-wrapper\">\n                                <GreyButton class=\"mr15\" name=\"수정 완료\" click={updateFinishBtn}/>\n                                <GreyButton class=\"\" name=\"수정 취소\" click={cancelBtnClick}/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"show-lecture-detail\">\n                        <div className=\"detail-title\">\n                            <h2>{lectureData[selectedLecture].name}</h2>\n                            <span>{lectureData[selectedLecture].instructor_name}</span>\n                            <div className = \"detail-date\"><span>강의가능기간: {lectureData[selectedLecture].date.length === 0? \"일정 미지정\":lectureData[selectedLecture].date}</span></div>\n                        </div>\n                        <div className=\"detail-content\">\n                            <div className=\"detail-sub-info\">\n                                <span>강의 가능 지역</span>\n                                <span>: {lectureData[selectedLecture].region} </span>\n                                <span>강의 주제 카테고리\u001d</span>\n                                <span>: {lectureData[selectedLecture].topic}</span>\n                                {lectureData[selectedLecture].sample_url !== null && lectureData[selectedLecture].sample_url !== \"\" && lectureData[selectedLecture].sample_url !== \"null\"? <span>강의 URL 주소</span>:null}\n                                {lectureData[selectedLecture].sample_url !== null && lectureData[selectedLecture].sample_url !== \"\" && lectureData[selectedLecture].sample_url !== \"null\"? <span>: <a href={lectureData[selectedLecture].sample_url}>{lectureData[selectedLecture].sample_url}</a></span>:null}\n                            </div>\n                            <p className=\"mb30\">\n                                {lectureData[selectedLecture].intro === null ? \"\" : lectureData[selectedLecture].intro.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>)}\n                            </p>\n                            {\n                                lectureData[selectedLecture].date.length === 0?\n                                \"일정 추후 문의\":\n                                <div className=\"lecture-inst-calendar\">\n                                    <ReadCalendar\n                                        academyDates={academyDates}\n                                        readMainCalendar={readMainCalendar} \n                                        calendarData={calendarInfo} \n                                        path={window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"/\")} \n                                        clickedLecture={lectureData[selectedLecture]}/>\n                                </div>\n                            }\n                            <div style={{textAlign:'center'}}>\n                                <WhiteButton class=\"mr15\" name=\"수정하기\" click={updateBtnClick}/>\n                                <WhiteButton name=\"삭제하기\" click={deleteLecture}/>\n                            </div>\n                        </div>\n                    </div>:null\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MypageLecture;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { RMIUploader } from \"react-multiple-image-uploader\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport ReactLoading from \"react-loading\";\nimport Pagination from \"react-js-pagination\";\n\nimport '../../../assets/css/table.css';\nimport '../../../assets/css/Contact.css';\n\n\nconst VisitDiary = (props) => {\n    const [applicationInfo, setapplicationInfo] = useState(null);\n    const [selectedLecture, setSelectedLecture] = useState(null);\n    const [visitingLogFileData, setVisitingLogFileData] = useState([]);\n    const [visitingLogContent, setVisitingLogContent] = useState(null)\n    const [visible, setVisible] = useState(false);\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    var visitingLogFile = [];\n\n    useEffect(() => {\n        readApplicationForms();\n        readSettingInfo();\n    },[]);\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)        \n    }\n\n    const selectButton = async(data) => {\n        if(selectedLecture === null || selectedLecture !== data) {\n            if(data.visit_reg_date !== null){\n                const response = await axios.get(\n                    process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/file/'+data.feedback_id, {\n                        params: {\n                            token: window.sessionStorage.getItem('token'),\n                            manageID: window.sessionStorage.getItem('id')\n                        }\n                    }\n                );\n                setVisitingLogFileData(response.data);\n            }\n            setSelectedLecture(data);\n        } else {\n            setSelectedLecture(null);\n        }\n    }\n\n    const readApplicationForms = async() => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'application/instructor/'+window.sessionStorage.getItem('id'), {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setapplicationInfo(response.data);\n    }\n\n    const hideModal = () => {\n        setVisible(false);\n    };\n    const onUpload = (data) => {\n        visitingLogFile = data;\n    };\n    const onSelect = (data) => {\n    };\n    const onRemove = (id) => {\n    };\n\n    const insertVisitingLog = async() => {\n        if(window.confirm(\"방문일지를 저장하시겠습니까?\")) {\n            document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n            //document.getElementsByClassName(\"ant-btn-icon-only\")[1].click();\n            //const blob = await fetch(base64).then(res => res.blob());\n\n            const params = new FormData();\n            const headers = {\n                'Content-type': 'multipart/form-data; charset=UTF-8',\n                'Accept': '*/*'\n            }\n            //var params = new URLSearchParams();\n            params.append('content', visitingLogContent);\n\n            for(var i=0; i<visitingLogFile.length; i++){\n                params.append('file', visitingLogFile[i].file);\n            }\n            params.append('token', window.sessionStorage.getItem('token'));\n            params.append('manageID', window.sessionStorage.getItem('id'));\n            \n            await axios.post(\n            process.env.REACT_APP_RESTAPI_HOST + 'visiting_log/application_form/'+selectedLecture.id, //[loginID]로그인 후 변경\n            params,{headers}).then(function(res) {\n                alert(\"방문일지가 저장되었습니다.\")\n                readApplicationForms();\n                setSelectedLecture(null);\n            });\n        }\n    };\n    const deleteButton = async(data) => {\n        console.log(selectedLecture);\n        if(window.confirm(\"방문일지를 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'visiting_log',\n                    method: 'delete',\n                    data: {\n                        id: selectedLecture.feedback_id,\n                        application_form_id: selectedLecture.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"삭제가 완료되었습니다.\")\n                readApplicationForms();\n                setSelectedLecture(null);\n            })\n        }\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = applicationInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    return (\n        <div>\n            <div className=\"mypage-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/application.jpeg'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2>마이페이지</h2>\n                    <p style={{color:'black'}}>\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"mypage_visit_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"inst-title-header\">\n                <h2 style={{color:'white'}}>마이페이지</h2>\n                <p>\n                    {settingInfo !== null ?\n                    settingInfo.find(element => element.key === \"mypage_visit_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                    \"\"\n                    }\n                </p>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"}>내 프로필</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"}>내 강의함</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"}>컨택 일정</Link>\n                    </span>\n                    <span>\n                    <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"}>방문일지</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    <div className=\"table-wrapper\">\n                        <div className=\"table-row-visit\">\n                            <div className=\"th visit-index\"></div>\n                            <div className=\"th\">방문한 교회명</div>\n                            <div className=\"th visit-date\">다녀온 날짜</div>\n                            <div className=\"th\">일지 작성</div>\n                        </div>\n                        { applicationInfo !== null && applicationInfo.length >= 1?\n                            currentPosts(applicationInfo).map((data, index) => \n                                <div key={index} className={selectedLecture !== null && selectedLecture.id === data.id ? \"click-inst-row table-row-visit\" : \"table-row-visit\"} onClick = {() => {selectButton(data)}}>\n                                    <div className=\"td visit-index\">{(index+1)+((page-1)*postsPerPage)}</div>\n                                    <div className=\"td\">{data.church_name}</div>\n                                    <div className=\"td visit-date\">{data.date}</div>\n                                    {data.visit_reg_date !== null?\n                                        <span className=\"td\">피드백 완료</span>\n                                        :<span className=\"td\">피드백 미완료</span>\n                                    }\n                                </div>\n                            )\n                            :\n                            <div className=\"no-content\">신청서가 없습니다.</div>\n                        }\n                    </div>\n                    <Pagination \n                        activePage={page} \n                        itemsCountPerPage={postsPerPage} \n                        totalItemsCount={applicationInfo !== null ? applicationInfo.length : 0} \n                        pageRangeDisplayed={5} \n                        prevPageText={\"‹\"} \n                        nextPageText={\"›\"} \n                        onChange={handlePageChange} \n                    />\n                    {\n                        selectedLecture !== null && selectedLecture.visit_reg_date !== null?\n                            <div className=\"show-lecture-detail\">\n                                <p className=\"regular\"><span className=\"bold\">{selectedLecture.lecture_name}</span>를 강연하셨습니다.</p>\n                                <p className=\"feedback-detail-content\">{selectedLecture.visit_log.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</p>\n                                <div className=\"feedback-image-swiper-wrapper\">\n                                    <Swiper \n                                        spaceBetween={30} \n                                        effect={'fade'}\n                                        centeredSlides={true} \n                                        loop={true} loopFillGroupWithBlank={true}\n                                        pagination={{\n                                            \"clickable\": true\n                                        }} \n                                        navigation={true}\n                                        className=\"feedback-swiper\">\n                                            {visitingLogFileData !== null ?\n                                                visitingLogFileData.map((data, index) => (\n                                                    <SwiperSlide key = {index}>\n                                                        <div className=\"feedback-image-wrapper\"><img src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+data} alt=\"uploadFile\"/></div>\n                                                    </SwiperSlide>\n                                                ))\n                                                : <ReactLoading type=\"spin\" color=\"#05589c\" />\n                                            }\n                                    </Swiper>\n                                </div>\n                                <button className=\"feedback-submit\" onClick={deleteButton}>삭제하기</button>\n                            </div>\n                        :selectedLecture !== null && selectedLecture.status === 2?\n                            <div className=\"show-lecture-detail\">\n                                <p className=\"regular\"><span className=\"bold\">{selectedLecture.lecture_name}</span>를 강연하셨습니다.</p>\n                                <textarea className=\"feedback-textarea\" placeholder=\"글 남기기\" onChange={(e) => {setVisitingLogContent(e.target.value); }}></textarea>\n                                <RMIUploader\n                                    isOpen={visible}\n                                    hideModal={hideModal}\n                                    onSelect={onSelect}\n                                    onUpload={onUpload}\n                                    onRemove={onRemove}\n                                    dataSources={[]}\n                                />\n                                <button className=\"feedback-submit\" onClick={() => insertVisitingLog()}>작성 완료하기</button>\n                            </div>\n                        :null\n                    }\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default VisitDiary;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactLoading from \"react-loading\";\nimport '../../../assets/css/default.css';\nimport '../../../assets/css/lecture_layout.css';\nimport BlueButton from '../../modules/button/blue_button';\n// import Calendar from '../../modules/calendar/common';\nimport { Link } from 'react-router-dom';\n\n\nfunction MypageProfile (props){\n    const [profileInfo, setprofileInfo] = useState(null);\n    const [editProfileInfo, seteditProfileInfo] = useState(null);\n    const [isEdit, setisEdit] = useState(false);\n    const [isAgree, setisAgree] = useState(false);\n    const [removeProfileImage, setRemoveProfileImage] = useState(false)\n    const [profileImage,setProfileImage] = useState(null)\n    const [profileImageBase64, setProfileImageBase64] = useState(\"\")\n    const [settingInfo, setsettingInfo] = useState(null);\n\n    useEffect(() => {\n        readProfile();\n        readSettingInfo();\n    }, []);\n\n    const readSettingInfo = async () => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'setting', {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setsettingInfo(response.data)        \n    }\n\n    const readProfile = async (id) => {\n        const response = await axios.get(\n            process.env.REACT_APP_RESTAPI_HOST + 'instructor/'+window.sessionStorage.getItem('id'), {\n                params: {\n                    token: window.sessionStorage.getItem('token'),\n                    manageID: window.sessionStorage.getItem('id')\n                }\n            }\n        );\n        setprofileInfo(response.data);\n        var responseValue = response.data;\n        responseValue.intro = responseValue.intro.replaceAll(\"<br/>\",\"\\n\");\n        responseValue.memo = responseValue.memo.replaceAll(\"<br/>\",\"\\n\");\n        seteditProfileInfo(responseValue);\n    }\n\n    const clickCancelBtn = () => {\n        setisEdit(false);\n        setisAgree(false);\n        seteditProfileInfo(profileInfo);\n    }\n\n    const clickFinishBtn = async() => {\n        if(!isAgree) {\n            alert(\"개인정보 수집 및 이용 동의에 동의해주세요!\");\n        } else {\n            if(window.confirm(\"프로필 정보를 수정하시겠습니까?\")) {\n                const params = new FormData();\n                const headers = {\n                    'Content-type': 'multipart/form-data; charset=UTF-8',\n                    'Accept': '*/*'\n                }\n                if(removeProfileImage === true){\n                    params.append('image', \"\");\n                }else {\n                    params.append('image', editProfileInfo.image);\n                    params.append('file', profileImage);\n                }\n                //var params = new URLSearchParams();\n                params.append('id', editProfileInfo.id);\n                params.append('position_id', editProfileInfo.position_id);\n                params.append('name', editProfileInfo.name);\n                params.append('phone', editProfileInfo.phone);\n                params.append('intro', editProfileInfo.intro);\n                params.append('memo', editProfileInfo.memo);\n                params.append('token', window.sessionStorage.getItem('token'));\n                params.append('manageID', window.sessionStorage.getItem('id'));\n\n                await axios.post(\n                process.env.REACT_APP_RESTAPI_HOST +'instructor/update',\n                params,{headers})\n                .then(function(res) {\n                    alert(\"프로필 수정이 완료되었습니다.\");\n                    readProfile();\n                    setisEdit(false);\n                    setisAgree(false);\n                });\n            }\n        }\n\n    }\n\n    const changeAgree = () => {\n        if(isAgree)\n            setisAgree(false);\n        else\n            setisAgree(true);\n    }\n\n    const onEdit = (e) => {\n        const {value, name} = e.target;\n        seteditProfileInfo({\n            ...editProfileInfo,\n            [name]:value\n        })\n    }\n\n    const handleChangeFile = (event, setImage, setImagebase64) => {\n        var reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]);\n            setImage(event.target.files[0]);\n        }\n        reader.onloadend = () => {\n          const base64 = reader.result;\n          if (base64) {\n            setImagebase64(base64.toString());\n          }\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"mypage-image relative\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+'image/instructor_mypage.png'} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2 style={{color:'white'}} className=\"page-title\">마이페이지</h2>\n                    <p className=\"page-intro\">\n                        {settingInfo !== null ?\n                        settingInfo.find(element => element.key === \"mypage_profile_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                        \"\"\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"inst-title-header\">\n                <h2 style={{color:'white'}}>마이페이지</h2>\n                <p>\n                    {settingInfo !== null ?\n                    settingInfo.find(element => element.key === \"mypage_profile_phrase\").value.split(\"<br/>\").map( (item, i) => <div key={i}>{item}</div>) :\n                    \"\"\n                    }\n                </p>\n            </div>\n            {profileInfo !== null ?\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"}>내 프로필</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"}>내 강의함</Link>\n                    </span>\n                    <span>\n                        <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"}>컨택 일정</Link>\n                    </span>\n                    <span>\n                    <Link className={props.history.location.pathname === process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"? \"left-active\":\"\"} to={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"}>방문일지</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    {/* <Calendar/> */}\n                    {isEdit?\n                    <div className=\"profile-edit-wrapper\">\n                        <h2 className=\"mb20 fs20\">프로필 사진</h2>\n                        <div className=\"profile-edit\">\n                            <div className=\"profile-image\">\n                            {removeProfileImage === false && profileImage !== null?\n                                <img className=\"profile-img-content\" src={profileImageBase64} alt=\"profile_image\"\n                                onError={(e) => {\n                                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                }}/>:\n                                removeProfileImage === false && profileInfo !== null && profileInfo.image !== \"null\" && profileInfo.image !== null && profileInfo.image !== \"\"?\n                                <img className=\"profile-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+profileInfo.image} alt=\"profile_image\"\n                                onError={(e) => {\n                                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                }}/>\n                                :null\n                                }\n                                </div>\n                            <div className=\"profile-info\">\n                                <div>\n                                    <span className=\"mb30\">이름</span>\n                                    <input className=\"mr10\" style={{width:'136px'}} defaultValue={editProfileInfo.name} name=\"name\" onChange={onEdit}/>\n                                    <select className=\"p48\" defaultValue={editProfileInfo.position_id} name=\"position_id\" onChange={onEdit}>\n                                        <option value=\"3\">교수</option>\n                                        <option value=\"2\">동문</option>\n                                        <option value=\"1\">학부모</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    <span className=\"mb30\">연락처</span>\n                                    <input defaultValue={editProfileInfo.phone} name=\"phone\" onChange={onEdit}/>\n                                </div>\n                                <div><span>이메일</span>{profileInfo.email}</div>\n                            </div>\n                            <div className=\"profile-file\">\n                                <label className={removeProfileImage === false? \"file-button\": \"file-button disabled\"} htmlFor='input-file'>첨부파일</label>\n                                <div className =\"checkbox-wrapper\"><span className =\"checkbox-content\">삭제</span><input className=\"checkbox-input\" type=\"checkbox\" onChange={(e) => {setRemoveProfileImage(!removeProfileImage); }}/></div>\n                            </div>\n                            {removeProfileImage === true?\n                            <input type=\"file\" id=\"input-file\" style={{display:\"none\"}} disabled/>:\n                            <input type=\"file\" id=\"input-file\" style={{display:\"none\"}} onChange={(e) => { handleChangeFile(e, setProfileImage, setProfileImageBase64)}}/>\n                            }\n                        </div>\n                        <textarea className=\"mb30 introduce-textarea\" placeholder=\"인사말 작성란\" defaultValue={editProfileInfo.intro} name=\"intro\" onChange={onEdit}/>\n                        <textarea className=\"profile-textarea mb20\" placeholder=\"약력 작성란\" name=\"memo\" defaultValue={editProfileInfo.memo} onChange={onEdit}/>\n                        <ul className=\"agree-ul mb40\">\n                            <li className=\"mb10\">이단 및 사이비 단체는 작성글을 게시할 수 없으며 적발 시 예배 및 설교 방해죄 (형법 제 158조), 퇴거불응죄(형법 제 319조 2항), 업무방해죄(형법 제314조), 개인정보보호법 위반 등으로 처벌받을 수 있습니다.</li>\n                            <li>개인 정보 수집 동의 - 이용자가 제공한 모든 정보는 다음의 목적을 위해 활용하며, 하기 목적 이외의 용도로는 사용하지 않습니다.</li>\n                        </ul>\n                        <div>\n                            <input className=\"agree-check mr10\" type=\"checkbox\" defaultValue={isAgree} onChange={changeAgree}/>\n                            <span className=\"fs14\">개인정보 수집 및 이용에 대해 동의합니다.</span>\n                        </div>\n                        <div style={{textAlign:'center', marginTop:'30px'}}>\n                            <BlueButton class=\"mr15\" name=\"수정완료\" click={() => clickFinishBtn()}/>\n                            <BlueButton name=\"수정취소\" click={() => clickCancelBtn()}/>\n                        </div>\n                    </div>\n                    :\n                    <div>\n                        <div className=\"profile-wrapper\">\n                            <h2 className=\"mb20 fs20\">프로필 사진</h2>\n                            <div className=\"profile\">\n                                <div className=\"profile-image\">\n                                {profileInfo.image !== \"null\" && profileInfo.image !== null && profileInfo.image !== \"\"?\n                                <img className=\"profile-img-content\" src={process.env.REACT_APP_RESTAPI_HOST+\"resources/upload/\"+profileInfo.image} alt=\"profile_image\"\n                                onError={(e) => {\n                                    e.target.src = process.env.REACT_APP_DEFAULT_URL+'image/errorImage2.png';\n                                }}/>\n                                :null}\n                                </div>\n                                <div className=\"profile-info\">\n                                    <h1>{profileInfo.name} <span style={{marginLeft:'15px', fontSize:'18px'}}>{profileInfo.position_name}</span></h1>\n                                    <p>{profileInfo.phone}</p>\n                                    <p>{profileInfo.email}</p>\n                                </div>\n                            </div>\n\n                            <h2 className=\"mb10 fs20\">인사말</h2>\n                            <p className=\"introduce\">{profileInfo.intro.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}</p>\n\n                            <h2 className=\"mb25 fs20\">약력</h2>\n                            <ul className=\"profile-ul\">\n                                {profileInfo.memo.split(\"\\n\").map( (item, i) => <div key={i}>{item}</div>)}\n                            </ul>\n                        </div>\n                        <BlueButton class=\"profile-btn\" name=\"수정하기\" click={() => setisEdit(true)}/>\n                    </div>\n                }   \n                </div>\n            </div>\n            :\n            <ReactLoading type=\"spin\" color=\"#05589c\" />\n            }\n        </div>\n    );\n}\n\nexport default MypageProfile;\n","import React, { useState, useEffect, createRef } from 'react';\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\nimport { Link } from 'react-router-dom';\nimport WhiteButton from '../modules/button/white_button';\nimport { Editor, Viewer } from '@toast-ui/react-editor';\nimport \"../../assets/css/notice.css\";\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport GreyButton from '../modules/button/admin_grey_btn';\n\nfunction Notice() {\n    const [selectedNotice, setSelectedNotice] = useState(null);\n    const [selectedContent, setselectedContent] = useState(\"\");\n    const [editNotice, seteditNotice] = useState(null);\n    const [keyword, setkeyword] = useState(null);\n    const [NoticeInfo, setNoticeInfo] = useState(null);\n    const [mode, setmode] = useState(null);\n    const editorRef = createRef();\n    const readViewerRef = createRef();\n    const editEditorRef = createRef();\n    const [addTitle, setaddTitle] = useState(\"\");\n    const [administratorInfo, setAdministratorInfo] = useState(null);\n    const [page, setPage] = useState(1);\n    // eslint-disable-next-line no-unused-vars\n    const [postsPerPage, setpostsPerPage] = useState(10);\n\n    useEffect(() => {\n        readNotice();\n        readAdministratorInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n\n    function noticeClick(e) {\n\n        if (selectedNotice === null || selectedNotice !== e) {\n            setSelectedNotice(null);\n            clickedSetFunction(e);\n            setselectedContent(e.content);\n            seteditNotice(e);\n            setmode(\"read\");\n        }\n        else{\n            setSelectedNotice(null);\n            setmode(null);\n        }\n    }\n\n    const clickedSetFunction = (e) => {\n        setSelectedNotice(e);\n    }\n\n    const readAdministratorInfo = async () => {\n        if(parseInt(window.sessionStorage.getItem('status')) === 2){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'administrator/user/'+window.sessionStorage.getItem('id'), {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setAdministratorInfo(response.data);\n        }\n    }\n\n    function addNoticeClick(e) {\n        if (mode !== 'create')\n            setmode('create');\n        else\n            setSelectedNotice(\"read\");\n    }\n\n    const readNotice = async () => {\n        if(keyword !== '' && keyword !== null){\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'notice',\n                {\n                    params: {\n                        keyword: keyword,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setNoticeInfo(response.data)\n        }else {\n            const response = await axios.get(\n                process.env.REACT_APP_RESTAPI_HOST + 'notice', {\n                    params: {\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            );\n            setNoticeInfo(response.data)\n        }\n        setkeyword(null);\n    }\n\n    const createNotice = () => {\n        var lines = editorRef.current.getInstance().toastMark.lineTexts;\n        var addContent = lines.join(\"\\n\");\n        if(window.confirm(\"공지사항을 등록하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'notice',\n                    method: 'post',\n                    data: {\n                        administrator_id: administratorInfo.id,\n                        title: addTitle,\n                        content: addContent,\n                        important: 0,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"공지사항이 등록되었습니다.\");\n                readNotice();\n                setmode(null);\n                setaddTitle(\"\");\n            })\n        }\n    }\n\n    const editFinishBtn = () => {\n        var lines = editEditorRef.current.getInstance().toastMark.lineTexts;\n        var editContent = lines.join(\"\\n\");\n        let dataset = {...editNotice, content:editContent, token: window.sessionStorage.getItem('token'), manageID: window.sessionStorage.getItem('id')};\n        \n        if(window.confirm(\"공지사항을 수정하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'notice',\n                    method: 'put',\n                    data: dataset\n                }\n            ).then(function(res) {\n                alert(\"수정이 완료되었습니다.\")\n                readNotice();\n                setmode(null);\n                seteditNotice(null);\n                setSelectedNotice(null);\n            })\n        }\n    }\n\n    const onEdit = (e) => {\n        const { value, name } = e.target;\n        seteditNotice({\n            ...editNotice,\n            [name]: value\n        });\n    };\n\n    const cancelEditBtn = () => {\n        setmode(\"read\");\n        seteditNotice(selectedNotice);\n    }\n\n    const cancelReadBtn = () => {\n        setmode(null);\n        setaddTitle(\"\");\n    }\n\n    const deleteNotice = () => {\n        if(window.confirm(\"공지사항을 삭제하시겠습니까?\")) {\n            axios(\n                {\n                    url: process.env.REACT_APP_RESTAPI_HOST+'notice',\n                    method: 'delete',\n                    data: {\n                        notice_id: selectedNotice.id,\n                        token: window.sessionStorage.getItem('token'),\n                        manageID: window.sessionStorage.getItem('id')\n                    }\n                }\n            ).then(function(res) {\n                alert(\"삭제가 완료되었습니다.\")\n                readNotice();\n                setSelectedNotice(null);\n                setmode(null);\n            })\n        }\n    }\n\n    const handlePageChange = (page) => { \n        setPage(page); \n    };\n\n    function currentPosts(tmp) {\n        var indexOfLast = page * postsPerPage;\n        var indexOfFirst = indexOfLast - postsPerPage;\n\n        let currentPosts = 0;\n        currentPosts = NoticeInfo.slice(indexOfFirst, indexOfLast);\n        return currentPosts;\n    }\n\n    return (\n        <div>\n            <div className=\"main-image\">\n                <img className=\"page-background\" src={process.env.REACT_APP_DEFAULT_URL+\"image/notice.png\"} alt=\"lecture page\" />\n                <div className=\"page-info\">\n                    <h2>공지사항</h2>\n                    <p>사이트 이용 방법과 공지사항을 보여줍니다</p>\n                </div>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"left-navbar\">\n                    <span>\n                        <Link className=\"sub-title active\" to={process.env.REACT_APP_DEFAULT_URL+\"notice\"}>공지사항</Link>\n                    </span>\n                </div>\n                <div className=\"right-content\">\n                    {mode === null &&\n                        <div className=\"mb35\" style={{textAlign:'right'}}>\n                            <input className=\"p48 mr10\" type=\"text\" placeholder=\"제목, 내용, 글쓴이로 검색\" value={keyword || \"\"} onChange={(e)=>setkeyword(e.target.value)}/>\n                            <GreyButton name=\"검색\" click={readNotice}/>\n                        </div>\n                    }\n                    {selectedNotice !== null ?\n                        mode === \"edit\"?\n                        <div>\n                            <div className=\"detail-title notice-detail-title\">\n                                <h2 className=\"notice-header\"> 공지사항 글쓰기</h2>\n                                <input className=\"notice-input-title\" defaultValue={editNotice.title} name=\"title\" onChange={onEdit} placeholder=\"제목을 입력해주세요.\"/>\n                            </div>\n                            <div className=\"detail-content notice-detail-title notice-pc-editor\">\n                                <Editor\n                                    placeholder=\"내용을 입력해주세요\"\n                                    previewStyle=\"vertical\"\n                                    height=\"600px\"\n                                    initialEditType=\"markdown\"\n                                    initialValue={editNotice.content}\n                                    useCommandShortcut={true}\n                                    ref={editEditorRef}\n                                />\n                            </div>\n                            <div className=\"detail-content notice-detail-title notice-mobile-editor\">\n                                <Editor\n                                    placeholder=\"내용을 입력해주세요\"\n                                    previewStyle=\"horizon\"\n                                    height=\"600px\"\n                                    initialEditType=\"markdown\"\n                                    initialValue={editNotice.content}\n                                    useCommandShortcut={true}\n                                />\n                            </div>\n                            <div className=\"button-wrapper notice-create-button-wrapper\">\n                                <WhiteButton name=\"완료\" class=\"mr15\" click={()=>editFinishBtn()}/>\n                                <WhiteButton name=\"취소\" click={()=>cancelEditBtn()}/>\n                            </div>\n                        </div>\n                        :\n                        <div>\n                            <div className=\"detail-title\">\n                                <h2>{selectedNotice.title}</h2>\n                                <span>{selectedNotice.admin_name} 작성</span>\n                                <span className=\"detail-date\">{selectedNotice.reg_date}</span>\n                            </div>\n                            <div className=\"detail-content\">\n                                <Viewer\n                                initialValue={selectedContent}\n                                ref={readViewerRef}\n                                />\n                            </div>\n                            <div className=\"button-wrapper notice-button-wrapper\">\n                                <WhiteButton name=\"목록으로\" class=\"mr15\" click={()=>{setmode(null); setSelectedNotice(null)}}/>\n                                {\n                                    parseInt(window.sessionStorage.getItem('status')) === 2?\n                                    <span>\n                                        <WhiteButton name=\"수정\" class=\"mr15\" click={()=>setmode(\"edit\")}/>\n                                        <WhiteButton name=\"삭제\" click={()=>deleteNotice()}/>\n                                    </span>:null\n                                }\n                            </div>\n                        </div>\n                        : mode === \"create\" ?\n                        <div>\n                            <div className=\"detail-title notice-detail-title\">\n                                <h2 className=\"notice-header\"> 공지사항 글쓰기</h2>\n                                <input className=\"notice-input-title\" defaultValue={addTitle} onChange={(e)=>setaddTitle(e.target.value)}/>\n                            </div>\n                            <div className=\"detail-content notice-detail-title notice-pc-editor\">\n                                <Editor\n                                    placeholder=\"내용을 입력해주세요\"\n                                    previewStyle=\"vertical\"\n                                    height=\"600px\"\n                                    initialEditType=\"markdown\"\n                                    useCommandShortcut={true}\n                                    ref={editorRef}\n                                />\n                            </div>\n                            <div className=\"detail-content notice-detail-title notice-mobile-editor\">\n                                <Editor\n                                    placeholder=\"내용을 입력해주세요\"\n                                    previewStyle=\"horizon\"\n                                    height=\"600px\"\n                                    initialEditType=\"markdown\"\n                                    useCommandShortcut={true}\n                                />\n                            </div>\n                            <div className=\"button-wrapper notice-create-button-wrapper\">\n                                <WhiteButton name=\"완료\" class=\"mr15\" click={createNotice}/>\n                                <WhiteButton name=\"취소\" click={cancelReadBtn}/>\n                            </div>\n                        </div>\n                        :<div>\n                        </div>\n                    }\n                    {mode === null &&\n                    <div>\n                        <div className=\"table-wrapper\">\n                            <div className=\"table-row-user\" >\n                                <div className=\"th\">번호</div>\n                                <div className=\"th\">제목</div>\n                                <div className=\"th date\">글쓴이</div>\n                                <div className=\"th date\">등록일</div>\n                            </div>\n                            { NoticeInfo !== null && NoticeInfo.length > 0 ?\n                                currentPosts(NoticeInfo).map((notice, index) =>\n                                <div key={notice.id} className={notice === selectedNotice ? \" table-row-user click-inst-row\" : \"table-row-user\"} onClick={() => noticeClick(notice)}>\n                                    <div className=\"td\">{index+1}</div>\n                                    <div className=\"td\">{notice.title}</div>\n                                    <div className=\"td date\">{notice.admin_name}</div>\n                                    <div className=\"td date\">{notice.reg_date}</div>\n                                </div>\n                                )\n                                :\n                                <div className=\"no-content\">등록된 공지사항이 없습니다.</div>\n                            }\n                        </div>\n                        <Pagination \n                            activePage={page} \n                            itemsCountPerPage={postsPerPage} \n                            totalItemsCount={NoticeInfo !== null ? NoticeInfo.length : 0} \n                            pageRangeDisplayed={5} \n                            prevPageText={\"‹\"} \n                            nextPageText={\"›\"} \n                            onChange={handlePageChange} \n                        />\n                    </div>\n                    }\n                    {mode === null && parseInt(window.sessionStorage.getItem('status')) === 2?\n                        <div className=\"button-left-wrapper\"><WhiteButton name=\"글쓰기\" click={addNoticeClick}/></div>:null\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notice;\n","import React from \"react\";\nimport { Route, Switch, Redirect} from \"react-router-dom\";\n\nimport CommonMenu from \"../modules/menu/common\";\nimport Home from \"../pages/home\";\nimport LectureSubject from \"../pages/lecture/subject\";\nimport LectureInstructor from \"../pages/lecture/instructor\";\nimport LectureDate from \"../pages/lecture/date\";\nimport LectureApplication from \"../pages/lecture/application\";\nimport MypageUser from \"../pages/mypage/user\";\nimport MypageUserContacted from \"../pages/mypage/userContacted\";\nimport MypageContact from \"../pages/mypage/contact\";\nimport MypageLecture from \"../pages/mypage/lecture\";\nimport MypageVisitlog from \"../pages/mypage/visitDiary\";\nimport MypageProfile from \"../pages/mypage/profile\";\nimport Footer from '../modules/footer/footer';\nimport Notice from \"../pages/notice\";\n\n\nclass CommonLayout extends React.Component {\n  render() {\n    return (\n        <div>\n            <CommonMenu menu = {this.header} {...this.props}/>\n            <Switch>\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL} component= {Home} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"} component= {LectureSubject} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"} component= {LectureInstructor} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"} component= {LectureDate} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/application\"} component= {LectureApplication} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\"} component= {MypageUser} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/take\"} component= {MypageUserContacted} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"} component= {MypageLecture} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"} component= {MypageContact} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"} component= {MypageVisitlog} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"} component= {MypageProfile} />\n                <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"notice\"} component= {Notice} />\n                <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n            </Switch>\n            <Footer/>\n            \n        </div>\n    );\n  }\n}\n\nexport default CommonLayout;","import React from \"react\";\nimport { Route, Switch, Redirect} from \"react-router-dom\";\n\nimport AdminLayout from \"../components/layout/admin\";\nimport MainLayout from \"../components/layout/main\";\nimport CommonLayout from \"../components/layout/common\";\n\nconst header = [{name: \"강의보기\", url: \"lecture/subject\"}, {name: \"공지사항\", url: \"notice\"}, {name: \"사이트 관리\", url: \"admin/main\"}];\n\nclass Administrator extends React.Component {\n\n  render() {\n    return (\n      <Switch>\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL} render={() => <MainLayout menu = {header} {...this.props}/>} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"} render={() => <CommonLayout menu = {header} {...this.props}/>}/>\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"} render={() => <CommonLayout menu = {header} {...this.props}/>}/>\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/lecture\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/church_temp\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/church\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/instructor\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/main\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/users\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/feedback\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/category\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/administrator\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/phrase\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/contact\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/academy_date\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/visit_diary\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"admin/statistics\"} component= {AdminLayout} />\n          <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"notice\"} render={() => <CommonLayout menu = {header} {...this.props}/>}/>\n          <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n        </Switch>\n    );\n  }\n}\n\nexport default Administrator;","import React from \"react\";\nimport { Route, Switch, Redirect} from \"react-router-dom\";\n\nimport MainLayout from \"../components/layout/main\";\nimport CommonLayout from \"../components/layout/common\";\n\nconst header = [{url: \"lecture/subject\",name:\"강의보기\"}, {url: \"notice\",name:\"공지사항\"}, {url: \"mypage/profile\",name:\"마이페이지\"}];\n// const header = [{url: \"lecture/subject\",name:\"강의보기\"}, {url: \"notice\",name:\"공지사항\"}];\n\nclass Instructor extends React.Component {\n\n  render() {\n    return (\n        <Switch>\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL} render={() => <MainLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/lecture\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/contact\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/visitlog\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/profile\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"notice\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n        </Switch>\n    );\n  }\n}\n\nexport default Instructor;","import React from 'react'\n\nconst NotFound = () =>\n  <div>\n    <h3>404 page not found</h3>\n    <p>We are sorry but the page you are looking for does not exist.</p>\n  </div>\n\nexport default NotFound","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport MainLayout from \"../components/layout/main\";\nimport CommonLayout from \"../components/layout/common\";\nimport NotFound from \"../components/pages/notFound\";\n\nconst header = [{url: \"lecture/subject\",name:\"강의보기\"}, {url: \"notice\",name:\"공지사항\"}, {url: \"mypage/apply\",name:\"마이페이지\"}];\n// const header = [{url: \"lecture/subject\",name:\"강의보기\"}, {url: \"notice\",name:\"공지사항\"}];\n\nclass User extends React.Component {\n  render() {\n    return (\n        <Switch>\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL} render={() => <MainLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/application\"}render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/apply\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"mypage/take\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"notice\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route component={NotFound} />\n        </Switch>\n    );\n  }\n}\n\nexport default User;","import React from \"react\";\nimport { Route, Switch,Redirect} from \"react-router-dom\";\n\nimport MainLayout from \"../components/layout/main\";\nimport CommonLayout from \"../components/layout/common\";\n\nconst header = [{url: \"lecture/subject\",name:\"강의보기\"}, {url: \"notice\",name:\"공지사항\"}];\nclass NotLogin extends React.Component {\n  render() {\n    return (\n        <Switch>\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL} render={() => <MainLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/subject\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/instructor\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"lecture/date\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route exact path={process.env.REACT_APP_DEFAULT_URL+\"notice\"} render={() => <CommonLayout menu = {header} {...this.props}/>} />\n            <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n        </Switch>\n    );\n  }\n}\n\nexport default NotLogin;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\n\nimport Administrator from './routes/administrator';\nimport Instructor from './routes/instructor';\nimport User from './routes/user';\nimport NotLogin from './routes/notLogin';\n\naxios.interceptors.request.use(\n  function (config) {\n    const today = new Date();\n    const path = window.location.href.replace(process.env.REACT_APP_DEFAULT_WHOLE_URL, \"\");\n    console.log(\"hi\");\n    console.log(path);\n    console.log(\"111\");\n    if((window.sessionStorage.getItem(\"token\") == null || window.sessionStorage.getItem('expires_at') < today.getTime())&& !(window.location.href === process.env.REACT_APP_DEFAULT_WHOLE_URL || path === \"lecture/subject\" || path === \"lecture/instructor\" || path === \"lecture/date\" || path === \"notice\")){\n      alert(path +\"로그인 후 사용할 수 있습니다~:)\");\n      window.location.href = process.env.REACT_APP_DEFAULT_URL;\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  });\n\nclass App extends Component {\n    \n    render() {\n      const today = new Date();\n        return (\n            <Switch>\n            {\n                window.sessionStorage.getItem('token') !== null && parseInt(window.sessionStorage.getItem(\"status\")) === 2 && window.sessionStorage.getItem('expires_at') >= today.getTime() ?\n                    <Route path={process.env.REACT_APP_DEFAULT_URL} component= {Administrator} />\n                :window.sessionStorage.getItem('token') !== null && parseInt(window.sessionStorage.getItem(\"status\")) === 1 && window.sessionStorage.getItem('expires_at') >= today.getTime()?\n                <Route path={process.env.REACT_APP_DEFAULT_URL} component= {Instructor} />\n                :window.sessionStorage.getItem('token') !== null && parseInt(window.sessionStorage.getItem(\"status\")) === 0 && window.sessionStorage.getItem('expires_at') >= today.getTime()?\n                <Route path={process.env.REACT_APP_DEFAULT_URL} component= {User} />:\n                <Route path={process.env.REACT_APP_DEFAULT_URL} component= {NotLogin} />\n            }\n                <Route><Redirect to={process.env.REACT_APP_DEFAULT_URL} /></Route>\n            </Switch>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport APP from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// 어떤 주소로 왔을때 무엇을 보여줄지 정의하는 곳\nReactDOM.render(\n    <BrowserRouter><APP /></BrowserRouter>,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}